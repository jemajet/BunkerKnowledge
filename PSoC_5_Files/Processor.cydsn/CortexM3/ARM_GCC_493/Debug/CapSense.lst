ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              	CapSense_initVar:
  20 0000 00       		.space	1
  21              		.comm	CapSense_csv,1,1
  22              		.comm	CapSense_sensorIndex,1,1
  23              		.global	CapSense_lowLevelTuningDone
  24              		.data
  25              		.type	CapSense_lowLevelTuningDone, %object
  26              		.size	CapSense_lowLevelTuningDone, 1
  27              	CapSense_lowLevelTuningDone:
  28 0000 01       		.byte	1
  29              		.comm	CapSense_sensorRaw,4,4
  30              		.global	CapSense_sensorEnableMask
  31 0001 000000   		.align	2
  32              		.type	CapSense_sensorEnableMask, %object
  33              		.size	CapSense_sensorEnableMask, 1
  34              	CapSense_sensorEnableMask:
  35 0004 03       		.byte	3
  36              		.global	CapSense_pcTable
  37              		.section	.rodata
  38              		.align	2
  39              		.type	CapSense_pcTable, %object
  40              		.size	CapSense_pcTable, 8
  41              	CapSense_pcTable:
  42 0000 2D500040 		.word	1073762349
  43 0004 2E500040 		.word	1073762350
  44              		.global	CapSense_portTable
  45              		.align	2
  46              		.type	CapSense_portTable, %object
  47              		.size	CapSense_portTable, 2
  48              	CapSense_portTable:
  49 0008 05       		.byte	5
  50 0009 05       		.byte	5
  51              		.global	CapSense_maskTable
  52 000a 0000     		.align	2
  53              		.type	CapSense_maskTable, %object
  54              		.size	CapSense_maskTable, 2
  55              	CapSense_maskTable:
  56 000c 20       		.byte	32
  57 000d 40       		.byte	64
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 2


  58              		.global	CapSense_csTable
  59 000e 0000     		.align	2
  60              		.type	CapSense_csTable, %object
  61              		.size	CapSense_csTable, 32
  62              	CapSense_csTable:
  63 0010 06520040 		.word	1073762822
  64 0014 0E520040 		.word	1073762830
  65 0018 16520040 		.word	1073762838
  66 001c 1E520040 		.word	1073762846
  67 0020 26520040 		.word	1073762854
  68 0024 2E520040 		.word	1073762862
  69 0028 36520040 		.word	1073762870
  70 002c 7E520040 		.word	1073762942
  71              		.global	CapSense_idacSettings
  72              		.data
  73 0005 000000   		.align	2
  74              		.type	CapSense_idacSettings, %object
  75              		.size	CapSense_idacSettings, 2
  76              	CapSense_idacSettings:
  77 0008 C8       		.byte	-56
  78 0009 C8       		.byte	-56
  79              		.global	CapSense_widgetResolution
  80 000a 0000     		.align	2
  81              		.type	CapSense_widgetResolution, %object
  82              		.size	CapSense_widgetResolution, 2
  83              	CapSense_widgetResolution:
  84 000c 03       		.byte	3
  85 000d 03       		.byte	3
  86              		.comm	CapSense_analogSwitchDivider,2,4
  87              		.global	CapSense_widgetNumber
  88 000e 0000     		.section	.rodata
  89              		.align	2
  90              		.type	CapSense_widgetNumber, %object
  91              		.size	CapSense_widgetNumber, 2
  92              	CapSense_widgetNumber:
  93 0030 00       		.byte	0
  94 0031 01       		.byte	1
  95 0032 0000     		.section	.text.CapSense_Init,"ax",%progbits
  96              		.align	2
  97              		.global	CapSense_Init
  98              		.thumb
  99              		.thumb_func
 100              		.type	CapSense_Init, %function
 101              	CapSense_Init:
 102              	.LFB0:
 103              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense.c"
   1:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:.\Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense.c **** *
   5:.\Generated_Source\PSoC5/CapSense.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC5/CapSense.c **** *  component.
   8:.\Generated_Source\PSoC5/CapSense.c **** *
   9:.\Generated_Source\PSoC5/CapSense.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense.c **** *
  11:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 3


  12:.\Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense.c **** 
  18:.\Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC5/CapSense.c **** 
  20:.\Generated_Source\PSoC5/CapSense.c **** 
  21:.\Generated_Source\PSoC5/CapSense.c **** 
  22:.\Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:.\Generated_Source\PSoC5/CapSense.c ****             
  24:.\Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:.\Generated_Source\PSoC5/CapSense.c **** 
  28:.\Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  31:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:.\Generated_Source\PSoC5/CapSense.c **** 
  33:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:.\Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:.\Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:.\Generated_Source\PSoC5/CapSense.c ****         
  40:.\Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:.\Generated_Source\PSoC5/CapSense.c **** 
  43:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:.\Generated_Source\PSoC5/CapSense.c **** 0x3u, };
  45:.\Generated_Source\PSoC5/CapSense.c **** 
  46:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  48:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  49:.\Generated_Source\PSoC5/CapSense.c **** };
  50:.\Generated_Source\PSoC5/CapSense.c **** 
  51:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  52:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  53:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  54:.\Generated_Source\PSoC5/CapSense.c **** };
  55:.\Generated_Source\PSoC5/CapSense.c **** 
  56:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  57:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  58:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  59:.\Generated_Source\PSoC5/CapSense.c **** };
  60:.\Generated_Source\PSoC5/CapSense.c **** 
  61:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  62:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  63:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  64:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  65:.\Generated_Source\PSoC5/CapSense.c **** };
  66:.\Generated_Source\PSoC5/CapSense.c **** 
  67:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  68:.\Generated_Source\PSoC5/CapSense.c ****     200u,200u,
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 4


  69:.\Generated_Source\PSoC5/CapSense.c **** };
  70:.\Generated_Source\PSoC5/CapSense.c **** 
  71:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  72:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  73:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  74:.\Generated_Source\PSoC5/CapSense.c **** };
  75:.\Generated_Source\PSoC5/CapSense.c **** 
  76:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  77:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  78:.\Generated_Source\PSoC5/CapSense.c ****     0u, /* Button0__BTN */
  79:.\Generated_Source\PSoC5/CapSense.c ****     1u, /* Button1__BTN */
  80:.\Generated_Source\PSoC5/CapSense.c ****     
  81:.\Generated_Source\PSoC5/CapSense.c **** };
  82:.\Generated_Source\PSoC5/CapSense.c **** 
  83:.\Generated_Source\PSoC5/CapSense.c **** 
  84:.\Generated_Source\PSoC5/CapSense.c **** 
  85:.\Generated_Source\PSoC5/CapSense.c **** 
  86:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  87:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  88:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  89:.\Generated_Source\PSoC5/CapSense.c **** *
  90:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
  91:.\Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  92:.\Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
  93:.\Generated_Source\PSoC5/CapSense.c **** *
  94:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
  95:.\Generated_Source\PSoC5/CapSense.c **** *  None
  96:.\Generated_Source\PSoC5/CapSense.c **** *
  97:.\Generated_Source\PSoC5/CapSense.c **** * Return:
  98:.\Generated_Source\PSoC5/CapSense.c **** *  None
  99:.\Generated_Source\PSoC5/CapSense.c **** *
 100:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 102:.\Generated_Source\PSoC5/CapSense.c **** {
 104              		.loc 1 102 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 82B0     		sub	sp, sp, #8
 113              		.cfi_def_cfa_offset 16
 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 104:.\Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 105:.\Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 106:.\Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 107:.\Generated_Source\PSoC5/CapSense.c ****         
 108:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 109:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 110:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 111:.\Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 112:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 113:.\Generated_Source\PSoC5/CapSense.c ****            */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 5


 114:.\Generated_Source\PSoC5/CapSense.c ****     
 115:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 116:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 116              		.loc 1 116 0
 117 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 117:.\Generated_Source\PSoC5/CapSense.c **** 
 118:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 119:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 120:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 121:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 122:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 123:.\Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 124:.\Generated_Source\PSoC5/CapSense.c ****                                                
 125:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 126:.\Generated_Source\PSoC5/CapSense.c ****     #else
 127:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 128:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 129:.\Generated_Source\PSoC5/CapSense.c **** 
 130:.\Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 131:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 132:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 118              		.loc 1 132 0
 119 000a 0220     		movs	r0, #2
 120 000c FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 133:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 134:.\Generated_Source\PSoC5/CapSense.c **** 
 135:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 136:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 137:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 138:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 139:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 140:.\Generated_Source\PSoC5/CapSense.c ****         
 141:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 142:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 143:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 144:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 145:.\Generated_Source\PSoC5/CapSense.c ****         
 146:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 147:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 148:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 121              		.loc 1 148 0
 122 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 123 0014 0346     		mov	r3, r0
 124 0016 FB71     		strb	r3, [r7, #7]
 149:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 125              		.loc 1 149 0
 126 0018 3B4A     		ldr	r2, .L2
 127 001a 3B4B     		ldr	r3, .L2
 128 001c 1B78     		ldrb	r3, [r3]
 129 001e DBB2     		uxtb	r3, r3
 130 0020 43F00303 		orr	r3, r3, #3
 131 0024 DBB2     		uxtb	r3, r3
 132 0026 1370     		strb	r3, [r2]
 150:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 133              		.loc 1 150 0
 134 0028 384A     		ldr	r2, .L2+4
 135 002a 384B     		ldr	r3, .L2+4
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 6


 136 002c 1B78     		ldrb	r3, [r3]
 137 002e DBB2     		uxtb	r3, r3
 138 0030 43F00303 		orr	r3, r3, #3
 139 0034 DBB2     		uxtb	r3, r3
 140 0036 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 141              		.loc 1 151 0
 142 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 003a 1846     		mov	r0, r3
 144 003c FFF7FEFF 		bl	CyExitCriticalSection
 152:.\Generated_Source\PSoC5/CapSense.c ****         
 153:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 154:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 145              		.loc 1 154 0
 146 0040 334B     		ldr	r3, .L2+8
 147 0042 4FF43442 		mov	r2, #46080
 148 0046 1A80     		strh	r2, [r3]	@ movhi
 155:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 156:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 149              		.loc 1 156 0
 150 0048 324B     		ldr	r3, .L2+12
 151 004a 4FF6FF72 		movw	r2, #65535
 152 004e 1A80     		strh	r2, [r3]	@ movhi
 157:.\Generated_Source\PSoC5/CapSense.c ****                 
 158:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 159:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 160:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 161:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 162:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 163:.\Generated_Source\PSoC5/CapSense.c ****         
 164:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 165:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 166:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 167:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 168:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 169:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 170:.\Generated_Source\PSoC5/CapSense.c ****         
 171:.\Generated_Source\PSoC5/CapSense.c ****     #else
 172:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 173:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 174:.\Generated_Source\PSoC5/CapSense.c ****     
 175:.\Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 176:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 153              		.loc 1 176 0
 154 0050 314B     		ldr	r3, .L2+16
 155 0052 0722     		movs	r2, #7
 156 0054 1A70     		strb	r2, [r3]
 177:.\Generated_Source\PSoC5/CapSense.c ****     
 178:.\Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 179:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 180:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 181:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 182:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 183:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 184:.\Generated_Source\PSoC5/CapSense.c ****         
 185:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 186:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 7


 187:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 188:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 189:.\Generated_Source\PSoC5/CapSense.c ****     
 190:.\Generated_Source\PSoC5/CapSense.c ****     #else
 191:.\Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 192:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 157              		.loc 1 192 0
 158 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 159 005a 0346     		mov	r3, r0
 160 005c FB71     		strb	r3, [r7, #7]
 193:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 161              		.loc 1 193 0
 162 005e 2F4A     		ldr	r2, .L2+20
 163 0060 2E4B     		ldr	r3, .L2+20
 164 0062 1B78     		ldrb	r3, [r3]
 165 0064 DBB2     		uxtb	r3, r3
 166 0066 43F00303 		orr	r3, r3, #3
 167 006a DBB2     		uxtb	r3, r3
 168 006c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 169              		.loc 1 194 0
 170 006e 2C4A     		ldr	r2, .L2+24
 171 0070 2B4B     		ldr	r3, .L2+24
 172 0072 1B78     		ldrb	r3, [r3]
 173 0074 DBB2     		uxtb	r3, r3
 174 0076 43F00303 		orr	r3, r3, #3
 175 007a DBB2     		uxtb	r3, r3
 176 007c 1370     		strb	r3, [r2]
 195:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 177              		.loc 1 195 0
 178 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 179 0080 1846     		mov	r0, r3
 180 0082 FFF7FEFF 		bl	CyExitCriticalSection
 196:.\Generated_Source\PSoC5/CapSense.c ****         
 197:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 198:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 181              		.loc 1 198 0
 182 0086 274B     		ldr	r3, .L2+28
 183 0088 FF22     		movs	r2, #255
 184 008a 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 185              		.loc 1 199 0
 186 008c 264B     		ldr	r3, .L2+32
 187 008e FF22     		movs	r2, #255
 188 0090 1A70     		strb	r2, [r3]
 200:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 189              		.loc 1 200 0
 190 0092 264B     		ldr	r3, .L2+36
 191 0094 FF22     		movs	r2, #255
 192 0096 1A70     		strb	r2, [r3]
 201:.\Generated_Source\PSoC5/CapSense.c ****         
 202:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 203:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 193              		.loc 1 203 0
 194 0098 254B     		ldr	r3, .L2+40
 195 009a FF22     		movs	r2, #255
 196 009c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 8


 204:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 197              		.loc 1 204 0
 198 009e 254B     		ldr	r3, .L2+44
 199 00a0 FF22     		movs	r2, #255
 200 00a2 1A70     		strb	r2, [r3]
 205:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 201              		.loc 1 205 0
 202 00a4 244B     		ldr	r3, .L2+48
 203 00a6 FF22     		movs	r2, #255
 204 00a8 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/CapSense.c ****         
 207:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 208:.\Generated_Source\PSoC5/CapSense.c ****     
 209:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 210:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 211:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 212:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 215:.\Generated_Source\PSoC5/CapSense.c ****             
 216:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 217:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 218:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 219:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 220:.\Generated_Source\PSoC5/CapSense.c ****            
 221:.\Generated_Source\PSoC5/CapSense.c ****         #else
 222:.\Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 223:.\Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 224:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 225:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 226:.\Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 227:.\Generated_Source\PSoC5/CapSense.c ****             
 228:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 229:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 230:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 231:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 232:.\Generated_Source\PSoC5/CapSense.c ****             
 233:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 234:.\Generated_Source\PSoC5/CapSense.c ****             
 235:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 236:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 237:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 238:.\Generated_Source\PSoC5/CapSense.c ****             
 239:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 240:.\Generated_Source\PSoC5/CapSense.c ****     
 241:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 242:.\Generated_Source\PSoC5/CapSense.c ****     
 243:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 244:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 205              		.loc 1 244 0
 206 00aa 244B     		ldr	r3, .L2+52
 207 00ac 0122     		movs	r2, #1
 208 00ae 1A60     		str	r2, [r3]
 245:.\Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 209              		.loc 1 245 0
 210 00b0 0020     		movs	r0, #0
 211 00b2 2349     		ldr	r1, .L2+56
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 9


 212 00b4 FFF7FEFF 		bl	CyIntSetVector
 246:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 213              		.loc 1 246 0
 214 00b8 0020     		movs	r0, #0
 215 00ba 0721     		movs	r1, #7
 216 00bc FFF7FEFF 		bl	CyIntSetPriority
 247:.\Generated_Source\PSoC5/CapSense.c ****     
 248:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 249:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 250:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 251:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 252:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 253:.\Generated_Source\PSoC5/CapSense.c ****     
 254:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 255:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 217              		.loc 1 255 0
 218 00c0 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 256:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 219              		.loc 1 256 0
 220 00c4 0220     		movs	r0, #2
 221 00c6 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 257:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 222              		.loc 1 257 0
 223 00ca 0320     		movs	r0, #3
 224 00cc FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 258:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 259:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 225              		.loc 1 259 0
 226 00d0 0420     		movs	r0, #4
 227 00d2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 260:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 261:.\Generated_Source\PSoC5/CapSense.c ****     
 262:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 263:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 264:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 265:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 266:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 267:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 268:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 269:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 270:.\Generated_Source\PSoC5/CapSense.c ****     
 271:.\Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 272:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 273:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 274:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 275:.\Generated_Source\PSoC5/CapSense.c ****     
 276:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 277:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 228              		.loc 1 277 0
 229 00d6 1B4A     		ldr	r2, .L2+60
 230 00d8 1A4B     		ldr	r3, .L2+60
 231 00da 1B78     		ldrb	r3, [r3]
 232 00dc DBB2     		uxtb	r3, r3
 233 00de 43F00403 		orr	r3, r3, #4
 234 00e2 DBB2     		uxtb	r3, r3
 235 00e4 1370     		strb	r3, [r2]
 278:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 10


 279:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 280:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 281:.\Generated_Source\PSoC5/CapSense.c ****     
 282:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 283:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 236              		.loc 1 283 0
 237 00e6 FFF7FEFF 		bl	CapSense_CompCH0_Init
 284:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 285:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 238              		.loc 1 285 0
 239 00ea FFF7FEFF 		bl	CapSense_IdacCH0_Init
 286:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 240              		.loc 1 286 0
 241 00ee 0020     		movs	r0, #0
 242 00f0 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 287:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 243              		.loc 1 287 0
 244 00f4 0420     		movs	r0, #4
 245 00f6 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 288:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 246              		.loc 1 288 0
 247 00fa 0020     		movs	r0, #0
 248 00fc FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 289:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 290:.\Generated_Source\PSoC5/CapSense.c ****     
 291:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 292:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 293:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 294:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 295:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 296:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 297:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 298:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 299:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 300:.\Generated_Source\PSoC5/CapSense.c ****     
 301:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 302:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 303:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 304:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 305:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 306:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 307:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 308:.\Generated_Source\PSoC5/CapSense.c **** }
 249              		.loc 1 308 0
 250 0100 0837     		adds	r7, r7, #8
 251              		.cfi_def_cfa_offset 8
 252 0102 BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 0104 80BD     		pop	{r7, pc}
 256              	.L3:
 257 0106 00BF     		.align	2
 258              	.L2:
 259 0108 99640040 		.word	1073767577
 260 010c 9A640040 		.word	1073767578
 261 0110 29640040 		.word	1073767465
 262 0114 49640040 		.word	1073767497
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 11


 263 0118 8E640040 		.word	1073767566
 264 011c 9A650040 		.word	1073767834
 265 0120 9C640040 		.word	1073767580
 266 0124 2A650040 		.word	1073767722
 267 0128 4A650040 		.word	1073767754
 268 012c 0A650040 		.word	1073767690
 269 0130 2C640040 		.word	1073767468
 270 0134 5C640040 		.word	1073767516
 271 0138 4C640040 		.word	1073767500
 272 013c 80E100E0 		.word	-536813184
 273 0140 00000000 		.word	CapSense_IsrCH0_ISR
 274 0144 7B640040 		.word	1073767547
 275              		.cfi_endproc
 276              	.LFE0:
 277              		.size	CapSense_Init, .-CapSense_Init
 278              		.section	.text.CapSense_Enable,"ax",%progbits
 279              		.align	2
 280              		.global	CapSense_Enable
 281              		.thumb
 282              		.thumb_func
 283              		.type	CapSense_Enable, %function
 284              	CapSense_Enable:
 285              	.LFB1:
 309:.\Generated_Source\PSoC5/CapSense.c **** 
 310:.\Generated_Source\PSoC5/CapSense.c **** 
 311:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 313:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/CapSense.c **** *
 315:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 316:.\Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 317:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 318:.\Generated_Source\PSoC5/CapSense.c **** *
 319:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 320:.\Generated_Source\PSoC5/CapSense.c **** *  None
 321:.\Generated_Source\PSoC5/CapSense.c **** *
 322:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 323:.\Generated_Source\PSoC5/CapSense.c **** *  None
 324:.\Generated_Source\PSoC5/CapSense.c **** *
 325:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 327:.\Generated_Source\PSoC5/CapSense.c **** {
 286              		.loc 1 327 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 8
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 82B0     		sub	sp, sp, #8
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 328:.\Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC5/CapSense.c ****     
 330:.\Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 12


 298              		.loc 1 330 0
 299 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 300 000a 0346     		mov	r3, r0
 301 000c FB71     		strb	r3, [r7, #7]
 331:.\Generated_Source\PSoC5/CapSense.c ****     
 332:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 333:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 334:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 335:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 336:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 337:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 338:.\Generated_Source\PSoC5/CapSense.c ****         
 339:.\Generated_Source\PSoC5/CapSense.c ****     #else
 340:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 341:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 342:.\Generated_Source\PSoC5/CapSense.c ****     
 343:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 344:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 302              		.loc 1 344 0
 303 000e 1C4A     		ldr	r2, .L5
 304 0010 1B4B     		ldr	r3, .L5
 305 0012 1B78     		ldrb	r3, [r3]
 306 0014 DBB2     		uxtb	r3, r3
 307 0016 43F02003 		orr	r3, r3, #32
 308 001a DBB2     		uxtb	r3, r3
 309 001c 1370     		strb	r3, [r2]
 345:.\Generated_Source\PSoC5/CapSense.c ****     
 346:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 347:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 348:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 349:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 350:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 351:.\Generated_Source\PSoC5/CapSense.c ****         
 352:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 353:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 354:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 355:.\Generated_Source\PSoC5/CapSense.c ****         
 356:.\Generated_Source\PSoC5/CapSense.c ****     #else
 357:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 358:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 359:.\Generated_Source\PSoC5/CapSense.c ****         
 360:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 361:.\Generated_Source\PSoC5/CapSense.c ****     
 362:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 363:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 364:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 365:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 366:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 367:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 368:.\Generated_Source\PSoC5/CapSense.c ****             
 369:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 370:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 371:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 372:.\Generated_Source\PSoC5/CapSense.c ****            
 373:.\Generated_Source\PSoC5/CapSense.c ****         #else
 374:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 375:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 13


 376:.\Generated_Source\PSoC5/CapSense.c ****         
 377:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 378:.\Generated_Source\PSoC5/CapSense.c ****     
 379:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 380:.\Generated_Source\PSoC5/CapSense.c ****     
 381:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 382:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 383:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
 310              		.loc 1 383 0
 311 001e FFF7FEFF 		bl	CapSense_IntClock_Start
 384:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 385:.\Generated_Source\PSoC5/CapSense.c ****     
 386:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 387:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 312              		.loc 1 387 0
 313 0022 FFF7FEFF 		bl	CapSense_CompCH0_Enable
 388:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 389:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 314              		.loc 1 389 0
 315 0026 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 390:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 391:.\Generated_Source\PSoC5/CapSense.c ****     
 392:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 393:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 394:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 395:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 396:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 397:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 398:.\Generated_Source\PSoC5/CapSense.c ****     
 399:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 400:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 401:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 402:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 403:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 404:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 405:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 406:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 407:.\Generated_Source\PSoC5/CapSense.c ****     #else
 408:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 409:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 316              		.loc 1 409 0
 317 002a 164A     		ldr	r2, .L5+4
 318 002c 154B     		ldr	r3, .L5+4
 319 002e 1B78     		ldrb	r3, [r3]
 320 0030 DBB2     		uxtb	r3, r3
 321 0032 43F01003 		orr	r3, r3, #16
 322 0036 DBB2     		uxtb	r3, r3
 323 0038 1370     		strb	r3, [r2]
 410:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 324              		.loc 1 410 0
 325 003a 134A     		ldr	r2, .L5+8
 326 003c 124B     		ldr	r3, .L5+8
 327 003e 1B78     		ldrb	r3, [r3]
 328 0040 DBB2     		uxtb	r3, r3
 329 0042 43F01003 		orr	r3, r3, #16
 330 0046 DBB2     		uxtb	r3, r3
 331 0048 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 14


 411:.\Generated_Source\PSoC5/CapSense.c ****         
 412:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 413:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 414:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 415:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 416:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 417:.\Generated_Source\PSoC5/CapSense.c ****     
 418:.\Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 419:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 420:.\Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 421:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 422:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 423:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 424:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 425:.\Generated_Source\PSoC5/CapSense.c ****         
 426:.\Generated_Source\PSoC5/CapSense.c ****     #else
 427:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 428:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 332              		.loc 1 428 0
 333 004a 104A     		ldr	r2, .L5+12
 334 004c 0F4B     		ldr	r3, .L5+12
 335 004e 1B78     		ldrb	r3, [r3]
 336 0050 DBB2     		uxtb	r3, r3
 337 0052 43F00103 		orr	r3, r3, #1
 338 0056 DBB2     		uxtb	r3, r3
 339 0058 1370     		strb	r3, [r2]
 429:.\Generated_Source\PSoC5/CapSense.c ****         
 430:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 431:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 432:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 433:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 434:.\Generated_Source\PSoC5/CapSense.c ****     
 435:.\Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 340              		.loc 1 435 0
 341 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 342 005c 1846     		mov	r0, r3
 343 005e FFF7FEFF 		bl	CyExitCriticalSection
 436:.\Generated_Source\PSoC5/CapSense.c ****     
 437:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 438:.\Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
 344              		.loc 1 438 0
 345 0062 0B4B     		ldr	r3, .L5+16
 346 0064 0122     		movs	r2, #1
 347 0066 1A60     		str	r2, [r3]
 439:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 440:.\Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 441:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 442:.\Generated_Source\PSoC5/CapSense.c ****     
 443:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 444:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 348              		.loc 1 444 0
 349 0068 0A4A     		ldr	r2, .L5+20
 350 006a 0A4B     		ldr	r3, .L5+20
 351 006c 1B78     		ldrb	r3, [r3]
 352 006e DBB2     		uxtb	r3, r3
 353 0070 63F07F03 		orn	r3, r3, #127
 354 0074 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 15


 355 0076 1370     		strb	r3, [r2]
 445:.\Generated_Source\PSoC5/CapSense.c **** }
 356              		.loc 1 445 0
 357 0078 0837     		adds	r7, r7, #8
 358              		.cfi_def_cfa_offset 8
 359 007a BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 007c 80BD     		pop	{r7, pc}
 363              	.L6:
 364 007e 00BF     		.align	2
 365              	.L5:
 366 0080 9E640040 		.word	1073767582
 367 0084 BB430040 		.word	1073759163
 368 0088 AB430040 		.word	1073759147
 369 008c 70580040 		.word	1073764464
 370 0090 00E100E0 		.word	-536813312
 371 0094 7B640040 		.word	1073767547
 372              		.cfi_endproc
 373              	.LFE1:
 374              		.size	CapSense_Enable, .-CapSense_Enable
 375              		.section	.text.CapSense_Start,"ax",%progbits
 376              		.align	2
 377              		.global	CapSense_Start
 378              		.thumb
 379              		.thumb_func
 380              		.type	CapSense_Start, %function
 381              	CapSense_Start:
 382              	.LFB2:
 446:.\Generated_Source\PSoC5/CapSense.c **** 
 447:.\Generated_Source\PSoC5/CapSense.c **** 
 448:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 450:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 451:.\Generated_Source\PSoC5/CapSense.c **** *
 452:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 453:.\Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 454:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 455:.\Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 456:.\Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 457:.\Generated_Source\PSoC5/CapSense.c **** *
 458:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 459:.\Generated_Source\PSoC5/CapSense.c **** *  None
 460:.\Generated_Source\PSoC5/CapSense.c **** *
 461:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 462:.\Generated_Source\PSoC5/CapSense.c **** *  None
 463:.\Generated_Source\PSoC5/CapSense.c **** *
 464:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 465:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 466:.\Generated_Source\PSoC5/CapSense.c **** *  first function call.
 467:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 468:.\Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 469:.\Generated_Source\PSoC5/CapSense.c **** *
 470:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 471:.\Generated_Source\PSoC5/CapSense.c **** *  No
 472:.\Generated_Source\PSoC5/CapSense.c **** *
 473:.\Generated_Source\PSoC5/CapSense.c **** * Note:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 16


 474:.\Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 475:.\Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 476:.\Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 477:.\Generated_Source\PSoC5/CapSense.c **** *
 478:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 480:.\Generated_Source\PSoC5/CapSense.c **** {
 383              		.loc 1 480 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 481:.\Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 393              		.loc 1 481 0
 394 0004 084B     		ldr	r3, .L9
 395 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 0008 002B     		cmp	r3, #0
 397 000a 04D1     		bne	.L8
 482:.\Generated_Source\PSoC5/CapSense.c ****     {
 483:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 398              		.loc 1 483 0
 399 000c FFF7FEFF 		bl	CapSense_Init
 484:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 400              		.loc 1 484 0
 401 0010 054B     		ldr	r3, .L9
 402 0012 0122     		movs	r2, #1
 403 0014 1A70     		strb	r2, [r3]
 404              	.L8:
 485:.\Generated_Source\PSoC5/CapSense.c ****     }
 486:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 405              		.loc 1 486 0
 406 0016 FFF7FEFF 		bl	CapSense_Enable
 487:.\Generated_Source\PSoC5/CapSense.c ****     
 488:.\Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 489:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 490:.\Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 491:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 407              		.loc 1 491 0
 408 001a FFF7FEFF 		bl	CapSense_AutoTune
 492:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 409              		.loc 1 492 0
 410 001e 034B     		ldr	r3, .L9+4
 411 0020 0122     		movs	r2, #1
 412 0022 1A70     		strb	r2, [r3]
 493:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 494:.\Generated_Source\PSoC5/CapSense.c **** }
 413              		.loc 1 494 0
 414 0024 80BD     		pop	{r7, pc}
 415              	.L10:
 416 0026 00BF     		.align	2
 417              	.L9:
 418 0028 00000000 		.word	CapSense_initVar
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 17


 419 002c 00000000 		.word	CapSense_lowLevelTuningDone
 420              		.cfi_endproc
 421              	.LFE2:
 422              		.size	CapSense_Start, .-CapSense_Start
 423              		.section	.text.CapSense_Stop,"ax",%progbits
 424              		.align	2
 425              		.global	CapSense_Stop
 426              		.thumb
 427              		.thumb_func
 428              		.type	CapSense_Stop, %function
 429              	CapSense_Stop:
 430              	.LFB3:
 495:.\Generated_Source\PSoC5/CapSense.c **** 
 496:.\Generated_Source\PSoC5/CapSense.c **** 
 497:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 499:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 500:.\Generated_Source\PSoC5/CapSense.c **** *
 501:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 502:.\Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 503:.\Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 504:.\Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 505:.\Generated_Source\PSoC5/CapSense.c **** *
 506:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 507:.\Generated_Source\PSoC5/CapSense.c **** *  None
 508:.\Generated_Source\PSoC5/CapSense.c **** *
 509:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 510:.\Generated_Source\PSoC5/CapSense.c **** *  None
 511:.\Generated_Source\PSoC5/CapSense.c **** *
 512:.\Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 513:.\Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 514:.\Generated_Source\PSoC5/CapSense.c **** *
 515:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 516:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 517:.\Generated_Source\PSoC5/CapSense.c **** {
 431              		.loc 1 517 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435 0000 80B5     		push	{r7, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 518:.\Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 519:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 441              		.loc 1 519 0
 442 0004 1D4A     		ldr	r2, .L12
 443 0006 1D4B     		ldr	r3, .L12
 444 0008 1B78     		ldrb	r3, [r3]
 445 000a DBB2     		uxtb	r3, r3
 446 000c 23F00203 		bic	r3, r3, #2
 447 0010 DBB2     		uxtb	r3, r3
 448 0012 1370     		strb	r3, [r2]
 520:.\Generated_Source\PSoC5/CapSense.c ****     
 521:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 18


 522:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 449              		.loc 1 522 0
 450 0014 1A4B     		ldr	r3, .L12+4
 451 0016 0122     		movs	r2, #1
 452 0018 1A60     		str	r2, [r3]
 523:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 524:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 525:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 526:.\Generated_Source\PSoC5/CapSense.c ****     
 527:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 528:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 453              		.loc 1 528 0
 454 001a FFF7FEFF 		bl	CapSense_ClearSensors
 529:.\Generated_Source\PSoC5/CapSense.c ****     
 530:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 531:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 532:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 533:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 534:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 535:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 536:.\Generated_Source\PSoC5/CapSense.c ****         
 537:.\Generated_Source\PSoC5/CapSense.c ****     #else
 538:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 539:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 540:.\Generated_Source\PSoC5/CapSense.c ****     
 541:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 542:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 455              		.loc 1 542 0
 456 001e 194A     		ldr	r2, .L12+8
 457 0020 184B     		ldr	r3, .L12+8
 458 0022 1B78     		ldrb	r3, [r3]
 459 0024 DBB2     		uxtb	r3, r3
 460 0026 23F02003 		bic	r3, r3, #32
 461 002a DBB2     		uxtb	r3, r3
 462 002c 1370     		strb	r3, [r2]
 543:.\Generated_Source\PSoC5/CapSense.c ****     
 544:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 545:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 546:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 547:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 548:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 549:.\Generated_Source\PSoC5/CapSense.c **** 
 550:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 551:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 552:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 553:.\Generated_Source\PSoC5/CapSense.c **** 
 554:.\Generated_Source\PSoC5/CapSense.c ****     #else
 555:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 556:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 557:.\Generated_Source\PSoC5/CapSense.c ****         
 558:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 559:.\Generated_Source\PSoC5/CapSense.c ****     
 560:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 561:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 562:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 563:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 564:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 19


 565:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 566:.\Generated_Source\PSoC5/CapSense.c ****     
 567:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 568:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 569:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 570:.\Generated_Source\PSoC5/CapSense.c ****            
 571:.\Generated_Source\PSoC5/CapSense.c ****         #else
 572:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 573:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 574:.\Generated_Source\PSoC5/CapSense.c ****         
 575:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 576:.\Generated_Source\PSoC5/CapSense.c ****     
 577:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 578:.\Generated_Source\PSoC5/CapSense.c ****     
 579:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 580:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 581:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 463              		.loc 1 581 0
 464 002e FFF7FEFF 		bl	CapSense_IntClock_Stop
 582:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 583:.\Generated_Source\PSoC5/CapSense.c ****     
 584:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 585:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 465              		.loc 1 585 0
 466 0032 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 586:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 587:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 467              		.loc 1 587 0
 468 0036 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 588:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 589:.\Generated_Source\PSoC5/CapSense.c ****     
 590:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 591:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 592:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 593:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 594:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 595:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 596:.\Generated_Source\PSoC5/CapSense.c ****     
 597:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 598:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 599:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 600:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 601:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 602:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 603:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 604:.\Generated_Source\PSoC5/CapSense.c **** 
 605:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 606:.\Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 607:.\Generated_Source\PSoC5/CapSense.c ****     #else
 608:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 609:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 469              		.loc 1 609 0
 470 003a 134A     		ldr	r2, .L12+12
 471 003c 124B     		ldr	r3, .L12+12
 472 003e 1B78     		ldrb	r3, [r3]
 473 0040 DBB2     		uxtb	r3, r3
 474 0042 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 20


 475 0046 DBB2     		uxtb	r3, r3
 476 0048 1370     		strb	r3, [r2]
 610:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 477              		.loc 1 610 0
 478 004a 104A     		ldr	r2, .L12+16
 479 004c 0F4B     		ldr	r3, .L12+16
 480 004e 1B78     		ldrb	r3, [r3]
 481 0050 DBB2     		uxtb	r3, r3
 482 0052 23F01003 		bic	r3, r3, #16
 483 0056 DBB2     		uxtb	r3, r3
 484 0058 1370     		strb	r3, [r2]
 611:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 485              		.loc 1 611 0
 486 005a 0D4A     		ldr	r2, .L12+20
 487 005c 0C4B     		ldr	r3, .L12+20
 488 005e 1B78     		ldrb	r3, [r3]
 489 0060 DBB2     		uxtb	r3, r3
 490 0062 23F01003 		bic	r3, r3, #16
 491 0066 DBB2     		uxtb	r3, r3
 492 0068 1370     		strb	r3, [r2]
 612:.\Generated_Source\PSoC5/CapSense.c ****         
 613:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 614:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 615:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 616:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 617:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 618:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 619:.\Generated_Source\PSoC5/CapSense.c ****     
 620:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 621:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 493              		.loc 1 621 0
 494 006a 044A     		ldr	r2, .L12
 495 006c 034B     		ldr	r3, .L12
 496 006e 1B78     		ldrb	r3, [r3]
 497 0070 DBB2     		uxtb	r3, r3
 498 0072 03F07F03 		and	r3, r3, #127
 499 0076 DBB2     		uxtb	r3, r3
 500 0078 1370     		strb	r3, [r2]
 622:.\Generated_Source\PSoC5/CapSense.c **** }
 501              		.loc 1 622 0
 502 007a 80BD     		pop	{r7, pc}
 503              	.L13:
 504              		.align	2
 505              	.L12:
 506 007c 7B640040 		.word	1073767547
 507 0080 80E100E0 		.word	-536813184
 508 0084 9E640040 		.word	1073767582
 509 0088 70580040 		.word	1073764464
 510 008c AB430040 		.word	1073759147
 511 0090 BB430040 		.word	1073759163
 512              		.cfi_endproc
 513              	.LFE3:
 514              		.size	CapSense_Stop, .-CapSense_Stop
 515              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 516              		.align	2
 517              		.global	CapSense_FindNextSensor
 518              		.thumb
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 21


 519              		.thumb_func
 520              		.type	CapSense_FindNextSensor, %function
 521              	CapSense_FindNextSensor:
 522              	.LFB4:
 623:.\Generated_Source\PSoC5/CapSense.c **** 
 624:.\Generated_Source\PSoC5/CapSense.c **** 
 625:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 626:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 627:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 628:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 629:.\Generated_Source\PSoC5/CapSense.c ****     *
 630:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 631:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 632:.\Generated_Source\PSoC5/CapSense.c ****     *
 633:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 634:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 635:.\Generated_Source\PSoC5/CapSense.c ****     *
 636:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 637:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 638:.\Generated_Source\PSoC5/CapSense.c ****     *
 639:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 640:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 641:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 642:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 643:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 644:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 645:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 646:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 647:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 648:.\Generated_Source\PSoC5/CapSense.c ****     *
 649:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 650:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 651:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 652:.\Generated_Source\PSoC5/CapSense.c ****     *
 653:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 654:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 655:.\Generated_Source\PSoC5/CapSense.c ****     {
 523              		.loc 1 655 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 85B0     		sub	sp, sp, #20
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 0346     		mov	r3, r0
 536 0008 FB71     		strb	r3, [r7, #7]
 537              	.L17:
 656:.\Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 657:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 658:.\Generated_Source\PSoC5/CapSense.c ****         
 659:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 660:.\Generated_Source\PSoC5/CapSense.c ****         do
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 22


 661:.\Generated_Source\PSoC5/CapSense.c ****         {
 662:.\Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 663:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 538              		.loc 1 663 0
 539 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 000c 0133     		adds	r3, r3, #1
 541 000e FB71     		strb	r3, [r7, #7]
 664:.\Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 542              		.loc 1 664 0
 543 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 544 0012 022B     		cmp	r3, #2
 545 0014 00D1     		bne	.L15
 665:.\Generated_Source\PSoC5/CapSense.c ****             {
 666:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 546              		.loc 1 666 0
 547 0016 11E0     		b	.L16
 548              	.L15:
 667:.\Generated_Source\PSoC5/CapSense.c ****             }
 668:.\Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 549              		.loc 1 668 0
 550 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 551 001a DB08     		lsrs	r3, r3, #3
 552 001c FB73     		strb	r3, [r7, #15]
 669:.\Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 553              		.loc 1 669 0
 554 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 555 0020 03F00703 		and	r3, r3, #7
 556 0024 0122     		movs	r2, #1
 557 0026 02FA03F3 		lsl	r3, r2, r3
 558 002a BB73     		strb	r3, [r7, #14]
 670:.\Generated_Source\PSoC5/CapSense.c ****         }    
 671:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 559              		.loc 1 671 0
 560 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 561 002e 074A     		ldr	r2, .L19
 562 0030 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 563 0032 BB7B     		ldrb	r3, [r7, #14]
 564 0034 1340     		ands	r3, r3, r2
 565 0036 DBB2     		uxtb	r3, r3
 566 0038 002B     		cmp	r3, #0
 567 003a E6D0     		beq	.L17
 568              	.L16:
 672:.\Generated_Source\PSoC5/CapSense.c ****         
 673:.\Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 569              		.loc 1 673 0
 570 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 674:.\Generated_Source\PSoC5/CapSense.c ****     }
 571              		.loc 1 674 0
 572 003e 1846     		mov	r0, r3
 573 0040 1437     		adds	r7, r7, #20
 574              		.cfi_def_cfa_offset 4
 575 0042 BD46     		mov	sp, r7
 576              		.cfi_def_cfa_register 13
 577              		@ sp needed
 578 0044 5DF8047B 		ldr	r7, [sp], #4
 579              		.cfi_restore 7
 580              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 23


 581 0048 7047     		bx	lr
 582              	.L20:
 583 004a 00BF     		.align	2
 584              	.L19:
 585 004c 00000000 		.word	CapSense_sensorEnableMask
 586              		.cfi_endproc
 587              	.LFE4:
 588              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 589              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 590              		.align	2
 591              		.global	CapSense_SetScanSlotSettings
 592              		.thumb
 593              		.thumb_func
 594              		.type	CapSense_SetScanSlotSettings, %function
 595              	CapSense_SetScanSlotSettings:
 596              	.LFB5:
 675:.\Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 676:.\Generated_Source\PSoC5/CapSense.c ****  
 677:.\Generated_Source\PSoC5/CapSense.c ****  
 678:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 679:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 680:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 681:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 682:.\Generated_Source\PSoC5/CapSense.c ****     *
 683:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 684:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 685:.\Generated_Source\PSoC5/CapSense.c ****     *  
 686:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 687:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 688:.\Generated_Source\PSoC5/CapSense.c ****     *
 689:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 690:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 691:.\Generated_Source\PSoC5/CapSense.c ****     *
 692:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 693:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 694:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 695:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 696:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 697:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 698:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 699:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 700:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 701:.\Generated_Source\PSoC5/CapSense.c ****     *
 702:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 703:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 704:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 705:.\Generated_Source\PSoC5/CapSense.c ****     *
 706:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 707:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 708:.\Generated_Source\PSoC5/CapSense.c ****     {
 709:.\Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 710:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 711:.\Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 712:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 713:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 714:.\Generated_Source\PSoC5/CapSense.c ****         
 715:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 24


 716:.\Generated_Source\PSoC5/CapSense.c ****         do
 717:.\Generated_Source\PSoC5/CapSense.c ****         {
 718:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 719:.\Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 720:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 721:.\Generated_Source\PSoC5/CapSense.c ****             {
 722:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 723:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 724:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 725:.\Generated_Source\PSoC5/CapSense.c ****             }
 726:.\Generated_Source\PSoC5/CapSense.c ****             
 727:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 728:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 729:.\Generated_Source\PSoC5/CapSense.c ****         }
 730:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 731:.\Generated_Source\PSoC5/CapSense.c ****         
 732:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 733:.\Generated_Source\PSoC5/CapSense.c ****         do
 734:.\Generated_Source\PSoC5/CapSense.c ****         {
 735:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 736:.\Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 737:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 738:.\Generated_Source\PSoC5/CapSense.c ****             {
 739:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 740:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 741:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 742:.\Generated_Source\PSoC5/CapSense.c ****             }
 743:.\Generated_Source\PSoC5/CapSense.c ****             
 744:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 745:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 746:.\Generated_Source\PSoC5/CapSense.c ****         } 
 747:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 748:.\Generated_Source\PSoC5/CapSense.c ****         
 749:.\Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 750:.\Generated_Source\PSoC5/CapSense.c ****         
 751:.\Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 752:.\Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 753:.\Generated_Source\PSoC5/CapSense.c ****         {
 754:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 755:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 756:.\Generated_Source\PSoC5/CapSense.c ****             
 757:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 758:.\Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 759:.\Generated_Source\PSoC5/CapSense.c ****         }
 760:.\Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 761:.\Generated_Source\PSoC5/CapSense.c ****         {
 762:.\Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 763:.\Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 764:.\Generated_Source\PSoC5/CapSense.c ****            
 765:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 766:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 767:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 768:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 769:.\Generated_Source\PSoC5/CapSense.c ****         }
 770:.\Generated_Source\PSoC5/CapSense.c ****         else
 771:.\Generated_Source\PSoC5/CapSense.c ****         {
 772:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 25


 773:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 774:.\Generated_Source\PSoC5/CapSense.c ****             
 775:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 776:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 777:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 778:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 779:.\Generated_Source\PSoC5/CapSense.c ****         }
 780:.\Generated_Source\PSoC5/CapSense.c ****         
 781:.\Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 782:.\Generated_Source\PSoC5/CapSense.c ****     }
 783:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 784:.\Generated_Source\PSoC5/CapSense.c **** 
 785:.\Generated_Source\PSoC5/CapSense.c **** 
 786:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 788:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 789:.\Generated_Source\PSoC5/CapSense.c **** *
 790:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 791:.\Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 792:.\Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 793:.\Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 794:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 795:.\Generated_Source\PSoC5/CapSense.c **** *
 796:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 797:.\Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 798:.\Generated_Source\PSoC5/CapSense.c **** *
 799:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 800:.\Generated_Source\PSoC5/CapSense.c **** *  None
 801:.\Generated_Source\PSoC5/CapSense.c **** *
 802:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 803:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 804:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 805:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 806:.\Generated_Source\PSoC5/CapSense.c **** *
 807:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 808:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 809:.\Generated_Source\PSoC5/CapSense.c **** {
 597              		.loc 1 809 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 16
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 84B0     		sub	sp, sp, #16
 606              		.cfi_def_cfa_offset 24
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 0346     		mov	r3, r0
 610 0008 FB71     		strb	r3, [r7, #7]
 810:.\Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 811:.\Generated_Source\PSoC5/CapSense.c ****     
 812:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 813:.\Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 814:.\Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 611              		.loc 1 814 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 26


 612 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 613 000c 0B4A     		ldr	r2, .L22
 614 000e D35C     		ldrb	r3, [r2, r3]
 615 0010 FB73     		strb	r3, [r7, #15]
 815:.\Generated_Source\PSoC5/CapSense.c ****         
 816:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 817:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 818:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 616              		.loc 1 818 0
 617 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 0014 0A4A     		ldr	r2, .L22+4
 619 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 620 0018 1846     		mov	r0, r3
 621 001a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 819:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 820:.\Generated_Source\PSoC5/CapSense.c ****         
 821:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 822:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 823:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 824:.\Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 825:.\Generated_Source\PSoC5/CapSense.c ****         #else
 826:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 622              		.loc 1 826 0
 623 001e 094A     		ldr	r2, .L22+8
 624 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 625 0022 0949     		ldr	r1, .L22+12
 626 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 627 0026 1370     		strb	r3, [r2]
 827:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 828:.\Generated_Source\PSoC5/CapSense.c **** 
 829:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 830:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 831:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 628              		.loc 1 831 0
 629 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 630 002a 084A     		ldr	r2, .L22+16
 631 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 632 002e 1846     		mov	r0, r3
 633 0030 FFF7FEFF 		bl	CapSense_SetPrescaler
 832:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 833:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 834:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 835:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 836:.\Generated_Source\PSoC5/CapSense.c ****                */
 837:.\Generated_Source\PSoC5/CapSense.c **** 
 838:.\Generated_Source\PSoC5/CapSense.c ****     #else
 839:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 840:.\Generated_Source\PSoC5/CapSense.c ****         {
 841:.\Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 842:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 843:.\Generated_Source\PSoC5/CapSense.c ****             
 844:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 845:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 846:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 847:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 848:.\Generated_Source\PSoC5/CapSense.c ****             
 849:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 27


 850:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 851:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 852:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 853:.\Generated_Source\PSoC5/CapSense.c ****             #else
 854:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 855:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 856:.\Generated_Source\PSoC5/CapSense.c ****         }
 857:.\Generated_Source\PSoC5/CapSense.c ****         
 858:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 859:.\Generated_Source\PSoC5/CapSense.c ****         {
 860:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 861:.\Generated_Source\PSoC5/CapSense.c ****         
 862:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 863:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 864:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 865:.\Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 866:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 867:.\Generated_Source\PSoC5/CapSense.c ****             
 868:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 869:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 870:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 871:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 872:.\Generated_Source\PSoC5/CapSense.c ****             #else
 873:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 874:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 875:.\Generated_Source\PSoC5/CapSense.c ****         }
 876:.\Generated_Source\PSoC5/CapSense.c **** 
 877:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 878:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 879:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 880:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 881:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 882:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 883:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 884:.\Generated_Source\PSoC5/CapSense.c ****                */
 885:.\Generated_Source\PSoC5/CapSense.c **** 
 886:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 887:.\Generated_Source\PSoC5/CapSense.c **** }
 634              		.loc 1 887 0
 635 0034 1037     		adds	r7, r7, #16
 636              		.cfi_def_cfa_offset 8
 637 0036 BD46     		mov	sp, r7
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0038 80BD     		pop	{r7, pc}
 641              	.L23:
 642 003a 00BF     		.align	2
 643              	.L22:
 644 003c 00000000 		.word	CapSense_widgetNumber
 645 0040 00000000 		.word	CapSense_idacSettings
 646 0044 5A650040 		.word	1073767770
 647 0048 00000000 		.word	CapSense_widgetResolution
 648 004c 00000000 		.word	CapSense_analogSwitchDivider
 649              		.cfi_endproc
 650              	.LFE5:
 651              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 652              		.section	.text.CapSense_ScanSensor,"ax",%progbits
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 28


 653              		.align	2
 654              		.global	CapSense_ScanSensor
 655              		.thumb
 656              		.thumb_func
 657              		.type	CapSense_ScanSensor, %function
 658              	CapSense_ScanSensor:
 659              	.LFB6:
 888:.\Generated_Source\PSoC5/CapSense.c **** 
 889:.\Generated_Source\PSoC5/CapSense.c **** 
 890:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 891:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 892:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 893:.\Generated_Source\PSoC5/CapSense.c **** *
 894:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 895:.\Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 896:.\Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 897:.\Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 898:.\Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 899:.\Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 900:.\Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 901:.\Generated_Source\PSoC5/CapSense.c **** *
 902:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 903:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 904:.\Generated_Source\PSoC5/CapSense.c **** *
 905:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 906:.\Generated_Source\PSoC5/CapSense.c **** *  None
 907:.\Generated_Source\PSoC5/CapSense.c **** *
 908:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 909:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 910:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 911:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 912:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 913:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 914:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 915:.\Generated_Source\PSoC5/CapSense.c **** *
 916:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 917:.\Generated_Source\PSoC5/CapSense.c **** *  No
 918:.\Generated_Source\PSoC5/CapSense.c **** *
 919:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 920:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 921:.\Generated_Source\PSoC5/CapSense.c **** {
 660              		.loc 1 921 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 82B0     		sub	sp, sp, #8
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 0346     		mov	r3, r0
 673 0008 FB71     		strb	r3, [r7, #7]
 922:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 923:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 29


 674              		.loc 1 923 0
 675 000a 084B     		ldr	r3, .L25
 676 000c 0022     		movs	r2, #0
 677 000e 1A70     		strb	r2, [r3]
 924:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 678              		.loc 1 924 0
 679 0010 074A     		ldr	r2, .L25+4
 680 0012 FB79     		ldrb	r3, [r7, #7]
 681 0014 1370     		strb	r3, [r2]
 925:.\Generated_Source\PSoC5/CapSense.c ****     
 926:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 927:.\Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 928:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 682              		.loc 1 928 0
 683 0016 054B     		ldr	r3, .L25
 684 0018 8122     		movs	r2, #129
 685 001a 1A70     		strb	r2, [r3]
 929:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 686              		.loc 1 929 0
 687 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 688 001e 1846     		mov	r0, r3
 689 0020 FFF7FEFF 		bl	CapSense_PreScan
 930:.\Generated_Source\PSoC5/CapSense.c ****         
 931:.\Generated_Source\PSoC5/CapSense.c ****     #else
 932:.\Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 933:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 934:.\Generated_Source\PSoC5/CapSense.c ****         {
 935:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 936:.\Generated_Source\PSoC5/CapSense.c ****         }
 937:.\Generated_Source\PSoC5/CapSense.c ****         else
 938:.\Generated_Source\PSoC5/CapSense.c ****         {
 939:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 940:.\Generated_Source\PSoC5/CapSense.c ****         }
 941:.\Generated_Source\PSoC5/CapSense.c ****         
 942:.\Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 943:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 944:.\Generated_Source\PSoC5/CapSense.c ****         {
 945:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 946:.\Generated_Source\PSoC5/CapSense.c ****         }
 947:.\Generated_Source\PSoC5/CapSense.c ****         else
 948:.\Generated_Source\PSoC5/CapSense.c ****         {
 949:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 950:.\Generated_Source\PSoC5/CapSense.c ****         }
 951:.\Generated_Source\PSoC5/CapSense.c ****         
 952:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 953:.\Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 954:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 955:.\Generated_Source\PSoC5/CapSense.c ****         {
 956:.\Generated_Source\PSoC5/CapSense.c ****         
 957:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 958:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 959:.\Generated_Source\PSoC5/CapSense.c ****         }
 960:.\Generated_Source\PSoC5/CapSense.c ****         
 961:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 962:.\Generated_Source\PSoC5/CapSense.c **** }
 690              		.loc 1 962 0
 691 0024 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 30


 692              		.cfi_def_cfa_offset 8
 693 0026 BD46     		mov	sp, r7
 694              		.cfi_def_cfa_register 13
 695              		@ sp needed
 696 0028 80BD     		pop	{r7, pc}
 697              	.L26:
 698 002a 00BF     		.align	2
 699              	.L25:
 700 002c 00000000 		.word	CapSense_csv
 701 0030 00000000 		.word	CapSense_sensorIndex
 702              		.cfi_endproc
 703              	.LFE6:
 704              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 705              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 706              		.align	2
 707              		.global	CapSense_ScanEnabledWidgets
 708              		.thumb
 709              		.thumb_func
 710              		.type	CapSense_ScanEnabledWidgets, %function
 711              	CapSense_ScanEnabledWidgets:
 712              	.LFB7:
 963:.\Generated_Source\PSoC5/CapSense.c **** 
 964:.\Generated_Source\PSoC5/CapSense.c **** 
 965:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 966:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 967:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 968:.\Generated_Source\PSoC5/CapSense.c **** *
 969:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 970:.\Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 971:.\Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 972:.\Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 973:.\Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 974:.\Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 975:.\Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 976:.\Generated_Source\PSoC5/CapSense.c **** *
 977:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 978:.\Generated_Source\PSoC5/CapSense.c **** *  None
 979:.\Generated_Source\PSoC5/CapSense.c **** *
 980:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 981:.\Generated_Source\PSoC5/CapSense.c **** *  None
 982:.\Generated_Source\PSoC5/CapSense.c **** *
 983:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 984:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 985:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 986:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 987:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 988:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 989:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 990:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 991:.\Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 992:.\Generated_Source\PSoC5/CapSense.c **** *
 993:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 994:.\Generated_Source\PSoC5/CapSense.c **** *  No
 995:.\Generated_Source\PSoC5/CapSense.c **** *
 996:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 997:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
 998:.\Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 31


 713              		.loc 1 998 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 999:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1000:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 723              		.loc 1 1000 0
 724 0004 114B     		ldr	r3, .L29
 725 0006 0022     		movs	r2, #0
 726 0008 1A70     		strb	r2, [r3]
1001:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 727              		.loc 1 1001 0
 728 000a 114B     		ldr	r3, .L29+4
 729 000c FF22     		movs	r2, #255
 730 000e 1A70     		strb	r2, [r3]
1002:.\Generated_Source\PSoC5/CapSense.c ****     
1003:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1004:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1005:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 731              		.loc 1 1005 0
 732 0010 0F4B     		ldr	r3, .L29+4
 733 0012 1B78     		ldrb	r3, [r3]
 734 0014 DBB2     		uxtb	r3, r3
 735 0016 1846     		mov	r0, r3
 736 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 737 001c 0346     		mov	r3, r0
 738 001e 1A46     		mov	r2, r3
 739 0020 0B4B     		ldr	r3, .L29+4
 740 0022 1A70     		strb	r2, [r3]
1006:.\Generated_Source\PSoC5/CapSense.c **** 
1007:.\Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1008:.\Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 741              		.loc 1 1008 0
 742 0024 0A4B     		ldr	r3, .L29+4
 743 0026 1B78     		ldrb	r3, [r3]
 744 0028 DBB2     		uxtb	r3, r3
 745 002a 012B     		cmp	r3, #1
 746 002c 0DD8     		bhi	.L27
1009:.\Generated_Source\PSoC5/CapSense.c ****         {
1010:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 747              		.loc 1 1010 0
 748 002e 074B     		ldr	r3, .L29
 749 0030 1B78     		ldrb	r3, [r3]
 750 0032 DBB2     		uxtb	r3, r3
 751 0034 43F00103 		orr	r3, r3, #1
 752 0038 DAB2     		uxtb	r2, r3
 753 003a 044B     		ldr	r3, .L29
 754 003c 1A70     		strb	r2, [r3]
1011:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 755              		.loc 1 1011 0
 756 003e 044B     		ldr	r3, .L29+4
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 32


 757 0040 1B78     		ldrb	r3, [r3]
 758 0042 DBB2     		uxtb	r3, r3
 759 0044 1846     		mov	r0, r3
 760 0046 FFF7FEFF 		bl	CapSense_PreScan
 761              	.L27:
1012:.\Generated_Source\PSoC5/CapSense.c ****         }
1013:.\Generated_Source\PSoC5/CapSense.c ****         
1014:.\Generated_Source\PSoC5/CapSense.c ****     #else
1015:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1016:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1017:.\Generated_Source\PSoC5/CapSense.c ****         
1018:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1019:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1020:.\Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1021:.\Generated_Source\PSoC5/CapSense.c ****         {
1022:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1023:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1024:.\Generated_Source\PSoC5/CapSense.c ****         }
1025:.\Generated_Source\PSoC5/CapSense.c ****         
1026:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1027:.\Generated_Source\PSoC5/CapSense.c **** }
 762              		.loc 1 1027 0
 763 004a 80BD     		pop	{r7, pc}
 764              	.L30:
 765              		.align	2
 766              	.L29:
 767 004c 00000000 		.word	CapSense_csv
 768 0050 00000000 		.word	CapSense_sensorIndex
 769              		.cfi_endproc
 770              	.LFE7:
 771              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 772              		.section	.text.CapSense_IsBusy,"ax",%progbits
 773              		.align	2
 774              		.global	CapSense_IsBusy
 775              		.thumb
 776              		.thumb_func
 777              		.type	CapSense_IsBusy, %function
 778              	CapSense_IsBusy:
 779              	.LFB8:
1028:.\Generated_Source\PSoC5/CapSense.c **** 
1029:.\Generated_Source\PSoC5/CapSense.c **** 
1030:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1031:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1032:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1033:.\Generated_Source\PSoC5/CapSense.c **** *
1034:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1035:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1036:.\Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1037:.\Generated_Source\PSoC5/CapSense.c **** *
1038:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1039:.\Generated_Source\PSoC5/CapSense.c **** *  None
1040:.\Generated_Source\PSoC5/CapSense.c **** *
1041:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1042:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1043:.\Generated_Source\PSoC5/CapSense.c **** *  completed.
1044:.\Generated_Source\PSoC5/CapSense.c **** *
1045:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 33


1046:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1047:.\Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1048:.\Generated_Source\PSoC5/CapSense.c **** *
1049:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1050:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1051:.\Generated_Source\PSoC5/CapSense.c **** {
 780              		.loc 1 1051 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785 0000 80B4     		push	{r7}
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 7, -4
 788 0002 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
1052:.\Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 790              		.loc 1 1052 0
 791 0004 054B     		ldr	r3, .L33
 792 0006 1B78     		ldrb	r3, [r3]
 793 0008 DBB2     		uxtb	r3, r3
 794 000a 03F00103 		and	r3, r3, #1
 795 000e DBB2     		uxtb	r3, r3
1053:.\Generated_Source\PSoC5/CapSense.c **** }
 796              		.loc 1 1053 0
 797 0010 1846     		mov	r0, r3
 798 0012 BD46     		mov	sp, r7
 799              		.cfi_def_cfa_register 13
 800              		@ sp needed
 801 0014 5DF8047B 		ldr	r7, [sp], #4
 802              		.cfi_restore 7
 803              		.cfi_def_cfa_offset 0
 804 0018 7047     		bx	lr
 805              	.L34:
 806 001a 00BF     		.align	2
 807              	.L33:
 808 001c 00000000 		.word	CapSense_csv
 809              		.cfi_endproc
 810              	.LFE8:
 811              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 812              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 813              		.align	2
 814              		.global	CapSense_ReadSensorRaw
 815              		.thumb
 816              		.thumb_func
 817              		.type	CapSense_ReadSensorRaw, %function
 818              	CapSense_ReadSensorRaw:
 819              	.LFB9:
1054:.\Generated_Source\PSoC5/CapSense.c **** 
1055:.\Generated_Source\PSoC5/CapSense.c **** 
1056:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1057:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1058:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1059:.\Generated_Source\PSoC5/CapSense.c **** *
1060:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1061:.\Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1062:.\Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 34


1063:.\Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1064:.\Generated_Source\PSoC5/CapSense.c **** *
1065:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1066:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1067:.\Generated_Source\PSoC5/CapSense.c **** *
1068:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1069:.\Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1070:.\Generated_Source\PSoC5/CapSense.c **** *
1071:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1072:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1073:.\Generated_Source\PSoC5/CapSense.c **** *
1074:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1076:.\Generated_Source\PSoC5/CapSense.c **** {
 820              		.loc 1 1076 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 8
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825 0000 80B4     		push	{r7}
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 83B0     		sub	sp, sp, #12
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 832 0006 0346     		mov	r3, r0
 833 0008 FB71     		strb	r3, [r7, #7]
1077:.\Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
 834              		.loc 1 1077 0
 835 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 836 000c 044A     		ldr	r2, .L37
 837 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1078:.\Generated_Source\PSoC5/CapSense.c **** }
 838              		.loc 1 1078 0
 839 0012 1846     		mov	r0, r3
 840 0014 0C37     		adds	r7, r7, #12
 841              		.cfi_def_cfa_offset 4
 842 0016 BD46     		mov	sp, r7
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 0018 5DF8047B 		ldr	r7, [sp], #4
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 001c 7047     		bx	lr
 849              	.L38:
 850 001e 00BF     		.align	2
 851              	.L37:
 852 0020 00000000 		.word	CapSense_sensorRaw
 853              		.cfi_endproc
 854              	.LFE9:
 855              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 856              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 857              		.align	2
 858              		.global	CapSense_ClearSensors
 859              		.thumb
 860              		.thumb_func
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 35


 861              		.type	CapSense_ClearSensors, %function
 862              	CapSense_ClearSensors:
 863              	.LFB10:
1079:.\Generated_Source\PSoC5/CapSense.c **** 
1080:.\Generated_Source\PSoC5/CapSense.c **** 
1081:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1082:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1083:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1084:.\Generated_Source\PSoC5/CapSense.c **** *
1085:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1086:.\Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1087:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1088:.\Generated_Source\PSoC5/CapSense.c **** *
1089:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1090:.\Generated_Source\PSoC5/CapSense.c **** *  None
1091:.\Generated_Source\PSoC5/CapSense.c **** *
1092:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1093:.\Generated_Source\PSoC5/CapSense.c **** *  None
1094:.\Generated_Source\PSoC5/CapSense.c **** *
1095:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1096:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1097:.\Generated_Source\PSoC5/CapSense.c **** {
 864              		.loc 1 1097 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868 0000 80B5     		push	{r7, lr}
 869              		.cfi_def_cfa_offset 8
 870              		.cfi_offset 7, -8
 871              		.cfi_offset 14, -4
 872 0002 82B0     		sub	sp, sp, #8
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
1098:.\Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1099:.\Generated_Source\PSoC5/CapSense.c ****    
1100:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 876              		.loc 1 1100 0
 877 0006 0023     		movs	r3, #0
 878 0008 FB71     		strb	r3, [r7, #7]
 879 000a 06E0     		b	.L40
 880              	.L41:
1101:.\Generated_Source\PSoC5/CapSense.c ****     {
1102:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 881              		.loc 1 1102 0 discriminator 3
 882 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 883 000e 1846     		mov	r0, r3
 884 0010 FFF7FEFF 		bl	CapSense_DisableSensor
1100:.\Generated_Source\PSoC5/CapSense.c ****     {
 885              		.loc 1 1100 0 discriminator 3
 886 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 887 0016 0133     		adds	r3, r3, #1
 888 0018 FB71     		strb	r3, [r7, #7]
 889              	.L40:
1100:.\Generated_Source\PSoC5/CapSense.c ****     {
 890              		.loc 1 1100 0 is_stmt 0 discriminator 1
 891 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 36


 892 001c 012B     		cmp	r3, #1
 893 001e F5D9     		bls	.L41
1103:.\Generated_Source\PSoC5/CapSense.c ****     }
1104:.\Generated_Source\PSoC5/CapSense.c **** }
 894              		.loc 1 1104 0 is_stmt 1
 895 0020 0837     		adds	r7, r7, #8
 896              		.cfi_def_cfa_offset 8
 897 0022 BD46     		mov	sp, r7
 898              		.cfi_def_cfa_register 13
 899              		@ sp needed
 900 0024 80BD     		pop	{r7, pc}
 901              		.cfi_endproc
 902              	.LFE10:
 903              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 904 0026 00BF     		.section	.text.CapSense_EnableSensor,"ax",%progbits
 905              		.align	2
 906              		.global	CapSense_EnableSensor
 907              		.thumb
 908              		.thumb_func
 909              		.type	CapSense_EnableSensor, %function
 910              	CapSense_EnableSensor:
 911              	.LFB11:
1105:.\Generated_Source\PSoC5/CapSense.c **** 
1106:.\Generated_Source\PSoC5/CapSense.c **** 
1107:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1108:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1109:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1110:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1111:.\Generated_Source\PSoC5/CapSense.c ****     *
1112:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1113:.\Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1114:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1115:.\Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1116:.\Generated_Source\PSoC5/CapSense.c ****     *
1117:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1118:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1119:.\Generated_Source\PSoC5/CapSense.c ****     *
1120:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1121:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1122:.\Generated_Source\PSoC5/CapSense.c ****     *
1123:.\Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1124:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1125:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1126:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1127:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1128:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1129:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1130:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1131:.\Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1132:.\Generated_Source\PSoC5/CapSense.c ****     *
1133:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1134:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1135:.\Generated_Source\PSoC5/CapSense.c ****     {
1136:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1137:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1138:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1139:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 37


1140:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1141:.\Generated_Source\PSoC5/CapSense.c ****         
1142:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1143:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1144:.\Generated_Source\PSoC5/CapSense.c ****         {
1145:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1146:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1147:.\Generated_Source\PSoC5/CapSense.c ****         }
1148:.\Generated_Source\PSoC5/CapSense.c ****         else
1149:.\Generated_Source\PSoC5/CapSense.c ****         {
1150:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1151:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1152:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1153:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1154:.\Generated_Source\PSoC5/CapSense.c ****                         
1155:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1156:.\Generated_Source\PSoC5/CapSense.c ****             {
1157:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1158:.\Generated_Source\PSoC5/CapSense.c ****             }
1159:.\Generated_Source\PSoC5/CapSense.c ****         } 
1160:.\Generated_Source\PSoC5/CapSense.c ****     }
1161:.\Generated_Source\PSoC5/CapSense.c ****     
1162:.\Generated_Source\PSoC5/CapSense.c ****     
1163:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1164:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1165:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1166:.\Generated_Source\PSoC5/CapSense.c ****     *
1167:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1168:.\Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1169:.\Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1170:.\Generated_Source\PSoC5/CapSense.c ****     *
1171:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1172:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1173:.\Generated_Source\PSoC5/CapSense.c ****     *
1174:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1175:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1176:.\Generated_Source\PSoC5/CapSense.c ****     *
1177:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1178:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1179:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1180:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1181:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1182:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1183:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1184:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1185:.\Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1186:.\Generated_Source\PSoC5/CapSense.c ****     *
1187:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1188:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1189:.\Generated_Source\PSoC5/CapSense.c ****     {
1190:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1191:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1192:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1193:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1194:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1195:.\Generated_Source\PSoC5/CapSense.c ****         
1196:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 38


1197:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1198:.\Generated_Source\PSoC5/CapSense.c ****         {
1199:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1200:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1201:.\Generated_Source\PSoC5/CapSense.c ****         }
1202:.\Generated_Source\PSoC5/CapSense.c ****         else
1203:.\Generated_Source\PSoC5/CapSense.c ****         {
1204:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1205:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1206:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1207:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1208:.\Generated_Source\PSoC5/CapSense.c ****                         
1209:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1210:.\Generated_Source\PSoC5/CapSense.c ****             {
1211:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1212:.\Generated_Source\PSoC5/CapSense.c ****             }
1213:.\Generated_Source\PSoC5/CapSense.c ****         } 
1214:.\Generated_Source\PSoC5/CapSense.c ****     }
1215:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1216:.\Generated_Source\PSoC5/CapSense.c **** 
1217:.\Generated_Source\PSoC5/CapSense.c **** 
1218:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1219:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1220:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1221:.\Generated_Source\PSoC5/CapSense.c **** *
1222:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1223:.\Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1224:.\Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1225:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1226:.\Generated_Source\PSoC5/CapSense.c **** *
1227:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1228:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1229:.\Generated_Source\PSoC5/CapSense.c **** *
1230:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1231:.\Generated_Source\PSoC5/CapSense.c **** *  None
1232:.\Generated_Source\PSoC5/CapSense.c **** *
1233:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1234:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1235:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1236:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1237:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1238:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1239:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1240:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1241:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1242:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1243:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1244:.\Generated_Source\PSoC5/CapSense.c **** *
1245:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1246:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1247:.\Generated_Source\PSoC5/CapSense.c **** {
 912              		.loc 1 1247 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 16
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 39


 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 84B0     		sub	sp, sp, #16
 921              		.cfi_def_cfa_offset 24
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 924 0006 0346     		mov	r3, r0
 925 0008 FB71     		strb	r3, [r7, #7]
1248:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 926              		.loc 1 1248 0
 927 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 928 000c 124A     		ldr	r2, .L44
 929 000e D35C     		ldrb	r3, [r2, r3]
 930 0010 FB73     		strb	r3, [r7, #15]
1249:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 931              		.loc 1 1249 0
 932 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 933 0014 114A     		ldr	r2, .L44+4
 934 0016 D35C     		ldrb	r3, [r2, r3]
 935 0018 BB73     		strb	r3, [r7, #14]
1250:.\Generated_Source\PSoC5/CapSense.c ****     
1251:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1252:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1253:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1254:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1255:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1256:.\Generated_Source\PSoC5/CapSense.c ****             */
1257:.\Generated_Source\PSoC5/CapSense.c ****     
1258:.\Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1259:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 936              		.loc 1 1259 0
 937 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 938 001c 104A     		ldr	r2, .L44+8
 939 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 940 0022 0922     		movs	r2, #9
 941 0024 1A70     		strb	r2, [r3]
1260:.\Generated_Source\PSoC5/CapSense.c ****     
1261:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1262:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 942              		.loc 1 1262 0
 943 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 944 0028 0F2B     		cmp	r3, #15
 945 002a 01D1     		bne	.L43
1263:.\Generated_Source\PSoC5/CapSense.c **** 	{
1264:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 946              		.loc 1 1264 0
 947 002c 0723     		movs	r3, #7
 948 002e FB73     		strb	r3, [r7, #15]
 949              	.L43:
1265:.\Generated_Source\PSoC5/CapSense.c **** 	}
1266:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 950              		.loc 1 1266 0
 951 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 952 0032 0C4A     		ldr	r2, .L44+12
 953 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 954 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 955 003a 0A49     		ldr	r1, .L44+12
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 40


 956 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 957 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 958 0042 BA7B     		ldrb	r2, [r7, #14]
 959 0044 0A43     		orrs	r2, r2, r1
 960 0046 D2B2     		uxtb	r2, r2
 961 0048 1A70     		strb	r2, [r3]
1267:.\Generated_Source\PSoC5/CapSense.c ****     
1268:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1269:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1270:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1271:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1272:.\Generated_Source\PSoC5/CapSense.c ****         #else
1273:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 962              		.loc 1 1273 0
 963 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 964 004c 1846     		mov	r0, r3
 965 004e FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1274:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1275:.\Generated_Source\PSoC5/CapSense.c ****                 
1276:.\Generated_Source\PSoC5/CapSense.c ****     #else
1277:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1278:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1279:.\Generated_Source\PSoC5/CapSense.c ****             {
1280:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1281:.\Generated_Source\PSoC5/CapSense.c ****             } 
1282:.\Generated_Source\PSoC5/CapSense.c ****             else
1283:.\Generated_Source\PSoC5/CapSense.c ****             {
1284:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1285:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1286:.\Generated_Source\PSoC5/CapSense.c ****             }
1287:.\Generated_Source\PSoC5/CapSense.c ****             
1288:.\Generated_Source\PSoC5/CapSense.c ****         #else
1289:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1290:.\Generated_Source\PSoC5/CapSense.c ****             {
1291:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1292:.\Generated_Source\PSoC5/CapSense.c ****             } 
1293:.\Generated_Source\PSoC5/CapSense.c ****             else
1294:.\Generated_Source\PSoC5/CapSense.c ****             {
1295:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1296:.\Generated_Source\PSoC5/CapSense.c ****             }
1297:.\Generated_Source\PSoC5/CapSense.c ****             
1298:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1299:.\Generated_Source\PSoC5/CapSense.c ****         
1300:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1301:.\Generated_Source\PSoC5/CapSense.c **** }
 966              		.loc 1 1301 0
 967 0052 1037     		adds	r7, r7, #16
 968              		.cfi_def_cfa_offset 8
 969 0054 BD46     		mov	sp, r7
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 0056 80BD     		pop	{r7, pc}
 973              	.L45:
 974              		.align	2
 975              	.L44:
 976 0058 00000000 		.word	CapSense_portTable
 977 005c 00000000 		.word	CapSense_maskTable
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 41


 978 0060 00000000 		.word	CapSense_pcTable
 979 0064 00000000 		.word	CapSense_csTable
 980              		.cfi_endproc
 981              	.LFE11:
 982              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 983              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 984              		.align	2
 985              		.global	CapSense_DisableSensor
 986              		.thumb
 987              		.thumb_func
 988              		.type	CapSense_DisableSensor, %function
 989              	CapSense_DisableSensor:
 990              	.LFB12:
1302:.\Generated_Source\PSoC5/CapSense.c **** 
1303:.\Generated_Source\PSoC5/CapSense.c **** 
1304:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1305:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1306:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1307:.\Generated_Source\PSoC5/CapSense.c **** *
1308:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1309:.\Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1310:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1311:.\Generated_Source\PSoC5/CapSense.c **** *
1312:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1313:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1314:.\Generated_Source\PSoC5/CapSense.c **** *
1315:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1316:.\Generated_Source\PSoC5/CapSense.c **** *  None
1317:.\Generated_Source\PSoC5/CapSense.c **** *
1318:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1319:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1320:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1321:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1322:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1323:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1324:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1325:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1326:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1327:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1328:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1329:.\Generated_Source\PSoC5/CapSense.c **** *
1330:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1331:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1332:.\Generated_Source\PSoC5/CapSense.c **** {
 991              		.loc 1 1332 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 42


 1004 0008 FB71     		strb	r3, [r7, #7]
1333:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1005              		.loc 1 1333 0
 1006 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1007 000c 134A     		ldr	r2, .L48
 1008 000e D35C     		ldrb	r3, [r2, r3]
 1009 0010 FB73     		strb	r3, [r7, #15]
1334:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1010              		.loc 1 1334 0
 1011 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 0014 124A     		ldr	r2, .L48+4
 1013 0016 D35C     		ldrb	r3, [r2, r3]
 1014 0018 BB73     		strb	r3, [r7, #14]
1335:.\Generated_Source\PSoC5/CapSense.c ****     
1336:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1337:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1338:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1339:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1340:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1341:.\Generated_Source\PSoC5/CapSense.c ****             */
1342:.\Generated_Source\PSoC5/CapSense.c ****     
1343:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1344:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1345:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1346:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1347:.\Generated_Source\PSoC5/CapSense.c ****         #else
1348:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 1015              		.loc 1 1348 0
 1016 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1017 001c 1846     		mov	r0, r3
 1018 001e FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
1349:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1350:.\Generated_Source\PSoC5/CapSense.c ****                 
1351:.\Generated_Source\PSoC5/CapSense.c ****     #else
1352:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1353:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1354:.\Generated_Source\PSoC5/CapSense.c ****             {
1355:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1356:.\Generated_Source\PSoC5/CapSense.c ****             } 
1357:.\Generated_Source\PSoC5/CapSense.c ****             else
1358:.\Generated_Source\PSoC5/CapSense.c ****             {
1359:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1360:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1361:.\Generated_Source\PSoC5/CapSense.c ****             }
1362:.\Generated_Source\PSoC5/CapSense.c ****             
1363:.\Generated_Source\PSoC5/CapSense.c ****         #else
1364:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1365:.\Generated_Source\PSoC5/CapSense.c ****             {
1366:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1367:.\Generated_Source\PSoC5/CapSense.c ****             } 
1368:.\Generated_Source\PSoC5/CapSense.c ****             else
1369:.\Generated_Source\PSoC5/CapSense.c ****             {
1370:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1371:.\Generated_Source\PSoC5/CapSense.c ****             }
1372:.\Generated_Source\PSoC5/CapSense.c ****             
1373:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1374:.\Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 43


1375:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1376:.\Generated_Source\PSoC5/CapSense.c ****     
1377:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1378:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1019              		.loc 1 1378 0
 1020 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1021 0024 0F2B     		cmp	r3, #15
 1022 0026 01D1     		bne	.L47
1379:.\Generated_Source\PSoC5/CapSense.c **** 	{
1380:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1023              		.loc 1 1380 0
 1024 0028 0723     		movs	r3, #7
 1025 002a FB73     		strb	r3, [r7, #15]
 1026              	.L47:
1381:.\Generated_Source\PSoC5/CapSense.c **** 	}
1382:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 1027              		.loc 1 1382 0
 1028 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1029 002e 0D4A     		ldr	r2, .L48+8
 1030 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1031 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1032 0036 0B49     		ldr	r1, .L48+8
 1033 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1034 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1035 003e BA7B     		ldrb	r2, [r7, #14]
 1036 0040 D243     		mvns	r2, r2
 1037 0042 D2B2     		uxtb	r2, r2
 1038 0044 0A40     		ands	r2, r2, r1
 1039 0046 D2B2     		uxtb	r2, r2
 1040 0048 1A70     		strb	r2, [r3]
1383:.\Generated_Source\PSoC5/CapSense.c ****     
1384:.\Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1385:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1386:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 1041              		.loc 1 1386 0
 1042 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1043 004c 064A     		ldr	r2, .L48+12
 1044 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1045 0052 0822     		movs	r2, #8
 1046 0054 1A70     		strb	r2, [r3]
1387:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1388:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1389:.\Generated_Source\PSoC5/CapSense.c ****     #else
1390:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1391:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1392:.\Generated_Source\PSoC5/CapSense.c **** }
 1047              		.loc 1 1392 0
 1048 0056 1037     		adds	r7, r7, #16
 1049              		.cfi_def_cfa_offset 8
 1050 0058 BD46     		mov	sp, r7
 1051              		.cfi_def_cfa_register 13
 1052              		@ sp needed
 1053 005a 80BD     		pop	{r7, pc}
 1054              	.L49:
 1055              		.align	2
 1056              	.L48:
 1057 005c 00000000 		.word	CapSense_portTable
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 44


 1058 0060 00000000 		.word	CapSense_maskTable
 1059 0064 00000000 		.word	CapSense_csTable
 1060 0068 00000000 		.word	CapSense_pcTable
 1061              		.cfi_endproc
 1062              	.LFE12:
 1063              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1064              		.section	.text.CapSense_PreScan,"ax",%progbits
 1065              		.align	2
 1066              		.global	CapSense_PreScan
 1067              		.thumb
 1068              		.thumb_func
 1069              		.type	CapSense_PreScan, %function
 1070              	CapSense_PreScan:
 1071              	.LFB13:
1393:.\Generated_Source\PSoC5/CapSense.c **** 
1394:.\Generated_Source\PSoC5/CapSense.c **** 
1395:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1396:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1397:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1398:.\Generated_Source\PSoC5/CapSense.c **** *
1399:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1400:.\Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1401:.\Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1402:.\Generated_Source\PSoC5/CapSense.c **** *
1403:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1404:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1405:.\Generated_Source\PSoC5/CapSense.c **** *
1406:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1407:.\Generated_Source\PSoC5/CapSense.c **** *  None
1408:.\Generated_Source\PSoC5/CapSense.c **** *
1409:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1410:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1411:.\Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1412:.\Generated_Source\PSoC5/CapSense.c **** *  resistor.
1413:.\Generated_Source\PSoC5/CapSense.c **** *
1414:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1415:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1416:.\Generated_Source\PSoC5/CapSense.c **** {
 1072              		.loc 1 1416 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076 0000 80B5     		push	{r7, lr}
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 82B0     		sub	sp, sp, #8
 1081              		.cfi_def_cfa_offset 16
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 0346     		mov	r3, r0
 1085 0008 FB71     		strb	r3, [r7, #7]
1417:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1418:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1086              		.loc 1 1418 0
 1087 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1088 000c 1846     		mov	r0, r3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 45


 1089 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1419:.\Generated_Source\PSoC5/CapSense.c ****     
1420:.\Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1421:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1422:.\Generated_Source\PSoC5/CapSense.c **** 
1423:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1424:.\Generated_Source\PSoC5/CapSense.c ****     
1425:.\Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1426:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1427:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1428:.\Generated_Source\PSoC5/CapSense.c **** 
1429:.\Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1430:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1090              		.loc 1 1430 0
 1091 0012 0F4A     		ldr	r2, .L51
 1092 0014 0E4B     		ldr	r3, .L51
 1093 0016 1B78     		ldrb	r3, [r3]
 1094 0018 DBB2     		uxtb	r3, r3
 1095 001a 43F00103 		orr	r3, r3, #1
 1096 001e DBB2     		uxtb	r3, r3
 1097 0020 1370     		strb	r3, [r2]
1431:.\Generated_Source\PSoC5/CapSense.c ****         
1432:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1433:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1434:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1435:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1436:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1437:.\Generated_Source\PSoC5/CapSense.c ****             #else
1438:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1098              		.loc 1 1438 0
 1099 0022 0C4A     		ldr	r2, .L51+4
 1100 0024 0B4B     		ldr	r3, .L51+4
 1101 0026 1B78     		ldrb	r3, [r3]
 1102 0028 DBB2     		uxtb	r3, r3
 1103 002a 23F00103 		bic	r3, r3, #1
 1104 002e DBB2     		uxtb	r3, r3
 1105 0030 1370     		strb	r3, [r2]
1439:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1440:.\Generated_Source\PSoC5/CapSense.c **** 
1441:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1442:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 1106              		.loc 1 1442 0
 1107 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1108 0034 1846     		mov	r0, r3
 1109 0036 FFF7FEFF 		bl	CapSense_EnableSensor
1443:.\Generated_Source\PSoC5/CapSense.c ****             
1444:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1445:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1446:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1447:.\Generated_Source\PSoC5/CapSense.c ****             
1448:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1449:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1450:.\Generated_Source\PSoC5/CapSense.c ****                 
1451:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1452:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1453:.\Generated_Source\PSoC5/CapSense.c ****             
1454:.\Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 46


1455:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1456:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1457:.\Generated_Source\PSoC5/CapSense.c ****             
1458:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1459:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1460:.\Generated_Source\PSoC5/CapSense.c ****              
1461:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1462:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1463:.\Generated_Source\PSoC5/CapSense.c ****         
1464:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1465:.\Generated_Source\PSoC5/CapSense.c ****         
1466:.\Generated_Source\PSoC5/CapSense.c ****     #else
1467:.\Generated_Source\PSoC5/CapSense.c **** 
1468:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1469:.\Generated_Source\PSoC5/CapSense.c ****         {
1470:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1471:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1472:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1473:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1474:.\Generated_Source\PSoC5/CapSense.c ****                 #else
1475:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1476:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1477:.\Generated_Source\PSoC5/CapSense.c ****                 
1478:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1479:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1480:.\Generated_Source\PSoC5/CapSense.c ****                 
1481:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1482:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1483:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1484:.\Generated_Source\PSoC5/CapSense.c ****                 
1485:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1486:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1487:.\Generated_Source\PSoC5/CapSense.c ****                     
1488:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1489:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1490:.\Generated_Source\PSoC5/CapSense.c ****                 
1491:.\Generated_Source\PSoC5/CapSense.c ****             #else
1492:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1493:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1494:.\Generated_Source\PSoC5/CapSense.c ****                 
1495:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1496:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1497:.\Generated_Source\PSoC5/CapSense.c ****                     
1498:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1499:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1500:.\Generated_Source\PSoC5/CapSense.c ****             
1501:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1502:.\Generated_Source\PSoC5/CapSense.c ****             
1503:.\Generated_Source\PSoC5/CapSense.c ****         }
1504:.\Generated_Source\PSoC5/CapSense.c ****         
1505:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1506:.\Generated_Source\PSoC5/CapSense.c ****         {
1507:.\Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1508:.\Generated_Source\PSoC5/CapSense.c ****             
1509:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1510:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1511:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 47


1512:.\Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1513:.\Generated_Source\PSoC5/CapSense.c ****                 #else 
1514:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1515:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1516:.\Generated_Source\PSoC5/CapSense.c ****                 
1517:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1518:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1519:.\Generated_Source\PSoC5/CapSense.c ****                 
1520:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1521:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1522:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1523:.\Generated_Source\PSoC5/CapSense.c ****                 
1524:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1525:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1526:.\Generated_Source\PSoC5/CapSense.c ****                     
1527:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1528:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1529:.\Generated_Source\PSoC5/CapSense.c ****                 
1530:.\Generated_Source\PSoC5/CapSense.c ****             #else
1531:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1532:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1533:.\Generated_Source\PSoC5/CapSense.c ****                 
1534:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1535:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1536:.\Generated_Source\PSoC5/CapSense.c ****                 
1537:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1538:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1539:.\Generated_Source\PSoC5/CapSense.c ****             
1540:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1541:.\Generated_Source\PSoC5/CapSense.c ****         }
1542:.\Generated_Source\PSoC5/CapSense.c ****     
1543:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1544:.\Generated_Source\PSoC5/CapSense.c ****     
1545:.\Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1546:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1110              		.loc 1 1546 0
 1111 003a 054A     		ldr	r2, .L51
 1112 003c 044B     		ldr	r3, .L51
 1113 003e 1B78     		ldrb	r3, [r3]
 1114 0040 DBB2     		uxtb	r3, r3
 1115 0042 43F00203 		orr	r3, r3, #2
 1116 0046 DBB2     		uxtb	r3, r3
 1117 0048 1370     		strb	r3, [r2]
1547:.\Generated_Source\PSoC5/CapSense.c ****     
1548:.\Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1549:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1550:.\Generated_Source\PSoC5/CapSense.c **** 
1551:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1552:.\Generated_Source\PSoC5/CapSense.c **** 
1553:.\Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1554:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1555:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1556:.\Generated_Source\PSoC5/CapSense.c **** }
 1118              		.loc 1 1556 0
 1119 004a 0837     		adds	r7, r7, #8
 1120              		.cfi_def_cfa_offset 8
 1121 004c BD46     		mov	sp, r7
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 48


 1122              		.cfi_def_cfa_register 13
 1123              		@ sp needed
 1124 004e 80BD     		pop	{r7, pc}
 1125              	.L52:
 1126              		.align	2
 1127              	.L51:
 1128 0050 7B640040 		.word	1073767547
 1129 0054 70580040 		.word	1073764464
 1130              		.cfi_endproc
 1131              	.LFE13:
 1132              		.size	CapSense_PreScan, .-CapSense_PreScan
 1133              		.section	.text.CapSense_PostScan,"ax",%progbits
 1134              		.align	2
 1135              		.global	CapSense_PostScan
 1136              		.thumb
 1137              		.thumb_func
 1138              		.type	CapSense_PostScan, %function
 1139              	CapSense_PostScan:
 1140              	.LFB14:
1557:.\Generated_Source\PSoC5/CapSense.c **** 
1558:.\Generated_Source\PSoC5/CapSense.c **** 
1559:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1560:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1561:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1562:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1563:.\Generated_Source\PSoC5/CapSense.c ****     *
1564:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1565:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1566:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1567:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1568:.\Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1569:.\Generated_Source\PSoC5/CapSense.c ****     *
1570:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1571:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1572:.\Generated_Source\PSoC5/CapSense.c ****     *
1573:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1574:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1575:.\Generated_Source\PSoC5/CapSense.c ****     *
1576:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1577:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1578:.\Generated_Source\PSoC5/CapSense.c ****     *
1579:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1580:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1581:.\Generated_Source\PSoC5/CapSense.c ****     *
1582:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1583:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1584:.\Generated_Source\PSoC5/CapSense.c ****     {
 1141              		.loc 1 1584 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 82B0     		sub	sp, sp, #8
 1150              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 49


 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 0346     		mov	r3, r0
 1154 0008 FB71     		strb	r3, [r7, #7]
1585:.\Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1586:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1155              		.loc 1 1586 0
 1156 000a 1E4A     		ldr	r2, .L54
 1157 000c 1D4B     		ldr	r3, .L54
 1158 000e 1B78     		ldrb	r3, [r3]
 1159 0010 DBB2     		uxtb	r3, r3
 1160 0012 23F00303 		bic	r3, r3, #3
 1161 0016 DBB2     		uxtb	r3, r3
 1162 0018 1370     		strb	r3, [r2]
1587:.\Generated_Source\PSoC5/CapSense.c ****         
1588:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1589:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1590:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1591:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1592:.\Generated_Source\PSoC5/CapSense.c ****         #else
1593:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1163              		.loc 1 1593 0
 1164 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1165 001c 1A4A     		ldr	r2, .L54+4
 1166 001e 1278     		ldrb	r2, [r2]
 1167 0020 D2B2     		uxtb	r2, r2
 1168 0022 92B2     		uxth	r2, r2
 1169 0024 1202     		lsls	r2, r2, #8
 1170 0026 91B2     		uxth	r1, r2
 1171 0028 184A     		ldr	r2, .L54+8
 1172 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1594:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1173              		.loc 1 1594 0
 1174 002e 184B     		ldr	r3, .L54+12
 1175 0030 1B78     		ldrb	r3, [r3]
 1176 0032 DBB2     		uxtb	r3, r3
 1177 0034 9AB2     		uxth	r2, r3
 1178 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1179 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1180 003a 1448     		ldr	r0, .L54+8
 1181 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1182 0040 0A43     		orrs	r2, r2, r1
 1183 0042 91B2     		uxth	r1, r2
 1184 0044 114A     		ldr	r2, .L54+8
 1185 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1595:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1186              		.loc 1 1595 0
 1187 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1596:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1188              		.loc 1 1596 0
 1189 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1190 004e 0F49     		ldr	r1, .L54+8
 1191 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1595:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1192              		.loc 1 1595 0
 1193 0054 D243     		mvns	r2, r2
 1194 0056 91B2     		uxth	r1, r2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 50


 1195 0058 0C4A     		ldr	r2, .L54+8
 1196 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1597:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1598:.\Generated_Source\PSoC5/CapSense.c ****         
1599:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1600:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1197              		.loc 1 1600 0
 1198 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1199 0060 1846     		mov	r0, r3
 1200 0062 FFF7FEFF 		bl	CapSense_DisableSensor
1601:.\Generated_Source\PSoC5/CapSense.c ****         
1602:.\Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1603:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1604:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1201              		.loc 1 1604 0
 1202 0066 0020     		movs	r0, #0
 1203 0068 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1605:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1606:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1607:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1608:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1609:.\Generated_Source\PSoC5/CapSense.c ****         #else
1610:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1611:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1612:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1613:.\Generated_Source\PSoC5/CapSense.c ****             
1614:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1615:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1616:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1617:.\Generated_Source\PSoC5/CapSense.c ****         #else
1618:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1204              		.loc 1 1618 0
 1205 006c 094A     		ldr	r2, .L54+16
 1206 006e 094B     		ldr	r3, .L54+16
 1207 0070 1B78     		ldrb	r3, [r3]
 1208 0072 DBB2     		uxtb	r3, r3
 1209 0074 43F00103 		orr	r3, r3, #1
 1210 0078 DBB2     		uxtb	r3, r3
 1211 007a 1370     		strb	r3, [r2]
1619:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1620:.\Generated_Source\PSoC5/CapSense.c ****     }
 1212              		.loc 1 1620 0
 1213 007c 0837     		adds	r7, r7, #8
 1214              		.cfi_def_cfa_offset 8
 1215 007e BD46     		mov	sp, r7
 1216              		.cfi_def_cfa_register 13
 1217              		@ sp needed
 1218 0080 80BD     		pop	{r7, pc}
 1219              	.L55:
 1220 0082 00BF     		.align	2
 1221              	.L54:
 1222 0084 7B640040 		.word	1073767547
 1223 0088 1C640040 		.word	1073767452
 1224 008c 00000000 		.word	CapSense_sensorRaw
 1225 0090 0C640040 		.word	1073767436
 1226 0094 70580040 		.word	1073764464
 1227              		.cfi_endproc
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 51


 1228              	.LFE14:
 1229              		.size	CapSense_PostScan, .-CapSense_PostScan
 1230              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 1231              		.align	2
 1232              		.global	CapSense_SetPrescaler
 1233              		.thumb
 1234              		.thumb_func
 1235              		.type	CapSense_SetPrescaler, %function
 1236              	CapSense_SetPrescaler:
 1237              	.LFB15:
1621:.\Generated_Source\PSoC5/CapSense.c ****     
1622:.\Generated_Source\PSoC5/CapSense.c **** #else
1623:.\Generated_Source\PSoC5/CapSense.c **** 
1624:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1625:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1626:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1627:.\Generated_Source\PSoC5/CapSense.c ****     *
1628:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1629:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1630:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1631:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1632:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1633:.\Generated_Source\PSoC5/CapSense.c ****     *
1634:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1635:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1636:.\Generated_Source\PSoC5/CapSense.c ****     *
1637:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1638:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1639:.\Generated_Source\PSoC5/CapSense.c ****     *
1640:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1641:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1642:.\Generated_Source\PSoC5/CapSense.c ****     *
1643:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1644:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1645:.\Generated_Source\PSoC5/CapSense.c ****     *
1646:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1647:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1648:.\Generated_Source\PSoC5/CapSense.c ****     {
1649:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1650:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1651:.\Generated_Source\PSoC5/CapSense.c ****         {
1652:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1653:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1654:.\Generated_Source\PSoC5/CapSense.c ****         }
1655:.\Generated_Source\PSoC5/CapSense.c ****         
1656:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1657:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1658:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1659:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1660:.\Generated_Source\PSoC5/CapSense.c ****         #else
1661:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1662:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1663:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1664:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1665:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1666:.\Generated_Source\PSoC5/CapSense.c ****         
1667:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 52


1668:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1669:.\Generated_Source\PSoC5/CapSense.c ****         
1670:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1671:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1672:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1673:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1674:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1675:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1676:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1677:.\Generated_Source\PSoC5/CapSense.c ****         #else
1678:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1679:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1680:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1681:.\Generated_Source\PSoC5/CapSense.c ****         
1682:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1683:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1684:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1685:.\Generated_Source\PSoC5/CapSense.c ****         #else
1686:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1687:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1688:.\Generated_Source\PSoC5/CapSense.c ****     }
1689:.\Generated_Source\PSoC5/CapSense.c ****     
1690:.\Generated_Source\PSoC5/CapSense.c ****     
1691:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1692:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1693:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1694:.\Generated_Source\PSoC5/CapSense.c ****     *
1695:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1696:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1697:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1698:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1699:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1700:.\Generated_Source\PSoC5/CapSense.c ****     *
1701:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1702:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1703:.\Generated_Source\PSoC5/CapSense.c ****     *
1704:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1705:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1706:.\Generated_Source\PSoC5/CapSense.c ****     *
1707:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1708:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1709:.\Generated_Source\PSoC5/CapSense.c ****     *
1710:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1711:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1712:.\Generated_Source\PSoC5/CapSense.c ****     *
1713:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1714:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1715:.\Generated_Source\PSoC5/CapSense.c ****     {
1716:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1717:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1718:.\Generated_Source\PSoC5/CapSense.c ****         {
1719:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1720:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1721:.\Generated_Source\PSoC5/CapSense.c ****         }
1722:.\Generated_Source\PSoC5/CapSense.c ****         
1723:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1724:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 53


1725:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1726:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1727:.\Generated_Source\PSoC5/CapSense.c ****         #else
1728:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1729:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1730:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1731:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1732:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1733:.\Generated_Source\PSoC5/CapSense.c ****         
1734:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1735:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1736:.\Generated_Source\PSoC5/CapSense.c ****         
1737:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1738:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1739:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1740:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1741:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1742:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1743:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1744:.\Generated_Source\PSoC5/CapSense.c ****         #else
1745:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1746:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1747:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1748:.\Generated_Source\PSoC5/CapSense.c **** 
1749:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1750:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1751:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1752:.\Generated_Source\PSoC5/CapSense.c ****         #else
1753:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1754:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1755:.\Generated_Source\PSoC5/CapSense.c ****     }
1756:.\Generated_Source\PSoC5/CapSense.c ****     
1757:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1758:.\Generated_Source\PSoC5/CapSense.c **** 
1759:.\Generated_Source\PSoC5/CapSense.c **** 
1760:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1761:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1762:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1763:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1764:.\Generated_Source\PSoC5/CapSense.c ****     *
1765:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1766:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1767:.\Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1768:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1769:.\Generated_Source\PSoC5/CapSense.c ****     *
1770:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1771:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1772:.\Generated_Source\PSoC5/CapSense.c ****     *
1773:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1774:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1775:.\Generated_Source\PSoC5/CapSense.c ****     *
1776:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1777:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1778:.\Generated_Source\PSoC5/CapSense.c ****     {
1779:.\Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1780:.\Generated_Source\PSoC5/CapSense.c ****         
1781:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 54


1782:.\Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1783:.\Generated_Source\PSoC5/CapSense.c ****         {
1784:.\Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1785:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1786:.\Generated_Source\PSoC5/CapSense.c ****         }
1787:.\Generated_Source\PSoC5/CapSense.c ****     }
1788:.\Generated_Source\PSoC5/CapSense.c ****     
1789:.\Generated_Source\PSoC5/CapSense.c ****     
1790:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1791:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1792:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1793:.\Generated_Source\PSoC5/CapSense.c ****     *
1794:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1795:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1796:.\Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1797:.\Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1798:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1799:.\Generated_Source\PSoC5/CapSense.c ****     * 
1800:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1801:.\Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1802:.\Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1803:.\Generated_Source\PSoC5/CapSense.c ****     *
1804:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1805:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1806:.\Generated_Source\PSoC5/CapSense.c ****     *
1807:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1808:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1809:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1810:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1811:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1812:.\Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1813:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1814:.\Generated_Source\PSoC5/CapSense.c ****     *
1815:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1816:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1817:.\Generated_Source\PSoC5/CapSense.c ****     *
1818:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1819:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1820:.\Generated_Source\PSoC5/CapSense.c ****     {
1821:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1822:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1823:.\Generated_Source\PSoC5/CapSense.c ****             
1824:.\Generated_Source\PSoC5/CapSense.c ****         #else
1825:.\Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1826:.\Generated_Source\PSoC5/CapSense.c ****             {
1827:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1828:.\Generated_Source\PSoC5/CapSense.c ****             }
1829:.\Generated_Source\PSoC5/CapSense.c ****             else
1830:.\Generated_Source\PSoC5/CapSense.c ****             {
1831:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1832:.\Generated_Source\PSoC5/CapSense.c ****             }
1833:.\Generated_Source\PSoC5/CapSense.c ****     
1834:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1835:.\Generated_Source\PSoC5/CapSense.c ****     }
1836:.\Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1837:.\Generated_Source\PSoC5/CapSense.c **** 
1838:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 55


1839:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1840:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1841:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1842:.\Generated_Source\PSoC5/CapSense.c ****     *
1843:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1844:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1845:.\Generated_Source\PSoC5/CapSense.c ****     *
1846:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1847:.\Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1848:.\Generated_Source\PSoC5/CapSense.c ****     *
1849:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1850:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1851:.\Generated_Source\PSoC5/CapSense.c ****     *
1852:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1853:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1854:.\Generated_Source\PSoC5/CapSense.c ****     {
 1238              		.loc 1 1854 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 8
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 1243 0000 80B4     		push	{r7}
 1244              		.cfi_def_cfa_offset 4
 1245              		.cfi_offset 7, -4
 1246 0002 83B0     		sub	sp, sp, #12
 1247              		.cfi_def_cfa_offset 16
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 1250 0006 0346     		mov	r3, r0
 1251 0008 FB71     		strb	r3, [r7, #7]
1855:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1856:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1857:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1252              		.loc 1 1857 0
 1253 000a 064A     		ldr	r2, .L57
 1254 000c FB79     		ldrb	r3, [r7, #7]
 1255 000e 1370     		strb	r3, [r2]
1858:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1256              		.loc 1 1858 0
 1257 0010 054A     		ldr	r2, .L57+4
 1258 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1259 0014 5B08     		lsrs	r3, r3, #1
 1260 0016 DBB2     		uxtb	r3, r3
 1261 0018 1370     		strb	r3, [r2]
1859:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1860:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1861:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1862:.\Generated_Source\PSoC5/CapSense.c ****         #else
1863:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1864:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1865:.\Generated_Source\PSoC5/CapSense.c ****     }
 1262              		.loc 1 1865 0
 1263 001a 0C37     		adds	r7, r7, #12
 1264              		.cfi_def_cfa_offset 4
 1265 001c BD46     		mov	sp, r7
 1266              		.cfi_def_cfa_register 13
 1267              		@ sp needed
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 56


 1268 001e 5DF8047B 		ldr	r7, [sp], #4
 1269              		.cfi_restore 7
 1270              		.cfi_def_cfa_offset 0
 1271 0022 7047     		bx	lr
 1272              	.L58:
 1273              		.align	2
 1274              	.L57:
 1275 0024 2E640040 		.word	1073767470
 1276 0028 3E640040 		.word	1073767486
 1277              		.cfi_endproc
 1278              	.LFE15:
 1279              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1280              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1281              		.align	2
 1282              		.global	CapSense_GetPrescaler
 1283              		.thumb
 1284              		.thumb_func
 1285              		.type	CapSense_GetPrescaler, %function
 1286              	CapSense_GetPrescaler:
 1287              	.LFB16:
1866:.\Generated_Source\PSoC5/CapSense.c **** 
1867:.\Generated_Source\PSoC5/CapSense.c **** 
1868:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1869:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1870:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1871:.\Generated_Source\PSoC5/CapSense.c ****     *
1872:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1873:.\Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1874:.\Generated_Source\PSoC5/CapSense.c ****     *
1875:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1876:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1877:.\Generated_Source\PSoC5/CapSense.c ****     *
1878:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1879:.\Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1880:.\Generated_Source\PSoC5/CapSense.c ****     *
1881:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1882:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1883:.\Generated_Source\PSoC5/CapSense.c ****     {
 1288              		.loc 1 1883 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 8
 1291              		@ frame_needed = 1, uses_anonymous_args = 0
 1292              		@ link register save eliminated.
 1293 0000 80B4     		push	{r7}
 1294              		.cfi_def_cfa_offset 4
 1295              		.cfi_offset 7, -4
 1296 0002 83B0     		sub	sp, sp, #12
 1297              		.cfi_def_cfa_offset 16
 1298 0004 00AF     		add	r7, sp, #0
 1299              		.cfi_def_cfa_register 7
1884:.\Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1300              		.loc 1 1884 0
 1301 0006 0023     		movs	r3, #0
 1302 0008 FB71     		strb	r3, [r7, #7]
1885:.\Generated_Source\PSoC5/CapSense.c **** 
1886:.\Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1887:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 57


1888:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1303              		.loc 1 1888 0
 1304 000a 054B     		ldr	r3, .L61
 1305 000c 1B78     		ldrb	r3, [r3]
 1306 000e FB71     		strb	r3, [r7, #7]
1889:.\Generated_Source\PSoC5/CapSense.c ****             
1890:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1891:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1892:.\Generated_Source\PSoC5/CapSense.c ****             
1893:.\Generated_Source\PSoC5/CapSense.c ****         #else
1894:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1895:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1896:.\Generated_Source\PSoC5/CapSense.c ****         
1897:.\Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
 1307              		.loc 1 1897 0
 1308 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1898:.\Generated_Source\PSoC5/CapSense.c ****     }
 1309              		.loc 1 1898 0
 1310 0012 1846     		mov	r0, r3
 1311 0014 0C37     		adds	r7, r7, #12
 1312              		.cfi_def_cfa_offset 4
 1313 0016 BD46     		mov	sp, r7
 1314              		.cfi_def_cfa_register 13
 1315              		@ sp needed
 1316 0018 5DF8047B 		ldr	r7, [sp], #4
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 001c 7047     		bx	lr
 1320              	.L62:
 1321 001e 00BF     		.align	2
 1322              	.L61:
 1323 0020 2E640040 		.word	1073767470
 1324              		.cfi_endproc
 1325              	.LFE16:
 1326              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1327              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1328              		.align	2
 1329              		.global	CapSense_SetScanSpeed
 1330              		.thumb
 1331              		.thumb_func
 1332              		.type	CapSense_SetScanSpeed, %function
 1333              	CapSense_SetScanSpeed:
 1334              	.LFB17:
1899:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1900:.\Generated_Source\PSoC5/CapSense.c **** 
1901:.\Generated_Source\PSoC5/CapSense.c **** 
1902:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1903:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1904:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1905:.\Generated_Source\PSoC5/CapSense.c **** *
1906:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1907:.\Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1908:.\Generated_Source\PSoC5/CapSense.c **** *
1909:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1910:.\Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1911:.\Generated_Source\PSoC5/CapSense.c **** *
1912:.\Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 58


1913:.\Generated_Source\PSoC5/CapSense.c **** *  None
1914:.\Generated_Source\PSoC5/CapSense.c **** *
1915:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1916:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1917:.\Generated_Source\PSoC5/CapSense.c **** {
 1335              		.loc 1 1917 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 8
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339              		@ link register save eliminated.
 1340 0000 80B4     		push	{r7}
 1341              		.cfi_def_cfa_offset 4
 1342              		.cfi_offset 7, -4
 1343 0002 83B0     		sub	sp, sp, #12
 1344              		.cfi_def_cfa_offset 16
 1345 0004 00AF     		add	r7, sp, #0
 1346              		.cfi_def_cfa_register 7
 1347 0006 0346     		mov	r3, r0
 1348 0008 FB71     		strb	r3, [r7, #7]
1918:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 1349              		.loc 1 1918 0
 1350 000a 044A     		ldr	r2, .L64
 1351 000c FB79     		ldrb	r3, [r7, #7]
 1352 000e 1370     		strb	r3, [r2]
1919:.\Generated_Source\PSoC5/CapSense.c **** }
 1353              		.loc 1 1919 0
 1354 0010 0C37     		adds	r7, r7, #12
 1355              		.cfi_def_cfa_offset 4
 1356 0012 BD46     		mov	sp, r7
 1357              		.cfi_def_cfa_register 13
 1358              		@ sp needed
 1359 0014 5DF8047B 		ldr	r7, [sp], #4
 1360              		.cfi_restore 7
 1361              		.cfi_def_cfa_offset 0
 1362 0018 7047     		bx	lr
 1363              	.L65:
 1364 001a 00BF     		.align	2
 1365              	.L64:
 1366 001c 8E640040 		.word	1073767566
 1367              		.cfi_endproc
 1368              	.LFE17:
 1369              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1370              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1371              		.align	2
 1372              		.global	CapSense_SetAnalogSwitchesSource
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	CapSense_SetAnalogSwitchesSource, %function
 1376              	CapSense_SetAnalogSwitchesSource:
 1377              	.LFB18:
1920:.\Generated_Source\PSoC5/CapSense.c **** 
1921:.\Generated_Source\PSoC5/CapSense.c **** 
1922:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1923:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1924:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1925:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1926:.\Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 59


1927:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1928:.\Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1929:.\Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1930:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1931:.\Generated_Source\PSoC5/CapSense.c ****     *
1932:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1933:.\Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1934:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1935:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1936:.\Generated_Source\PSoC5/CapSense.c ****     *
1937:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1938:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1939:.\Generated_Source\PSoC5/CapSense.c ****     *
1940:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1941:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1942:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1943:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1944:.\Generated_Source\PSoC5/CapSense.c ****                       
1945:.\Generated_Source\PSoC5/CapSense.c ****     {
 1378              		.loc 1 1945 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 8
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
 1383 0000 80B4     		push	{r7}
 1384              		.cfi_def_cfa_offset 4
 1385              		.cfi_offset 7, -4
 1386 0002 83B0     		sub	sp, sp, #12
 1387              		.cfi_def_cfa_offset 16
 1388 0004 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 1390 0006 0346     		mov	r3, r0
 1391 0008 FB71     		strb	r3, [r7, #7]
1946:.\Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 1392              		.loc 1 1946 0
 1393 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1394 000c 012B     		cmp	r3, #1
 1395 000e 08D1     		bne	.L67
1947:.\Generated_Source\PSoC5/CapSense.c ****         {
1948:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 1396              		.loc 1 1948 0
 1397 0010 0A4A     		ldr	r2, .L69
 1398 0012 0A4B     		ldr	r3, .L69
 1399 0014 1B78     		ldrb	r3, [r3]
 1400 0016 DBB2     		uxtb	r3, r3
 1401 0018 23F01003 		bic	r3, r3, #16
 1402 001c DBB2     		uxtb	r3, r3
 1403 001e 1370     		strb	r3, [r2]
 1404 0020 07E0     		b	.L66
 1405              	.L67:
1949:.\Generated_Source\PSoC5/CapSense.c ****         }
1950:.\Generated_Source\PSoC5/CapSense.c ****         else
1951:.\Generated_Source\PSoC5/CapSense.c ****         {
1952:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 1406              		.loc 1 1952 0
 1407 0022 064A     		ldr	r2, .L69
 1408 0024 054B     		ldr	r3, .L69
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 60


 1409 0026 1B78     		ldrb	r3, [r3]
 1410 0028 DBB2     		uxtb	r3, r3
 1411 002a 43F01003 		orr	r3, r3, #16
 1412 002e DBB2     		uxtb	r3, r3
 1413 0030 1370     		strb	r3, [r2]
 1414              	.L66:
1953:.\Generated_Source\PSoC5/CapSense.c ****         }
1954:.\Generated_Source\PSoC5/CapSense.c ****     }
 1415              		.loc 1 1954 0
 1416 0032 0C37     		adds	r7, r7, #12
 1417              		.cfi_def_cfa_offset 4
 1418 0034 BD46     		mov	sp, r7
 1419              		.cfi_def_cfa_register 13
 1420              		@ sp needed
 1421 0036 5DF8047B 		ldr	r7, [sp], #4
 1422              		.cfi_restore 7
 1423              		.cfi_def_cfa_offset 0
 1424 003a 7047     		bx	lr
 1425              	.L70:
 1426              		.align	2
 1427              	.L69:
 1428 003c 7B640040 		.word	1073767547
 1429              		.cfi_endproc
 1430              	.LFE18:
 1431              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 1432              		.text
 1433              	.Letext0:
 1434              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1435              		.section	.debug_info,"",%progbits
 1436              	.Ldebug_info0:
 1437 0000 2C050000 		.4byte	0x52c
 1438 0004 0400     		.2byte	0x4
 1439 0006 00000000 		.4byte	.Ldebug_abbrev0
 1440 000a 04       		.byte	0x4
 1441 000b 01       		.uleb128 0x1
 1442 000c 6C020000 		.4byte	.LASF61
 1443 0010 01       		.byte	0x1
 1444 0011 D0040000 		.4byte	.LASF62
 1445 0015 F0030000 		.4byte	.LASF63
 1446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1447 001d 00000000 		.4byte	0
 1448 0021 00000000 		.4byte	.Ldebug_line0
 1449 0025 02       		.uleb128 0x2
 1450 0026 01       		.byte	0x1
 1451 0027 06       		.byte	0x6
 1452 0028 A6000000 		.4byte	.LASF0
 1453 002c 02       		.uleb128 0x2
 1454 002d 01       		.byte	0x1
 1455 002e 08       		.byte	0x8
 1456 002f 54030000 		.4byte	.LASF1
 1457 0033 02       		.uleb128 0x2
 1458 0034 02       		.byte	0x2
 1459 0035 05       		.byte	0x5
 1460 0036 7C030000 		.4byte	.LASF2
 1461 003a 02       		.uleb128 0x2
 1462 003b 02       		.byte	0x2
 1463 003c 07       		.byte	0x7
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 61


 1464 003d C7010000 		.4byte	.LASF3
 1465 0041 02       		.uleb128 0x2
 1466 0042 04       		.byte	0x4
 1467 0043 05       		.byte	0x5
 1468 0044 D3000000 		.4byte	.LASF4
 1469 0048 02       		.uleb128 0x2
 1470 0049 04       		.byte	0x4
 1471 004a 07       		.byte	0x7
 1472 004b 8F010000 		.4byte	.LASF5
 1473 004f 02       		.uleb128 0x2
 1474 0050 08       		.byte	0x8
 1475 0051 05       		.byte	0x5
 1476 0052 98000000 		.4byte	.LASF6
 1477 0056 02       		.uleb128 0x2
 1478 0057 08       		.byte	0x8
 1479 0058 07       		.byte	0x7
 1480 0059 5B000000 		.4byte	.LASF7
 1481 005d 03       		.uleb128 0x3
 1482 005e 04       		.byte	0x4
 1483 005f 05       		.byte	0x5
 1484 0060 696E7400 		.ascii	"int\000"
 1485 0064 02       		.uleb128 0x2
 1486 0065 04       		.byte	0x4
 1487 0066 07       		.byte	0x7
 1488 0067 6C010000 		.4byte	.LASF8
 1489 006b 04       		.uleb128 0x4
 1490 006c E2000000 		.4byte	.LASF9
 1491 0070 02       		.byte	0x2
 1492 0071 C2       		.byte	0xc2
 1493 0072 2C000000 		.4byte	0x2c
 1494 0076 04       		.uleb128 0x4
 1495 0077 00000000 		.4byte	.LASF10
 1496 007b 02       		.byte	0x2
 1497 007c C3       		.byte	0xc3
 1498 007d 3A000000 		.4byte	0x3a
 1499 0081 04       		.uleb128 0x4
 1500 0082 32010000 		.4byte	.LASF11
 1501 0086 02       		.byte	0x2
 1502 0087 C4       		.byte	0xc4
 1503 0088 48000000 		.4byte	0x48
 1504 008c 02       		.uleb128 0x2
 1505 008d 04       		.byte	0x4
 1506 008e 04       		.byte	0x4
 1507 008f 10030000 		.4byte	.LASF12
 1508 0093 02       		.uleb128 0x2
 1509 0094 08       		.byte	0x8
 1510 0095 04       		.byte	0x4
 1511 0096 E8000000 		.4byte	.LASF13
 1512 009a 02       		.uleb128 0x2
 1513 009b 01       		.byte	0x1
 1514 009c 08       		.byte	0x8
 1515 009d A3030000 		.4byte	.LASF14
 1516 00a1 05       		.uleb128 0x5
 1517 00a2 20030000 		.4byte	.LASF15
 1518 00a6 02       		.byte	0x2
 1519 00a7 6C01     		.2byte	0x16c
 1520 00a9 AD000000 		.4byte	0xad
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 62


 1521 00ad 06       		.uleb128 0x6
 1522 00ae 6B000000 		.4byte	0x6b
 1523 00b2 05       		.uleb128 0x5
 1524 00b3 DC000000 		.4byte	.LASF16
 1525 00b7 02       		.byte	0x2
 1526 00b8 6D01     		.2byte	0x16d
 1527 00ba BE000000 		.4byte	0xbe
 1528 00be 06       		.uleb128 0x6
 1529 00bf 76000000 		.4byte	0x76
 1530 00c3 05       		.uleb128 0x5
 1531 00c4 10020000 		.4byte	.LASF17
 1532 00c8 02       		.byte	0x2
 1533 00c9 6E01     		.2byte	0x16e
 1534 00cb CF000000 		.4byte	0xcf
 1535 00cf 06       		.uleb128 0x6
 1536 00d0 81000000 		.4byte	0x81
 1537 00d4 02       		.uleb128 0x2
 1538 00d5 04       		.byte	0x4
 1539 00d6 07       		.byte	0x7
 1540 00d7 33020000 		.4byte	.LASF18
 1541 00db 07       		.uleb128 0x7
 1542 00dc 93040000 		.4byte	.LASF19
 1543 00e0 01       		.byte	0x1
 1544 00e1 65       		.byte	0x65
 1545 00e2 00000000 		.4byte	.LFB0
 1546 00e6 48010000 		.4byte	.LFE0-.LFB0
 1547 00ea 01       		.uleb128 0x1
 1548 00eb 9C       		.byte	0x9c
 1549 00ec FF000000 		.4byte	0xff
 1550 00f0 08       		.uleb128 0x8
 1551 00f1 DF030000 		.4byte	.LASF21
 1552 00f5 01       		.byte	0x1
 1553 00f6 6C       		.byte	0x6c
 1554 00f7 6B000000 		.4byte	0x6b
 1555 00fb 02       		.uleb128 0x2
 1556 00fc 91       		.byte	0x91
 1557 00fd 77       		.sleb128 -9
 1558 00fe 00       		.byte	0
 1559 00ff 09       		.uleb128 0x9
 1560 0100 72000000 		.4byte	.LASF20
 1561 0104 01       		.byte	0x1
 1562 0105 4601     		.2byte	0x146
 1563 0107 00000000 		.4byte	.LFB1
 1564 010b 98000000 		.4byte	.LFE1-.LFB1
 1565 010f 01       		.uleb128 0x1
 1566 0110 9C       		.byte	0x9c
 1567 0111 25010000 		.4byte	0x125
 1568 0115 0A       		.uleb128 0xa
 1569 0116 DF030000 		.4byte	.LASF21
 1570 011a 01       		.byte	0x1
 1571 011b 4801     		.2byte	0x148
 1572 011d 6B000000 		.4byte	0x6b
 1573 0121 02       		.uleb128 0x2
 1574 0122 91       		.byte	0x91
 1575 0123 77       		.sleb128 -9
 1576 0124 00       		.byte	0
 1577 0125 0B       		.uleb128 0xb
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 63


 1578 0126 BE030000 		.4byte	.LASF22
 1579 012a 01       		.byte	0x1
 1580 012b DF01     		.2byte	0x1df
 1581 012d 00000000 		.4byte	.LFB2
 1582 0131 30000000 		.4byte	.LFE2-.LFB2
 1583 0135 01       		.uleb128 0x1
 1584 0136 9C       		.byte	0x9c
 1585 0137 0B       		.uleb128 0xb
 1586 0138 4D020000 		.4byte	.LASF23
 1587 013c 01       		.byte	0x1
 1588 013d 0402     		.2byte	0x204
 1589 013f 00000000 		.4byte	.LFB3
 1590 0143 94000000 		.4byte	.LFE3-.LFB3
 1591 0147 01       		.uleb128 0x1
 1592 0148 9C       		.byte	0x9c
 1593 0149 0C       		.uleb128 0xc
 1594 014a 25030000 		.4byte	.LASF32
 1595 014e 01       		.byte	0x1
 1596 014f 8E02     		.2byte	0x28e
 1597 0151 6B000000 		.4byte	0x6b
 1598 0155 00000000 		.4byte	.LFB4
 1599 0159 50000000 		.4byte	.LFE4-.LFB4
 1600 015d 01       		.uleb128 0x1
 1601 015e 9C       		.byte	0x9c
 1602 015f 91010000 		.4byte	0x191
 1603 0163 0D       		.uleb128 0xd
 1604 0164 52000000 		.4byte	.LASF26
 1605 0168 01       		.byte	0x1
 1606 0169 8E02     		.2byte	0x28e
 1607 016b 6B000000 		.4byte	0x6b
 1608 016f 02       		.uleb128 0x2
 1609 0170 91       		.byte	0x91
 1610 0171 6F       		.sleb128 -17
 1611 0172 0E       		.uleb128 0xe
 1612 0173 706F7300 		.ascii	"pos\000"
 1613 0177 01       		.byte	0x1
 1614 0178 9002     		.2byte	0x290
 1615 017a 6B000000 		.4byte	0x6b
 1616 017e 02       		.uleb128 0x2
 1617 017f 91       		.byte	0x91
 1618 0180 77       		.sleb128 -9
 1619 0181 0A       		.uleb128 0xa
 1620 0182 65020000 		.4byte	.LASF24
 1621 0186 01       		.byte	0x1
 1622 0187 9102     		.2byte	0x291
 1623 0189 6B000000 		.4byte	0x6b
 1624 018d 02       		.uleb128 0x2
 1625 018e 91       		.byte	0x91
 1626 018f 76       		.sleb128 -10
 1627 0190 00       		.byte	0
 1628 0191 09       		.uleb128 0x9
 1629 0192 65040000 		.4byte	.LASF25
 1630 0196 01       		.byte	0x1
 1631 0197 2803     		.2byte	0x328
 1632 0199 00000000 		.4byte	.LFB5
 1633 019d 50000000 		.4byte	.LFE5-.LFB5
 1634 01a1 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 64


 1635 01a2 9C       		.byte	0x9c
 1636 01a3 C6010000 		.4byte	0x1c6
 1637 01a7 0D       		.uleb128 0xd
 1638 01a8 FB010000 		.4byte	.LASF27
 1639 01ac 01       		.byte	0x1
 1640 01ad 2803     		.2byte	0x328
 1641 01af 6B000000 		.4byte	0x6b
 1642 01b3 02       		.uleb128 0x2
 1643 01b4 91       		.byte	0x91
 1644 01b5 6F       		.sleb128 -17
 1645 01b6 0A       		.uleb128 0xa
 1646 01b7 86030000 		.4byte	.LASF28
 1647 01bb 01       		.byte	0x1
 1648 01bc 2A03     		.2byte	0x32a
 1649 01be 6B000000 		.4byte	0x6b
 1650 01c2 02       		.uleb128 0x2
 1651 01c3 91       		.byte	0x91
 1652 01c4 77       		.sleb128 -9
 1653 01c5 00       		.byte	0
 1654 01c6 09       		.uleb128 0x9
 1655 01c7 58010000 		.4byte	.LASF29
 1656 01cb 01       		.byte	0x1
 1657 01cc 9803     		.2byte	0x398
 1658 01ce 00000000 		.4byte	.LFB6
 1659 01d2 34000000 		.4byte	.LFE6-.LFB6
 1660 01d6 01       		.uleb128 0x1
 1661 01d7 9C       		.byte	0x9c
 1662 01d8 EC010000 		.4byte	0x1ec
 1663 01dc 0D       		.uleb128 0xd
 1664 01dd DA010000 		.4byte	.LASF30
 1665 01e1 01       		.byte	0x1
 1666 01e2 9803     		.2byte	0x398
 1667 01e4 6B000000 		.4byte	0x6b
 1668 01e8 02       		.uleb128 0x2
 1669 01e9 91       		.byte	0x91
 1670 01ea 77       		.sleb128 -9
 1671 01eb 00       		.byte	0
 1672 01ec 0B       		.uleb128 0xb
 1673 01ed B4040000 		.4byte	.LASF31
 1674 01f1 01       		.byte	0x1
 1675 01f2 E503     		.2byte	0x3e5
 1676 01f4 00000000 		.4byte	.LFB7
 1677 01f8 54000000 		.4byte	.LFE7-.LFB7
 1678 01fc 01       		.uleb128 0x1
 1679 01fd 9C       		.byte	0x9c
 1680 01fe 0F       		.uleb128 0xf
 1681 01ff 00020000 		.4byte	.LASF64
 1682 0203 01       		.byte	0x1
 1683 0204 1A04     		.2byte	0x41a
 1684 0206 6B000000 		.4byte	0x6b
 1685 020a 00000000 		.4byte	.LFB8
 1686 020e 20000000 		.4byte	.LFE8-.LFB8
 1687 0212 01       		.uleb128 0x1
 1688 0213 9C       		.byte	0x9c
 1689 0214 0C       		.uleb128 0xc
 1690 0215 1B010000 		.4byte	.LASF33
 1691 0219 01       		.byte	0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 65


 1692 021a 3304     		.2byte	0x433
 1693 021c 76000000 		.4byte	0x76
 1694 0220 00000000 		.4byte	.LFB9
 1695 0224 24000000 		.4byte	.LFE9-.LFB9
 1696 0228 01       		.uleb128 0x1
 1697 0229 9C       		.byte	0x9c
 1698 022a 3E020000 		.4byte	0x23e
 1699 022e 0D       		.uleb128 0xd
 1700 022f DA010000 		.4byte	.LASF30
 1701 0233 01       		.byte	0x1
 1702 0234 3304     		.2byte	0x433
 1703 0236 6B000000 		.4byte	0x6b
 1704 023a 02       		.uleb128 0x2
 1705 023b 91       		.byte	0x91
 1706 023c 77       		.sleb128 -9
 1707 023d 00       		.byte	0
 1708 023e 09       		.uleb128 0x9
 1709 023f 79010000 		.4byte	.LASF34
 1710 0243 01       		.byte	0x1
 1711 0244 4804     		.2byte	0x448
 1712 0246 00000000 		.4byte	.LFB10
 1713 024a 26000000 		.4byte	.LFE10-.LFB10
 1714 024e 01       		.uleb128 0x1
 1715 024f 9C       		.byte	0x9c
 1716 0250 62020000 		.4byte	0x262
 1717 0254 0E       		.uleb128 0xe
 1718 0255 6900     		.ascii	"i\000"
 1719 0257 01       		.byte	0x1
 1720 0258 4A04     		.2byte	0x44a
 1721 025a 6B000000 		.4byte	0x6b
 1722 025e 02       		.uleb128 0x2
 1723 025f 91       		.byte	0x91
 1724 0260 77       		.sleb128 -9
 1725 0261 00       		.byte	0
 1726 0262 09       		.uleb128 0x9
 1727 0263 EF000000 		.4byte	.LASF35
 1728 0267 01       		.byte	0x1
 1729 0268 DE04     		.2byte	0x4de
 1730 026a 00000000 		.4byte	.LFB11
 1731 026e 68000000 		.4byte	.LFE11-.LFB11
 1732 0272 01       		.uleb128 0x1
 1733 0273 9C       		.byte	0x9c
 1734 0274 A6020000 		.4byte	0x2a6
 1735 0278 0D       		.uleb128 0xd
 1736 0279 DA010000 		.4byte	.LASF30
 1737 027d 01       		.byte	0x1
 1738 027e DE04     		.2byte	0x4de
 1739 0280 6B000000 		.4byte	0x6b
 1740 0284 02       		.uleb128 0x2
 1741 0285 91       		.byte	0x91
 1742 0286 6F       		.sleb128 -17
 1743 0287 0A       		.uleb128 0xa
 1744 0288 3E010000 		.4byte	.LASF36
 1745 028c 01       		.byte	0x1
 1746 028d E004     		.2byte	0x4e0
 1747 028f 6B000000 		.4byte	0x6b
 1748 0293 02       		.uleb128 0x2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 66


 1749 0294 91       		.byte	0x91
 1750 0295 77       		.sleb128 -9
 1751 0296 0A       		.uleb128 0xa
 1752 0297 39010000 		.4byte	.LASF37
 1753 029b 01       		.byte	0x1
 1754 029c E104     		.2byte	0x4e1
 1755 029e 6B000000 		.4byte	0x6b
 1756 02a2 02       		.uleb128 0x2
 1757 02a3 91       		.byte	0x91
 1758 02a4 76       		.sleb128 -10
 1759 02a5 00       		.byte	0
 1760 02a6 09       		.uleb128 0x9
 1761 02a7 3D030000 		.4byte	.LASF38
 1762 02ab 01       		.byte	0x1
 1763 02ac 3305     		.2byte	0x533
 1764 02ae 00000000 		.4byte	.LFB12
 1765 02b2 6C000000 		.4byte	.LFE12-.LFB12
 1766 02b6 01       		.uleb128 0x1
 1767 02b7 9C       		.byte	0x9c
 1768 02b8 EA020000 		.4byte	0x2ea
 1769 02bc 0D       		.uleb128 0xd
 1770 02bd DA010000 		.4byte	.LASF30
 1771 02c1 01       		.byte	0x1
 1772 02c2 3305     		.2byte	0x533
 1773 02c4 6B000000 		.4byte	0x6b
 1774 02c8 02       		.uleb128 0x2
 1775 02c9 91       		.byte	0x91
 1776 02ca 6F       		.sleb128 -17
 1777 02cb 0A       		.uleb128 0xa
 1778 02cc 3E010000 		.4byte	.LASF36
 1779 02d0 01       		.byte	0x1
 1780 02d1 3505     		.2byte	0x535
 1781 02d3 6B000000 		.4byte	0x6b
 1782 02d7 02       		.uleb128 0x2
 1783 02d8 91       		.byte	0x91
 1784 02d9 77       		.sleb128 -9
 1785 02da 0A       		.uleb128 0xa
 1786 02db 39010000 		.4byte	.LASF37
 1787 02df 01       		.byte	0x1
 1788 02e0 3605     		.2byte	0x536
 1789 02e2 6B000000 		.4byte	0x6b
 1790 02e6 02       		.uleb128 0x2
 1791 02e7 91       		.byte	0x91
 1792 02e8 76       		.sleb128 -10
 1793 02e9 00       		.byte	0
 1794 02ea 09       		.uleb128 0x9
 1795 02eb 82040000 		.4byte	.LASF39
 1796 02ef 01       		.byte	0x1
 1797 02f0 8705     		.2byte	0x587
 1798 02f2 00000000 		.4byte	.LFB13
 1799 02f6 58000000 		.4byte	.LFE13-.LFB13
 1800 02fa 01       		.uleb128 0x1
 1801 02fb 9C       		.byte	0x9c
 1802 02fc 10030000 		.4byte	0x310
 1803 0300 0D       		.uleb128 0xd
 1804 0301 DA010000 		.4byte	.LASF30
 1805 0305 01       		.byte	0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 67


 1806 0306 8705     		.2byte	0x587
 1807 0308 6B000000 		.4byte	0x6b
 1808 030c 02       		.uleb128 0x2
 1809 030d 91       		.byte	0x91
 1810 030e 77       		.sleb128 -9
 1811 030f 00       		.byte	0
 1812 0310 09       		.uleb128 0x9
 1813 0311 CD030000 		.4byte	.LASF40
 1814 0315 01       		.byte	0x1
 1815 0316 2F06     		.2byte	0x62f
 1816 0318 00000000 		.4byte	.LFB14
 1817 031c 98000000 		.4byte	.LFE14-.LFB14
 1818 0320 01       		.uleb128 0x1
 1819 0321 9C       		.byte	0x9c
 1820 0322 36030000 		.4byte	0x336
 1821 0326 0D       		.uleb128 0xd
 1822 0327 DA010000 		.4byte	.LASF30
 1823 032b 01       		.byte	0x1
 1824 032c 2F06     		.2byte	0x62f
 1825 032e 6B000000 		.4byte	0x6b
 1826 0332 02       		.uleb128 0x2
 1827 0333 91       		.byte	0x91
 1828 0334 77       		.sleb128 -9
 1829 0335 00       		.byte	0
 1830 0336 10       		.uleb128 0x10
 1831 0337 82000000 		.4byte	.LASF41
 1832 033b 01       		.byte	0x1
 1833 033c 3D07     		.2byte	0x73d
 1834 033e 00000000 		.4byte	.LFB15
 1835 0342 2C000000 		.4byte	.LFE15-.LFB15
 1836 0346 01       		.uleb128 0x1
 1837 0347 9C       		.byte	0x9c
 1838 0348 5C030000 		.4byte	0x35c
 1839 034c 0D       		.uleb128 0xd
 1840 034d 16030000 		.4byte	.LASF42
 1841 0351 01       		.byte	0x1
 1842 0352 3D07     		.2byte	0x73d
 1843 0354 6B000000 		.4byte	0x6b
 1844 0358 02       		.uleb128 0x2
 1845 0359 91       		.byte	0x91
 1846 035a 77       		.sleb128 -9
 1847 035b 00       		.byte	0
 1848 035c 0C       		.uleb128 0xc
 1849 035d 8D030000 		.4byte	.LASF43
 1850 0361 01       		.byte	0x1
 1851 0362 5A07     		.2byte	0x75a
 1852 0364 6B000000 		.4byte	0x6b
 1853 0368 00000000 		.4byte	.LFB16
 1854 036c 24000000 		.4byte	.LFE16-.LFB16
 1855 0370 01       		.uleb128 0x1
 1856 0371 9C       		.byte	0x9c
 1857 0372 86030000 		.4byte	0x386
 1858 0376 0A       		.uleb128 0xa
 1859 0377 16030000 		.4byte	.LASF42
 1860 037b 01       		.byte	0x1
 1861 037c 5C07     		.2byte	0x75c
 1862 037e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 68


 1863 0382 02       		.uleb128 0x2
 1864 0383 91       		.byte	0x91
 1865 0384 77       		.sleb128 -9
 1866 0385 00       		.byte	0
 1867 0386 10       		.uleb128 0x10
 1868 0387 A8030000 		.4byte	.LASF44
 1869 038b 01       		.byte	0x1
 1870 038c 7C07     		.2byte	0x77c
 1871 038e 00000000 		.4byte	.LFB17
 1872 0392 20000000 		.4byte	.LFE17-.LFB17
 1873 0396 01       		.uleb128 0x1
 1874 0397 9C       		.byte	0x9c
 1875 0398 AC030000 		.4byte	0x3ac
 1876 039c 0D       		.uleb128 0xd
 1877 039d 5B020000 		.4byte	.LASF45
 1878 03a1 01       		.byte	0x1
 1879 03a2 7C07     		.2byte	0x77c
 1880 03a4 6B000000 		.4byte	0x6b
 1881 03a8 02       		.uleb128 0x2
 1882 03a9 91       		.byte	0x91
 1883 03aa 77       		.sleb128 -9
 1884 03ab 00       		.byte	0
 1885 03ac 10       		.uleb128 0x10
 1886 03ad B2000000 		.4byte	.LASF46
 1887 03b1 01       		.byte	0x1
 1888 03b2 9707     		.2byte	0x797
 1889 03b4 00000000 		.4byte	.LFB18
 1890 03b8 40000000 		.4byte	.LFE18-.LFB18
 1891 03bc 01       		.uleb128 0x1
 1892 03bd 9C       		.byte	0x9c
 1893 03be D2030000 		.4byte	0x3d2
 1894 03c2 11       		.uleb128 0x11
 1895 03c3 73726300 		.ascii	"src\000"
 1896 03c7 01       		.byte	0x1
 1897 03c8 9707     		.2byte	0x797
 1898 03ca 6B000000 		.4byte	0x6b
 1899 03ce 02       		.uleb128 0x2
 1900 03cf 91       		.byte	0x91
 1901 03d0 77       		.sleb128 -9
 1902 03d1 00       		.byte	0
 1903 03d2 08       		.uleb128 0x8
 1904 03d3 14000000 		.4byte	.LASF47
 1905 03d7 01       		.byte	0x1
 1906 03d8 16       		.byte	0x16
 1907 03d9 6B000000 		.4byte	0x6b
 1908 03dd 05       		.uleb128 0x5
 1909 03de 03       		.byte	0x3
 1910 03df 00000000 		.4byte	CapSense_initVar
 1911 03e3 12       		.uleb128 0x12
 1912 03e4 36000000 		.4byte	.LASF48
 1913 03e8 01       		.byte	0x1
 1914 03e9 1E       		.byte	0x1e
 1915 03ea 6B000000 		.4byte	0x6b
 1916 03ee 05       		.uleb128 0x5
 1917 03ef 03       		.byte	0x3
 1918 03f0 00000000 		.4byte	CapSense_lowLevelTuningDone
 1919 03f4 12       		.uleb128 0x12
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 69


 1920 03f5 07000000 		.4byte	.LASF49
 1921 03f9 01       		.byte	0x1
 1922 03fa 19       		.byte	0x19
 1923 03fb AD000000 		.4byte	0xad
 1924 03ff 05       		.uleb128 0x5
 1925 0400 03       		.byte	0x3
 1926 0401 00000000 		.4byte	CapSense_csv
 1927 0405 12       		.uleb128 0x12
 1928 0406 43010000 		.4byte	.LASF50
 1929 040a 01       		.byte	0x1
 1930 040b 1A       		.byte	0x1a
 1931 040c AD000000 		.4byte	0xad
 1932 0410 05       		.uleb128 0x5
 1933 0411 03       		.byte	0x3
 1934 0412 00000000 		.4byte	CapSense_sensorIndex
 1935 0416 13       		.uleb128 0x13
 1936 0417 76000000 		.4byte	0x76
 1937 041b 26040000 		.4byte	0x426
 1938 041f 14       		.uleb128 0x14
 1939 0420 D4000000 		.4byte	0xd4
 1940 0424 01       		.byte	0x1
 1941 0425 00       		.byte	0
 1942 0426 12       		.uleb128 0x12
 1943 0427 A1040000 		.4byte	.LASF51
 1944 042b 01       		.byte	0x1
 1945 042c 29       		.byte	0x29
 1946 042d 16040000 		.4byte	0x416
 1947 0431 05       		.uleb128 0x5
 1948 0432 03       		.byte	0x3
 1949 0433 00000000 		.4byte	CapSense_sensorRaw
 1950 0437 13       		.uleb128 0x13
 1951 0438 6B000000 		.4byte	0x6b
 1952 043c 47040000 		.4byte	0x447
 1953 0440 14       		.uleb128 0x14
 1954 0441 D4000000 		.4byte	0xd4
 1955 0445 00       		.byte	0
 1956 0446 00       		.byte	0
 1957 0447 12       		.uleb128 0x12
 1958 0448 E1010000 		.4byte	.LASF52
 1959 044c 01       		.byte	0x1
 1960 044d 2B       		.byte	0x2b
 1961 044e 37040000 		.4byte	0x437
 1962 0452 05       		.uleb128 0x5
 1963 0453 03       		.byte	0x3
 1964 0454 00000000 		.4byte	CapSense_sensorEnableMask
 1965 0458 13       		.uleb128 0x13
 1966 0459 68040000 		.4byte	0x468
 1967 045d 68040000 		.4byte	0x468
 1968 0461 14       		.uleb128 0x14
 1969 0462 D4000000 		.4byte	0xd4
 1970 0466 01       		.byte	0x1
 1971 0467 00       		.byte	0
 1972 0468 15       		.uleb128 0x15
 1973 0469 04       		.byte	0x4
 1974 046a 6B000000 		.4byte	0x6b
 1975 046e 12       		.uleb128 0x12
 1976 046f 25000000 		.4byte	.LASF53
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 70


 1977 0473 01       		.byte	0x1
 1978 0474 2E       		.byte	0x2e
 1979 0475 7F040000 		.4byte	0x47f
 1980 0479 05       		.uleb128 0x5
 1981 047a 03       		.byte	0x3
 1982 047b 00000000 		.4byte	CapSense_pcTable
 1983 047f 16       		.uleb128 0x16
 1984 0480 58040000 		.4byte	0x458
 1985 0484 13       		.uleb128 0x13
 1986 0485 6B000000 		.4byte	0x6b
 1987 0489 94040000 		.4byte	0x494
 1988 048d 14       		.uleb128 0x14
 1989 048e D4000000 		.4byte	0xd4
 1990 0492 01       		.byte	0x1
 1991 0493 00       		.byte	0
 1992 0494 12       		.uleb128 0x12
 1993 0495 B4010000 		.4byte	.LASF54
 1994 0499 01       		.byte	0x1
 1995 049a 33       		.byte	0x33
 1996 049b A5040000 		.4byte	0x4a5
 1997 049f 05       		.uleb128 0x5
 1998 04a0 03       		.byte	0x3
 1999 04a1 00000000 		.4byte	CapSense_portTable
 2000 04a5 16       		.uleb128 0x16
 2001 04a6 84040000 		.4byte	0x484
 2002 04aa 12       		.uleb128 0x12
 2003 04ab A1010000 		.4byte	.LASF55
 2004 04af 01       		.byte	0x1
 2005 04b0 38       		.byte	0x38
 2006 04b1 BB040000 		.4byte	0x4bb
 2007 04b5 05       		.uleb128 0x5
 2008 04b6 03       		.byte	0x3
 2009 04b7 00000000 		.4byte	CapSense_maskTable
 2010 04bb 16       		.uleb128 0x16
 2011 04bc 84040000 		.4byte	0x484
 2012 04c0 13       		.uleb128 0x13
 2013 04c1 68040000 		.4byte	0x468
 2014 04c5 D0040000 		.4byte	0x4d0
 2015 04c9 14       		.uleb128 0x14
 2016 04ca D4000000 		.4byte	0xd4
 2017 04ce 07       		.byte	0x7
 2018 04cf 00       		.byte	0
 2019 04d0 12       		.uleb128 0x12
 2020 04d1 3C020000 		.4byte	.LASF56
 2021 04d5 01       		.byte	0x1
 2022 04d6 3D       		.byte	0x3d
 2023 04d7 E1040000 		.4byte	0x4e1
 2024 04db 05       		.uleb128 0x5
 2025 04dc 03       		.byte	0x3
 2026 04dd 00000000 		.4byte	CapSense_csTable
 2027 04e1 16       		.uleb128 0x16
 2028 04e2 C0040000 		.4byte	0x4c0
 2029 04e6 12       		.uleb128 0x12
 2030 04e7 FA020000 		.4byte	.LASF57
 2031 04eb 01       		.byte	0x1
 2032 04ec 43       		.byte	0x43
 2033 04ed 84040000 		.4byte	0x484
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 71


 2034 04f1 05       		.uleb128 0x5
 2035 04f2 03       		.byte	0x3
 2036 04f3 00000000 		.4byte	CapSense_idacSettings
 2037 04f7 12       		.uleb128 0x12
 2038 04f8 62030000 		.4byte	.LASF58
 2039 04fc 01       		.byte	0x1
 2040 04fd 47       		.byte	0x47
 2041 04fe 84040000 		.4byte	0x484
 2042 0502 05       		.uleb128 0x5
 2043 0503 03       		.byte	0x3
 2044 0504 00000000 		.4byte	CapSense_widgetResolution
 2045 0508 12       		.uleb128 0x12
 2046 0509 16020000 		.4byte	.LASF59
 2047 050d 01       		.byte	0x1
 2048 050e 4C       		.byte	0x4c
 2049 050f 84040000 		.4byte	0x484
 2050 0513 05       		.uleb128 0x5
 2051 0514 03       		.byte	0x3
 2052 0515 00000000 		.4byte	CapSense_analogSwitchDivider
 2053 0519 12       		.uleb128 0x12
 2054 051a 05010000 		.4byte	.LASF60
 2055 051e 01       		.byte	0x1
 2056 051f 4D       		.byte	0x4d
 2057 0520 2A050000 		.4byte	0x52a
 2058 0524 05       		.uleb128 0x5
 2059 0525 03       		.byte	0x3
 2060 0526 00000000 		.4byte	CapSense_widgetNumber
 2061 052a 16       		.uleb128 0x16
 2062 052b 84040000 		.4byte	0x484
 2063 052f 00       		.byte	0
 2064              		.section	.debug_abbrev,"",%progbits
 2065              	.Ldebug_abbrev0:
 2066 0000 01       		.uleb128 0x1
 2067 0001 11       		.uleb128 0x11
 2068 0002 01       		.byte	0x1
 2069 0003 25       		.uleb128 0x25
 2070 0004 0E       		.uleb128 0xe
 2071 0005 13       		.uleb128 0x13
 2072 0006 0B       		.uleb128 0xb
 2073 0007 03       		.uleb128 0x3
 2074 0008 0E       		.uleb128 0xe
 2075 0009 1B       		.uleb128 0x1b
 2076 000a 0E       		.uleb128 0xe
 2077 000b 55       		.uleb128 0x55
 2078 000c 17       		.uleb128 0x17
 2079 000d 11       		.uleb128 0x11
 2080 000e 01       		.uleb128 0x1
 2081 000f 10       		.uleb128 0x10
 2082 0010 17       		.uleb128 0x17
 2083 0011 00       		.byte	0
 2084 0012 00       		.byte	0
 2085 0013 02       		.uleb128 0x2
 2086 0014 24       		.uleb128 0x24
 2087 0015 00       		.byte	0
 2088 0016 0B       		.uleb128 0xb
 2089 0017 0B       		.uleb128 0xb
 2090 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 72


 2091 0019 0B       		.uleb128 0xb
 2092 001a 03       		.uleb128 0x3
 2093 001b 0E       		.uleb128 0xe
 2094 001c 00       		.byte	0
 2095 001d 00       		.byte	0
 2096 001e 03       		.uleb128 0x3
 2097 001f 24       		.uleb128 0x24
 2098 0020 00       		.byte	0
 2099 0021 0B       		.uleb128 0xb
 2100 0022 0B       		.uleb128 0xb
 2101 0023 3E       		.uleb128 0x3e
 2102 0024 0B       		.uleb128 0xb
 2103 0025 03       		.uleb128 0x3
 2104 0026 08       		.uleb128 0x8
 2105 0027 00       		.byte	0
 2106 0028 00       		.byte	0
 2107 0029 04       		.uleb128 0x4
 2108 002a 16       		.uleb128 0x16
 2109 002b 00       		.byte	0
 2110 002c 03       		.uleb128 0x3
 2111 002d 0E       		.uleb128 0xe
 2112 002e 3A       		.uleb128 0x3a
 2113 002f 0B       		.uleb128 0xb
 2114 0030 3B       		.uleb128 0x3b
 2115 0031 0B       		.uleb128 0xb
 2116 0032 49       		.uleb128 0x49
 2117 0033 13       		.uleb128 0x13
 2118 0034 00       		.byte	0
 2119 0035 00       		.byte	0
 2120 0036 05       		.uleb128 0x5
 2121 0037 16       		.uleb128 0x16
 2122 0038 00       		.byte	0
 2123 0039 03       		.uleb128 0x3
 2124 003a 0E       		.uleb128 0xe
 2125 003b 3A       		.uleb128 0x3a
 2126 003c 0B       		.uleb128 0xb
 2127 003d 3B       		.uleb128 0x3b
 2128 003e 05       		.uleb128 0x5
 2129 003f 49       		.uleb128 0x49
 2130 0040 13       		.uleb128 0x13
 2131 0041 00       		.byte	0
 2132 0042 00       		.byte	0
 2133 0043 06       		.uleb128 0x6
 2134 0044 35       		.uleb128 0x35
 2135 0045 00       		.byte	0
 2136 0046 49       		.uleb128 0x49
 2137 0047 13       		.uleb128 0x13
 2138 0048 00       		.byte	0
 2139 0049 00       		.byte	0
 2140 004a 07       		.uleb128 0x7
 2141 004b 2E       		.uleb128 0x2e
 2142 004c 01       		.byte	0x1
 2143 004d 3F       		.uleb128 0x3f
 2144 004e 19       		.uleb128 0x19
 2145 004f 03       		.uleb128 0x3
 2146 0050 0E       		.uleb128 0xe
 2147 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 73


 2148 0052 0B       		.uleb128 0xb
 2149 0053 3B       		.uleb128 0x3b
 2150 0054 0B       		.uleb128 0xb
 2151 0055 27       		.uleb128 0x27
 2152 0056 19       		.uleb128 0x19
 2153 0057 11       		.uleb128 0x11
 2154 0058 01       		.uleb128 0x1
 2155 0059 12       		.uleb128 0x12
 2156 005a 06       		.uleb128 0x6
 2157 005b 40       		.uleb128 0x40
 2158 005c 18       		.uleb128 0x18
 2159 005d 9642     		.uleb128 0x2116
 2160 005f 19       		.uleb128 0x19
 2161 0060 01       		.uleb128 0x1
 2162 0061 13       		.uleb128 0x13
 2163 0062 00       		.byte	0
 2164 0063 00       		.byte	0
 2165 0064 08       		.uleb128 0x8
 2166 0065 34       		.uleb128 0x34
 2167 0066 00       		.byte	0
 2168 0067 03       		.uleb128 0x3
 2169 0068 0E       		.uleb128 0xe
 2170 0069 3A       		.uleb128 0x3a
 2171 006a 0B       		.uleb128 0xb
 2172 006b 3B       		.uleb128 0x3b
 2173 006c 0B       		.uleb128 0xb
 2174 006d 49       		.uleb128 0x49
 2175 006e 13       		.uleb128 0x13
 2176 006f 02       		.uleb128 0x2
 2177 0070 18       		.uleb128 0x18
 2178 0071 00       		.byte	0
 2179 0072 00       		.byte	0
 2180 0073 09       		.uleb128 0x9
 2181 0074 2E       		.uleb128 0x2e
 2182 0075 01       		.byte	0x1
 2183 0076 3F       		.uleb128 0x3f
 2184 0077 19       		.uleb128 0x19
 2185 0078 03       		.uleb128 0x3
 2186 0079 0E       		.uleb128 0xe
 2187 007a 3A       		.uleb128 0x3a
 2188 007b 0B       		.uleb128 0xb
 2189 007c 3B       		.uleb128 0x3b
 2190 007d 05       		.uleb128 0x5
 2191 007e 27       		.uleb128 0x27
 2192 007f 19       		.uleb128 0x19
 2193 0080 11       		.uleb128 0x11
 2194 0081 01       		.uleb128 0x1
 2195 0082 12       		.uleb128 0x12
 2196 0083 06       		.uleb128 0x6
 2197 0084 40       		.uleb128 0x40
 2198 0085 18       		.uleb128 0x18
 2199 0086 9642     		.uleb128 0x2116
 2200 0088 19       		.uleb128 0x19
 2201 0089 01       		.uleb128 0x1
 2202 008a 13       		.uleb128 0x13
 2203 008b 00       		.byte	0
 2204 008c 00       		.byte	0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 74


 2205 008d 0A       		.uleb128 0xa
 2206 008e 34       		.uleb128 0x34
 2207 008f 00       		.byte	0
 2208 0090 03       		.uleb128 0x3
 2209 0091 0E       		.uleb128 0xe
 2210 0092 3A       		.uleb128 0x3a
 2211 0093 0B       		.uleb128 0xb
 2212 0094 3B       		.uleb128 0x3b
 2213 0095 05       		.uleb128 0x5
 2214 0096 49       		.uleb128 0x49
 2215 0097 13       		.uleb128 0x13
 2216 0098 02       		.uleb128 0x2
 2217 0099 18       		.uleb128 0x18
 2218 009a 00       		.byte	0
 2219 009b 00       		.byte	0
 2220 009c 0B       		.uleb128 0xb
 2221 009d 2E       		.uleb128 0x2e
 2222 009e 00       		.byte	0
 2223 009f 3F       		.uleb128 0x3f
 2224 00a0 19       		.uleb128 0x19
 2225 00a1 03       		.uleb128 0x3
 2226 00a2 0E       		.uleb128 0xe
 2227 00a3 3A       		.uleb128 0x3a
 2228 00a4 0B       		.uleb128 0xb
 2229 00a5 3B       		.uleb128 0x3b
 2230 00a6 05       		.uleb128 0x5
 2231 00a7 27       		.uleb128 0x27
 2232 00a8 19       		.uleb128 0x19
 2233 00a9 11       		.uleb128 0x11
 2234 00aa 01       		.uleb128 0x1
 2235 00ab 12       		.uleb128 0x12
 2236 00ac 06       		.uleb128 0x6
 2237 00ad 40       		.uleb128 0x40
 2238 00ae 18       		.uleb128 0x18
 2239 00af 9642     		.uleb128 0x2116
 2240 00b1 19       		.uleb128 0x19
 2241 00b2 00       		.byte	0
 2242 00b3 00       		.byte	0
 2243 00b4 0C       		.uleb128 0xc
 2244 00b5 2E       		.uleb128 0x2e
 2245 00b6 01       		.byte	0x1
 2246 00b7 3F       		.uleb128 0x3f
 2247 00b8 19       		.uleb128 0x19
 2248 00b9 03       		.uleb128 0x3
 2249 00ba 0E       		.uleb128 0xe
 2250 00bb 3A       		.uleb128 0x3a
 2251 00bc 0B       		.uleb128 0xb
 2252 00bd 3B       		.uleb128 0x3b
 2253 00be 05       		.uleb128 0x5
 2254 00bf 27       		.uleb128 0x27
 2255 00c0 19       		.uleb128 0x19
 2256 00c1 49       		.uleb128 0x49
 2257 00c2 13       		.uleb128 0x13
 2258 00c3 11       		.uleb128 0x11
 2259 00c4 01       		.uleb128 0x1
 2260 00c5 12       		.uleb128 0x12
 2261 00c6 06       		.uleb128 0x6
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 75


 2262 00c7 40       		.uleb128 0x40
 2263 00c8 18       		.uleb128 0x18
 2264 00c9 9742     		.uleb128 0x2117
 2265 00cb 19       		.uleb128 0x19
 2266 00cc 01       		.uleb128 0x1
 2267 00cd 13       		.uleb128 0x13
 2268 00ce 00       		.byte	0
 2269 00cf 00       		.byte	0
 2270 00d0 0D       		.uleb128 0xd
 2271 00d1 05       		.uleb128 0x5
 2272 00d2 00       		.byte	0
 2273 00d3 03       		.uleb128 0x3
 2274 00d4 0E       		.uleb128 0xe
 2275 00d5 3A       		.uleb128 0x3a
 2276 00d6 0B       		.uleb128 0xb
 2277 00d7 3B       		.uleb128 0x3b
 2278 00d8 05       		.uleb128 0x5
 2279 00d9 49       		.uleb128 0x49
 2280 00da 13       		.uleb128 0x13
 2281 00db 02       		.uleb128 0x2
 2282 00dc 18       		.uleb128 0x18
 2283 00dd 00       		.byte	0
 2284 00de 00       		.byte	0
 2285 00df 0E       		.uleb128 0xe
 2286 00e0 34       		.uleb128 0x34
 2287 00e1 00       		.byte	0
 2288 00e2 03       		.uleb128 0x3
 2289 00e3 08       		.uleb128 0x8
 2290 00e4 3A       		.uleb128 0x3a
 2291 00e5 0B       		.uleb128 0xb
 2292 00e6 3B       		.uleb128 0x3b
 2293 00e7 05       		.uleb128 0x5
 2294 00e8 49       		.uleb128 0x49
 2295 00e9 13       		.uleb128 0x13
 2296 00ea 02       		.uleb128 0x2
 2297 00eb 18       		.uleb128 0x18
 2298 00ec 00       		.byte	0
 2299 00ed 00       		.byte	0
 2300 00ee 0F       		.uleb128 0xf
 2301 00ef 2E       		.uleb128 0x2e
 2302 00f0 00       		.byte	0
 2303 00f1 3F       		.uleb128 0x3f
 2304 00f2 19       		.uleb128 0x19
 2305 00f3 03       		.uleb128 0x3
 2306 00f4 0E       		.uleb128 0xe
 2307 00f5 3A       		.uleb128 0x3a
 2308 00f6 0B       		.uleb128 0xb
 2309 00f7 3B       		.uleb128 0x3b
 2310 00f8 05       		.uleb128 0x5
 2311 00f9 27       		.uleb128 0x27
 2312 00fa 19       		.uleb128 0x19
 2313 00fb 49       		.uleb128 0x49
 2314 00fc 13       		.uleb128 0x13
 2315 00fd 11       		.uleb128 0x11
 2316 00fe 01       		.uleb128 0x1
 2317 00ff 12       		.uleb128 0x12
 2318 0100 06       		.uleb128 0x6
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 76


 2319 0101 40       		.uleb128 0x40
 2320 0102 18       		.uleb128 0x18
 2321 0103 9742     		.uleb128 0x2117
 2322 0105 19       		.uleb128 0x19
 2323 0106 00       		.byte	0
 2324 0107 00       		.byte	0
 2325 0108 10       		.uleb128 0x10
 2326 0109 2E       		.uleb128 0x2e
 2327 010a 01       		.byte	0x1
 2328 010b 3F       		.uleb128 0x3f
 2329 010c 19       		.uleb128 0x19
 2330 010d 03       		.uleb128 0x3
 2331 010e 0E       		.uleb128 0xe
 2332 010f 3A       		.uleb128 0x3a
 2333 0110 0B       		.uleb128 0xb
 2334 0111 3B       		.uleb128 0x3b
 2335 0112 05       		.uleb128 0x5
 2336 0113 27       		.uleb128 0x27
 2337 0114 19       		.uleb128 0x19
 2338 0115 11       		.uleb128 0x11
 2339 0116 01       		.uleb128 0x1
 2340 0117 12       		.uleb128 0x12
 2341 0118 06       		.uleb128 0x6
 2342 0119 40       		.uleb128 0x40
 2343 011a 18       		.uleb128 0x18
 2344 011b 9742     		.uleb128 0x2117
 2345 011d 19       		.uleb128 0x19
 2346 011e 01       		.uleb128 0x1
 2347 011f 13       		.uleb128 0x13
 2348 0120 00       		.byte	0
 2349 0121 00       		.byte	0
 2350 0122 11       		.uleb128 0x11
 2351 0123 05       		.uleb128 0x5
 2352 0124 00       		.byte	0
 2353 0125 03       		.uleb128 0x3
 2354 0126 08       		.uleb128 0x8
 2355 0127 3A       		.uleb128 0x3a
 2356 0128 0B       		.uleb128 0xb
 2357 0129 3B       		.uleb128 0x3b
 2358 012a 05       		.uleb128 0x5
 2359 012b 49       		.uleb128 0x49
 2360 012c 13       		.uleb128 0x13
 2361 012d 02       		.uleb128 0x2
 2362 012e 18       		.uleb128 0x18
 2363 012f 00       		.byte	0
 2364 0130 00       		.byte	0
 2365 0131 12       		.uleb128 0x12
 2366 0132 34       		.uleb128 0x34
 2367 0133 00       		.byte	0
 2368 0134 03       		.uleb128 0x3
 2369 0135 0E       		.uleb128 0xe
 2370 0136 3A       		.uleb128 0x3a
 2371 0137 0B       		.uleb128 0xb
 2372 0138 3B       		.uleb128 0x3b
 2373 0139 0B       		.uleb128 0xb
 2374 013a 49       		.uleb128 0x49
 2375 013b 13       		.uleb128 0x13
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 77


 2376 013c 3F       		.uleb128 0x3f
 2377 013d 19       		.uleb128 0x19
 2378 013e 02       		.uleb128 0x2
 2379 013f 18       		.uleb128 0x18
 2380 0140 00       		.byte	0
 2381 0141 00       		.byte	0
 2382 0142 13       		.uleb128 0x13
 2383 0143 01       		.uleb128 0x1
 2384 0144 01       		.byte	0x1
 2385 0145 49       		.uleb128 0x49
 2386 0146 13       		.uleb128 0x13
 2387 0147 01       		.uleb128 0x1
 2388 0148 13       		.uleb128 0x13
 2389 0149 00       		.byte	0
 2390 014a 00       		.byte	0
 2391 014b 14       		.uleb128 0x14
 2392 014c 21       		.uleb128 0x21
 2393 014d 00       		.byte	0
 2394 014e 49       		.uleb128 0x49
 2395 014f 13       		.uleb128 0x13
 2396 0150 2F       		.uleb128 0x2f
 2397 0151 0B       		.uleb128 0xb
 2398 0152 00       		.byte	0
 2399 0153 00       		.byte	0
 2400 0154 15       		.uleb128 0x15
 2401 0155 0F       		.uleb128 0xf
 2402 0156 00       		.byte	0
 2403 0157 0B       		.uleb128 0xb
 2404 0158 0B       		.uleb128 0xb
 2405 0159 49       		.uleb128 0x49
 2406 015a 13       		.uleb128 0x13
 2407 015b 00       		.byte	0
 2408 015c 00       		.byte	0
 2409 015d 16       		.uleb128 0x16
 2410 015e 26       		.uleb128 0x26
 2411 015f 00       		.byte	0
 2412 0160 49       		.uleb128 0x49
 2413 0161 13       		.uleb128 0x13
 2414 0162 00       		.byte	0
 2415 0163 00       		.byte	0
 2416 0164 00       		.byte	0
 2417              		.section	.debug_aranges,"",%progbits
 2418 0000 AC000000 		.4byte	0xac
 2419 0004 0200     		.2byte	0x2
 2420 0006 00000000 		.4byte	.Ldebug_info0
 2421 000a 04       		.byte	0x4
 2422 000b 00       		.byte	0
 2423 000c 0000     		.2byte	0
 2424 000e 0000     		.2byte	0
 2425 0010 00000000 		.4byte	.LFB0
 2426 0014 48010000 		.4byte	.LFE0-.LFB0
 2427 0018 00000000 		.4byte	.LFB1
 2428 001c 98000000 		.4byte	.LFE1-.LFB1
 2429 0020 00000000 		.4byte	.LFB2
 2430 0024 30000000 		.4byte	.LFE2-.LFB2
 2431 0028 00000000 		.4byte	.LFB3
 2432 002c 94000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 78


 2433 0030 00000000 		.4byte	.LFB4
 2434 0034 50000000 		.4byte	.LFE4-.LFB4
 2435 0038 00000000 		.4byte	.LFB5
 2436 003c 50000000 		.4byte	.LFE5-.LFB5
 2437 0040 00000000 		.4byte	.LFB6
 2438 0044 34000000 		.4byte	.LFE6-.LFB6
 2439 0048 00000000 		.4byte	.LFB7
 2440 004c 54000000 		.4byte	.LFE7-.LFB7
 2441 0050 00000000 		.4byte	.LFB8
 2442 0054 20000000 		.4byte	.LFE8-.LFB8
 2443 0058 00000000 		.4byte	.LFB9
 2444 005c 24000000 		.4byte	.LFE9-.LFB9
 2445 0060 00000000 		.4byte	.LFB10
 2446 0064 26000000 		.4byte	.LFE10-.LFB10
 2447 0068 00000000 		.4byte	.LFB11
 2448 006c 68000000 		.4byte	.LFE11-.LFB11
 2449 0070 00000000 		.4byte	.LFB12
 2450 0074 6C000000 		.4byte	.LFE12-.LFB12
 2451 0078 00000000 		.4byte	.LFB13
 2452 007c 58000000 		.4byte	.LFE13-.LFB13
 2453 0080 00000000 		.4byte	.LFB14
 2454 0084 98000000 		.4byte	.LFE14-.LFB14
 2455 0088 00000000 		.4byte	.LFB15
 2456 008c 2C000000 		.4byte	.LFE15-.LFB15
 2457 0090 00000000 		.4byte	.LFB16
 2458 0094 24000000 		.4byte	.LFE16-.LFB16
 2459 0098 00000000 		.4byte	.LFB17
 2460 009c 20000000 		.4byte	.LFE17-.LFB17
 2461 00a0 00000000 		.4byte	.LFB18
 2462 00a4 40000000 		.4byte	.LFE18-.LFB18
 2463 00a8 00000000 		.4byte	0
 2464 00ac 00000000 		.4byte	0
 2465              		.section	.debug_ranges,"",%progbits
 2466              	.Ldebug_ranges0:
 2467 0000 00000000 		.4byte	.LFB0
 2468 0004 48010000 		.4byte	.LFE0
 2469 0008 00000000 		.4byte	.LFB1
 2470 000c 98000000 		.4byte	.LFE1
 2471 0010 00000000 		.4byte	.LFB2
 2472 0014 30000000 		.4byte	.LFE2
 2473 0018 00000000 		.4byte	.LFB3
 2474 001c 94000000 		.4byte	.LFE3
 2475 0020 00000000 		.4byte	.LFB4
 2476 0024 50000000 		.4byte	.LFE4
 2477 0028 00000000 		.4byte	.LFB5
 2478 002c 50000000 		.4byte	.LFE5
 2479 0030 00000000 		.4byte	.LFB6
 2480 0034 34000000 		.4byte	.LFE6
 2481 0038 00000000 		.4byte	.LFB7
 2482 003c 54000000 		.4byte	.LFE7
 2483 0040 00000000 		.4byte	.LFB8
 2484 0044 20000000 		.4byte	.LFE8
 2485 0048 00000000 		.4byte	.LFB9
 2486 004c 24000000 		.4byte	.LFE9
 2487 0050 00000000 		.4byte	.LFB10
 2488 0054 26000000 		.4byte	.LFE10
 2489 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 79


 2490 005c 68000000 		.4byte	.LFE11
 2491 0060 00000000 		.4byte	.LFB12
 2492 0064 6C000000 		.4byte	.LFE12
 2493 0068 00000000 		.4byte	.LFB13
 2494 006c 58000000 		.4byte	.LFE13
 2495 0070 00000000 		.4byte	.LFB14
 2496 0074 98000000 		.4byte	.LFE14
 2497 0078 00000000 		.4byte	.LFB15
 2498 007c 2C000000 		.4byte	.LFE15
 2499 0080 00000000 		.4byte	.LFB16
 2500 0084 24000000 		.4byte	.LFE16
 2501 0088 00000000 		.4byte	.LFB17
 2502 008c 20000000 		.4byte	.LFE17
 2503 0090 00000000 		.4byte	.LFB18
 2504 0094 40000000 		.4byte	.LFE18
 2505 0098 00000000 		.4byte	0
 2506 009c 00000000 		.4byte	0
 2507              		.section	.debug_line,"",%progbits
 2508              	.Ldebug_line0:
 2509 0000 55020000 		.section	.debug_str,"MS",%progbits,1
 2509      02004700 
 2509      00000201 
 2509      FB0E0D00 
 2509      01010101 
 2510              	.LASF10:
 2511 0000 75696E74 		.ascii	"uint16\000"
 2511      313600
 2512              	.LASF49:
 2513 0007 43617053 		.ascii	"CapSense_csv\000"
 2513      656E7365 
 2513      5F637376 
 2513      00
 2514              	.LASF47:
 2515 0014 43617053 		.ascii	"CapSense_initVar\000"
 2515      656E7365 
 2515      5F696E69 
 2515      74566172 
 2515      00
 2516              	.LASF53:
 2517 0025 43617053 		.ascii	"CapSense_pcTable\000"
 2517      656E7365 
 2517      5F706354 
 2517      61626C65 
 2517      00
 2518              	.LASF48:
 2519 0036 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2519      656E7365 
 2519      5F6C6F77 
 2519      4C657665 
 2519      6C54756E 
 2520              	.LASF26:
 2521 0052 736E7349 		.ascii	"snsIndex\000"
 2521      6E646578 
 2521      00
 2522              	.LASF7:
 2523 005b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2523      206C6F6E 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 80


 2523      6720756E 
 2523      7369676E 
 2523      65642069 
 2524              	.LASF20:
 2525 0072 43617053 		.ascii	"CapSense_Enable\000"
 2525      656E7365 
 2525      5F456E61 
 2525      626C6500 
 2526              	.LASF41:
 2527 0082 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2527      656E7365 
 2527      5F536574 
 2527      50726573 
 2527      63616C65 
 2528              	.LASF6:
 2529 0098 6C6F6E67 		.ascii	"long long int\000"
 2529      206C6F6E 
 2529      6720696E 
 2529      7400
 2530              	.LASF0:
 2531 00a6 7369676E 		.ascii	"signed char\000"
 2531      65642063 
 2531      68617200 
 2532              	.LASF46:
 2533 00b2 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2533      656E7365 
 2533      5F536574 
 2533      416E616C 
 2533      6F675377 
 2534              	.LASF4:
 2535 00d3 6C6F6E67 		.ascii	"long int\000"
 2535      20696E74 
 2535      00
 2536              	.LASF16:
 2537 00dc 72656731 		.ascii	"reg16\000"
 2537      3600
 2538              	.LASF9:
 2539 00e2 75696E74 		.ascii	"uint8\000"
 2539      3800
 2540              	.LASF13:
 2541 00e8 646F7562 		.ascii	"double\000"
 2541      6C6500
 2542              	.LASF35:
 2543 00ef 43617053 		.ascii	"CapSense_EnableSensor\000"
 2543      656E7365 
 2543      5F456E61 
 2543      626C6553 
 2543      656E736F 
 2544              	.LASF60:
 2545 0105 43617053 		.ascii	"CapSense_widgetNumber\000"
 2545      656E7365 
 2545      5F776964 
 2545      6765744E 
 2545      756D6265 
 2546              	.LASF33:
 2547 011b 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2547      656E7365 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 81


 2547      5F526561 
 2547      6453656E 
 2547      736F7252 
 2548              	.LASF11:
 2549 0132 75696E74 		.ascii	"uint32\000"
 2549      333200
 2550              	.LASF37:
 2551 0139 6D61736B 		.ascii	"mask\000"
 2551      00
 2552              	.LASF36:
 2553 013e 706F7274 		.ascii	"port\000"
 2553      00
 2554              	.LASF50:
 2555 0143 43617053 		.ascii	"CapSense_sensorIndex\000"
 2555      656E7365 
 2555      5F73656E 
 2555      736F7249 
 2555      6E646578 
 2556              	.LASF29:
 2557 0158 43617053 		.ascii	"CapSense_ScanSensor\000"
 2557      656E7365 
 2557      5F536361 
 2557      6E53656E 
 2557      736F7200 
 2558              	.LASF8:
 2559 016c 756E7369 		.ascii	"unsigned int\000"
 2559      676E6564 
 2559      20696E74 
 2559      00
 2560              	.LASF34:
 2561 0179 43617053 		.ascii	"CapSense_ClearSensors\000"
 2561      656E7365 
 2561      5F436C65 
 2561      61725365 
 2561      6E736F72 
 2562              	.LASF5:
 2563 018f 6C6F6E67 		.ascii	"long unsigned int\000"
 2563      20756E73 
 2563      69676E65 
 2563      6420696E 
 2563      7400
 2564              	.LASF55:
 2565 01a1 43617053 		.ascii	"CapSense_maskTable\000"
 2565      656E7365 
 2565      5F6D6173 
 2565      6B546162 
 2565      6C6500
 2566              	.LASF54:
 2567 01b4 43617053 		.ascii	"CapSense_portTable\000"
 2567      656E7365 
 2567      5F706F72 
 2567      74546162 
 2567      6C6500
 2568              	.LASF3:
 2569 01c7 73686F72 		.ascii	"short unsigned int\000"
 2569      7420756E 
 2569      7369676E 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 82


 2569      65642069 
 2569      6E7400
 2570              	.LASF30:
 2571 01da 73656E73 		.ascii	"sensor\000"
 2571      6F7200
 2572              	.LASF52:
 2573 01e1 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2573      656E7365 
 2573      5F73656E 
 2573      736F7245 
 2573      6E61626C 
 2574              	.LASF27:
 2575 01fb 736C6F74 		.ascii	"slot\000"
 2575      00
 2576              	.LASF64:
 2577 0200 43617053 		.ascii	"CapSense_IsBusy\000"
 2577      656E7365 
 2577      5F497342 
 2577      75737900 
 2578              	.LASF17:
 2579 0210 72656733 		.ascii	"reg32\000"
 2579      3200
 2580              	.LASF59:
 2581 0216 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2581      656E7365 
 2581      5F616E61 
 2581      6C6F6753 
 2581      77697463 
 2582              	.LASF18:
 2583 0233 73697A65 		.ascii	"sizetype\000"
 2583      74797065 
 2583      00
 2584              	.LASF56:
 2585 023c 43617053 		.ascii	"CapSense_csTable\000"
 2585      656E7365 
 2585      5F637354 
 2585      61626C65 
 2585      00
 2586              	.LASF23:
 2587 024d 43617053 		.ascii	"CapSense_Stop\000"
 2587      656E7365 
 2587      5F53746F 
 2587      7000
 2588              	.LASF45:
 2589 025b 7363616E 		.ascii	"scanSpeed\000"
 2589      53706565 
 2589      6400
 2590              	.LASF24:
 2591 0265 656E4D61 		.ascii	"enMask\000"
 2591      736B00
 2592              	.LASF61:
 2593 026c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2593      4320342E 
 2593      392E3320 
 2593      32303135 
 2593      30333033 
 2594 029f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 83


 2594      20726576 
 2594      6973696F 
 2594      6E203232 
 2594      31323230 
 2595 02d2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2595      66756E63 
 2595      74696F6E 
 2595      2D736563 
 2595      74696F6E 
 2596              	.LASF57:
 2597 02fa 43617053 		.ascii	"CapSense_idacSettings\000"
 2597      656E7365 
 2597      5F696461 
 2597      63536574 
 2597      74696E67 
 2598              	.LASF12:
 2599 0310 666C6F61 		.ascii	"float\000"
 2599      7400
 2600              	.LASF42:
 2601 0316 70726573 		.ascii	"prescaler\000"
 2601      63616C65 
 2601      7200
 2602              	.LASF15:
 2603 0320 72656738 		.ascii	"reg8\000"
 2603      00
 2604              	.LASF32:
 2605 0325 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2605      656E7365 
 2605      5F46696E 
 2605      644E6578 
 2605      7453656E 
 2606              	.LASF38:
 2607 033d 43617053 		.ascii	"CapSense_DisableSensor\000"
 2607      656E7365 
 2607      5F446973 
 2607      61626C65 
 2607      53656E73 
 2608              	.LASF1:
 2609 0354 756E7369 		.ascii	"unsigned char\000"
 2609      676E6564 
 2609      20636861 
 2609      7200
 2610              	.LASF58:
 2611 0362 43617053 		.ascii	"CapSense_widgetResolution\000"
 2611      656E7365 
 2611      5F776964 
 2611      67657452 
 2611      65736F6C 
 2612              	.LASF2:
 2613 037c 73686F72 		.ascii	"short int\000"
 2613      7420696E 
 2613      7400
 2614              	.LASF28:
 2615 0386 77696467 		.ascii	"widget\000"
 2615      657400
 2616              	.LASF43:
 2617 038d 43617053 		.ascii	"CapSense_GetPrescaler\000"
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 84


 2617      656E7365 
 2617      5F476574 
 2617      50726573 
 2617      63616C65 
 2618              	.LASF14:
 2619 03a3 63686172 		.ascii	"char\000"
 2619      00
 2620              	.LASF44:
 2621 03a8 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2621      656E7365 
 2621      5F536574 
 2621      5363616E 
 2621      53706565 
 2622              	.LASF22:
 2623 03be 43617053 		.ascii	"CapSense_Start\000"
 2623      656E7365 
 2623      5F537461 
 2623      727400
 2624              	.LASF40:
 2625 03cd 43617053 		.ascii	"CapSense_PostScan\000"
 2625      656E7365 
 2625      5F506F73 
 2625      74536361 
 2625      6E00
 2626              	.LASF21:
 2627 03df 656E6162 		.ascii	"enableInterrupts\000"
 2627      6C65496E 
 2627      74657272 
 2627      75707473 
 2627      00
 2628              	.LASF63:
 2629 03f0 433A5C55 		.ascii	"C:\\Users\\mark6\\Google Drive\\College-MIT\\S6Spri"
 2629      73657273 
 2629      5C6D6172 
 2629      6B365C47 
 2629      6F6F676C 
 2630 041e 6E673230 		.ascii	"ng2020\\6.115\\FinalProject\\BunkerKnowledge\\PSoC_"
 2630      32305C36 
 2630      2E313135 
 2630      5C46696E 
 2630      616C5072 
 2631 044d 355F4669 		.ascii	"5_Files\\Processor.cydsn\000"
 2631      6C65735C 
 2631      50726F63 
 2631      6573736F 
 2631      722E6379 
 2632              	.LASF25:
 2633 0465 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2633      656E7365 
 2633      5F536574 
 2633      5363616E 
 2633      536C6F74 
 2634              	.LASF39:
 2635 0482 43617053 		.ascii	"CapSense_PreScan\000"
 2635      656E7365 
 2635      5F507265 
 2635      5363616E 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccuakXLP.s 			page 85


 2635      00
 2636              	.LASF19:
 2637 0493 43617053 		.ascii	"CapSense_Init\000"
 2637      656E7365 
 2637      5F496E69 
 2637      7400
 2638              	.LASF51:
 2639 04a1 43617053 		.ascii	"CapSense_sensorRaw\000"
 2639      656E7365 
 2639      5F73656E 
 2639      736F7252 
 2639      617700
 2640              	.LASF31:
 2641 04b4 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2641      656E7365 
 2641      5F536361 
 2641      6E456E61 
 2641      626C6564 
 2642              	.LASF62:
 2643 04d0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense.c\000"
 2643      6E657261 
 2643      7465645F 
 2643      536F7572 
 2643      63655C50 
 2644              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
