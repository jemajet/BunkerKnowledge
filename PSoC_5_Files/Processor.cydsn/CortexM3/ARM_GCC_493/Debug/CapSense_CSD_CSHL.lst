ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSD_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_CSD_rawFilterData1,2,4
  19              		.comm	CapSense_CSD_sensorBaseline,2,4
  20              		.comm	CapSense_CSD_sensorBaselineLow,1,4
  21              		.comm	CapSense_CSD_sensorSignal,1,4
  22              		.comm	CapSense_CSD_sensorOnMask,1,4
  23              		.comm	CapSense_CSD_lowBaselineResetCnt,1,4
  24              		.global	CapSense_CSD_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_CSD_fingerThreshold, %object
  28              		.size	CapSense_CSD_fingerThreshold, 1
  29              	CapSense_CSD_fingerThreshold:
  30 0000 64       		.byte	100
  31              		.global	CapSense_CSD_noiseThreshold
  32 0001 000000   		.align	2
  33              		.type	CapSense_CSD_noiseThreshold, %object
  34              		.size	CapSense_CSD_noiseThreshold, 1
  35              	CapSense_CSD_noiseThreshold:
  36 0004 14       		.byte	20
  37              		.global	CapSense_CSD_hysteresis
  38 0005 000000   		.align	2
  39              		.type	CapSense_CSD_hysteresis, %object
  40              		.size	CapSense_CSD_hysteresis, 1
  41              	CapSense_CSD_hysteresis:
  42 0008 0A       		.byte	10
  43              		.global	CapSense_CSD_debounce
  44 0009 000000   		.align	2
  45              		.type	CapSense_CSD_debounce, %object
  46              		.size	CapSense_CSD_debounce, 1
  47              	CapSense_CSD_debounce:
  48 000c 01       		.byte	1
  49              		.global	CapSense_CSD_debounceCounter
  50 000d 000000   		.bss
  51              		.align	2
  52              		.type	CapSense_CSD_debounceCounter, %object
  53              		.size	CapSense_CSD_debounceCounter, 2
  54              	CapSense_CSD_debounceCounter:
  55 0000 0000     		.space	2
  56              		.global	CapSense_CSD_rawDataIndex
  57 0002 0000     		.section	.rodata
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 2


  58              		.align	2
  59              		.type	CapSense_CSD_rawDataIndex, %object
  60              		.size	CapSense_CSD_rawDataIndex, 1
  61              	CapSense_CSD_rawDataIndex:
  62 0000 00       		.space	1
  63              		.global	CapSense_CSD_numberOfSensors
  64 0001 000000   		.align	2
  65              		.type	CapSense_CSD_numberOfSensors, %object
  66              		.size	CapSense_CSD_numberOfSensors, 1
  67              	CapSense_CSD_numberOfSensors:
  68 0004 01       		.byte	1
  69 0005 000000   		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  70              		.align	2
  71              		.global	CapSense_CSD_BaseInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	CapSense_CSD_BaseInit, %function
  75              	CapSense_CSD_BaseInit:
  76              	.LFB0:
  77              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 3


  38:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     100u, 
  50:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     20u, 
  54:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     10u, 
  58:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 
  62:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  70:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  72:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  74:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
  75:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  77:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  79:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  81:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  83:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  84:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  85:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  86:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  87:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  88:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  89:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  90:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  91:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
  92:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
  93:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
  94:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 4


  95:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  96:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
  97:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
  98:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  99:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  78              		.loc 1 122 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 16
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 85B0     		sub	sp, sp, #20
  87              		.cfi_def_cfa_offset 24
  88 0004 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  90 0006 0346     		mov	r3, r0
  91 0008 FB71     		strb	r3, [r7, #7]
 123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
  92              		.loc 1 125 0
  93 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  94 000c 124A     		ldr	r2, .L2
  95 000e D35C     		ldrb	r3, [r2, r3]
  96 0010 FB73     		strb	r3, [r7, #15]
 126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 5


 133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  97              		.loc 1 139 0
  98 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  99 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 100 0016 1149     		ldr	r1, .L2+4
 101 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 102 001c 104A     		ldr	r2, .L2+8
 103 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 104              		.loc 1 140 0
 105 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 106 0024 0F4A     		ldr	r2, .L2+12
 107 0026 0021     		movs	r1, #0
 108 0028 D154     		strb	r1, [r2, r3]
 141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 109              		.loc 1 141 0
 110 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 111 002c 0E4A     		ldr	r2, .L2+16
 112 002e 0021     		movs	r1, #0
 113 0030 D154     		strb	r1, [r2, r3]
 142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 114              		.loc 1 143 0
 115 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 116 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 117 0036 0D49     		ldr	r1, .L2+20
 118 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 119 003a 0D4A     		ldr	r2, .L2+24
 120 003c D154     		strb	r1, [r2, r3]
 144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 121              		.loc 1 158 0
 122 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 123 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 124 0042 0649     		ldr	r1, .L2+4
 125 0044 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 126 0048 0A4A     		ldr	r2, .L2+28
 127 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 6


 159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 128              		.loc 1 170 0
 129 004e 1437     		adds	r7, r7, #20
 130              		.cfi_def_cfa_offset 4
 131 0050 BD46     		mov	sp, r7
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0052 5DF8047B 		ldr	r7, [sp], #4
 135              		.cfi_restore 7
 136              		.cfi_def_cfa_offset 0
 137 0056 7047     		bx	lr
 138              	.L3:
 139              		.align	2
 140              	.L2:
 141 0058 00000000 		.word	CapSense_CSD_widgetNumber
 142 005c 00000000 		.word	CapSense_CSD_sensorRaw
 143 0060 00000000 		.word	CapSense_CSD_sensorBaseline
 144 0064 00000000 		.word	CapSense_CSD_sensorBaselineLow
 145 0068 00000000 		.word	CapSense_CSD_sensorSignal
 146 006c 00000000 		.word	CapSense_CSD_debounce
 147 0070 00000000 		.word	CapSense_CSD_debounceCounter
 148 0074 00000000 		.word	CapSense_CSD_rawFilterData1
 149              		.cfi_endproc
 150              	.LFE0:
 151              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 152              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_CSD_InitializeSensorBaseline
 155              		.thumb
 156              		.thumb_func
 157              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 158              	CapSense_CSD_InitializeSensorBaseline:
 159              	.LFB1:
 171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 7


 184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 160              		.loc 1 196 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 8
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 82B0     		sub	sp, sp, #8
 169              		.cfi_def_cfa_offset 16
 170 0004 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 172 0006 0346     		mov	r3, r0
 173 0008 FB71     		strb	r3, [r7, #7]
 197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 174              		.loc 1 198 0
 175 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 176 000c 1846     		mov	r0, r3
 177 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 178              		.loc 1 199 0
 179 0012 00BF     		nop
 180              	.L5:
 181              		.loc 1 199 0 is_stmt 0 discriminator 1
 182 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 183 0018 0346     		mov	r3, r0
 184 001a 002B     		cmp	r3, #0
 185 001c FAD1     		bne	.L5
 200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 186              		.loc 1 206 0 is_stmt 1
 187 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 188 0020 1846     		mov	r0, r3
 189 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 8


 211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 190              		.loc 1 223 0
 191 0026 0837     		adds	r7, r7, #8
 192              		.cfi_def_cfa_offset 8
 193 0028 BD46     		mov	sp, r7
 194              		.cfi_def_cfa_register 13
 195              		@ sp needed
 196 002a 80BD     		pop	{r7, pc}
 197              		.cfi_endproc
 198              	.LFE1:
 199              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 200              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 201              		.align	2
 202              		.global	CapSense_CSD_InitializeAllBaselines
 203              		.thumb
 204              		.thumb_func
 205              		.type	CapSense_CSD_InitializeAllBaselines, %function
 206              	CapSense_CSD_InitializeAllBaselines:
 207              	.LFB2:
 224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 208              		.loc 1 248 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 9


 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 82B0     		sub	sp, sp, #8
 217              		.cfi_def_cfa_offset 16
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 220              		.loc 1 252 0
 221 0006 0023     		movs	r3, #0
 222 0008 FB71     		strb	r3, [r7, #7]
 223 000a 06E0     		b	.L7
 224              	.L8:
 253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 225              		.loc 1 254 0 discriminator 3
 226 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 227 000e 1846     		mov	r0, r3
 228 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 229              		.loc 1 252 0 discriminator 3
 230 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 231 0016 0133     		adds	r3, r3, #1
 232 0018 FB71     		strb	r3, [r7, #7]
 233              	.L7:
 252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 234              		.loc 1 252 0 is_stmt 0 discriminator 1
 235 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 236 001c 002B     		cmp	r3, #0
 237 001e F5D0     		beq	.L8
 255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 238              		.loc 1 256 0 is_stmt 1
 239 0020 0837     		adds	r7, r7, #8
 240              		.cfi_def_cfa_offset 8
 241 0022 BD46     		mov	sp, r7
 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 0024 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE2:
 247              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 248 0026 00BF     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 249              		.align	2
 250              		.global	CapSense_CSD_InitializeEnabledBaselines
 251              		.thumb
 252              		.thumb_func
 253              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 254              	CapSense_CSD_InitializeEnabledBaselines:
 255              	.LFB3:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 10


 257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 256              		.loc 1 281 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 82B0     		sub	sp, sp, #8
 265              		.cfi_def_cfa_offset 16
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 268              		.loc 1 286 0
 269 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 270              		.loc 1 287 0
 271 000a 00BF     		nop
 272              	.L10:
 273              		.loc 1 287 0 is_stmt 0 discriminator 1
 274 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 275 0010 0346     		mov	r3, r0
 276 0012 002B     		cmp	r3, #0
 277 0014 FAD1     		bne	.L10
 288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 11


 292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 278              		.loc 1 292 0 is_stmt 1
 279 0016 0023     		movs	r3, #0
 280 0018 FB71     		strb	r3, [r7, #7]
 281 001a 1DE0     		b	.L11
 282              	.L13:
 293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 283              		.loc 1 294 0
 284 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 285 001e DB08     		lsrs	r3, r3, #3
 286 0020 BB71     		strb	r3, [r7, #6]
 295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 287              		.loc 1 295 0
 288 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 289 0024 03F00703 		and	r3, r3, #7
 290 0028 0122     		movs	r2, #1
 291 002a 02FA03F3 		lsl	r3, r2, r3
 292 002e 7B71     		strb	r3, [r7, #5]
 296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 293              		.loc 1 298 0
 294 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 295 0032 0C4A     		ldr	r2, .L14
 296 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 297 0036 7B79     		ldrb	r3, [r7, #5]
 298 0038 1340     		ands	r3, r3, r2
 299 003a DBB2     		uxtb	r3, r3
 300 003c 002B     		cmp	r3, #0
 301 003e 04D1     		bne	.L12
 299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 302              		.loc 1 300 0
 303 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 304 0042 094A     		ldr	r2, .L14+4
 305 0044 0021     		movs	r1, #0
 306 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 307              	.L12:
 301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 308              		.loc 1 304 0 discriminator 2
 309 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 310 004c 1846     		mov	r0, r3
 311 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 312              		.loc 1 292 0 discriminator 2
 313 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 314 0054 0133     		adds	r3, r3, #1
 315 0056 FB71     		strb	r3, [r7, #7]
 316              	.L11:
 292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 317              		.loc 1 292 0 is_stmt 0 discriminator 1
 318 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 319 005a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 12


 320 005c DED0     		beq	.L13
 305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 321              		.loc 1 306 0 is_stmt 1
 322 005e 0837     		adds	r7, r7, #8
 323              		.cfi_def_cfa_offset 8
 324 0060 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0062 80BD     		pop	{r7, pc}
 328              	.L15:
 329              		.align	2
 330              	.L14:
 331 0064 00000000 		.word	CapSense_CSD_sensorEnableMask
 332 0068 00000000 		.word	CapSense_CSD_sensorRaw
 333              		.cfi_endproc
 334              	.LFE3:
 335              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 336              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 337              		.align	2
 338              		.global	CapSense_CSD_UpdateSensorBaseline
 339              		.thumb
 340              		.thumb_func
 341              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 342              	CapSense_CSD_UpdateSensorBaseline:
 343              	.LFB4:
 307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 13


 338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 344              		.loc 1 348 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 24
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 86B0     		sub	sp, sp, #24
 353              		.cfi_def_cfa_offset 32
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 0346     		mov	r3, r0
 357 0008 FB71     		strb	r3, [r7, #7]
 349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 358              		.loc 1 352 0
 359 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 360 000c 534A     		ldr	r2, .L28
 361 000e D35C     		ldrb	r3, [r2, r3]
 362 0010 7B75     		strb	r3, [r7, #21]
 353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 363              		.loc 1 353 0
 364 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 365 0014 524A     		ldr	r2, .L28+4
 366 0016 D35C     		ldrb	r3, [r2, r3]
 367 0018 3B75     		strb	r3, [r7, #20]
 354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 368              		.loc 1 361 0
 369 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 370 001c 514A     		ldr	r2, .L28+8
 371 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 372 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 14


 366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 373              		.loc 1 382 0
 374 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 375 0026 504A     		ldr	r2, .L28+12
 376 0028 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 377 002c 7A8A     		ldrh	r2, [r7, #18]
 378 002e 1046     		mov	r0, r2
 379 0030 1946     		mov	r1, r3
 380 0032 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 381 0036 0346     		mov	r3, r0
 382 0038 7B82     		strh	r3, [r7, #18]	@ movhi
 383:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 383              		.loc 1 383 0
 384 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 003c 4A49     		ldr	r1, .L28+12
 386 003e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 387 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 384:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 385:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 386:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 387:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 389:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 390:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 391:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 395:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 397:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 398:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 399:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 400:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 401:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 402:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 388              		.loc 1 402 0
 389 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 0046 1846     		mov	r0, r3
 391 0048 FFF7FEFF 		bl	CapSense_CSD_CalculateThresholds
 403:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 15


 404:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 405:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 406:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 407:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 408:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 392              		.loc 1 408 0
 393 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 394 004e 474A     		ldr	r2, .L28+16
 395 0050 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 396 0054 7A8A     		ldrh	r2, [r7, #18]
 397 0056 9A42     		cmp	r2, r3
 398 0058 09D3     		bcc	.L17
 409:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 410:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 399              		.loc 1 410 0
 400 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 401 005c 434A     		ldr	r2, .L28+16
 402 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 403 0062 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 404 0064 D31A     		subs	r3, r2, r3
 405 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 411:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 406              		.loc 1 411 0
 407 0068 0123     		movs	r3, #1
 408 006a 7B75     		strb	r3, [r7, #21]
 409 006c 08E0     		b	.L18
 410              	.L17:
 412:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 414:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 415:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 411              		.loc 1 415 0
 412 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 413 0070 3E4A     		ldr	r2, .L28+16
 414 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 415 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 416 0078 D31A     		subs	r3, r2, r3
 417 007a FB82     		strh	r3, [r7, #22]	@ movhi
 416:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 418              		.loc 1 416 0
 419 007c 0023     		movs	r3, #0
 420 007e 7B75     		strb	r3, [r7, #21]
 421              	.L18:
 417:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 418:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 422              		.loc 1 419 0
 423 0080 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 424 0082 002B     		cmp	r3, #0
 425 0084 18D1     		bne	.L19
 426              		.loc 1 419 0 is_stmt 0 discriminator 1
 427 0086 FB8A     		ldrh	r3, [r7, #22]
 428 0088 142B     		cmp	r3, #20
 429 008a 15D9     		bls	.L19
 420:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 430              		.loc 1 421 0 is_stmt 1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 16


 431 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 432 008e 384A     		ldr	r2, .L28+20
 433 0090 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 434 0092 042B     		cmp	r3, #4
 435 0094 08D9     		bls	.L20
 422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 423:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 436              		.loc 1 423 0
 437 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 0098 1846     		mov	r0, r3
 439 009a FFF7FEFF 		bl	CapSense_CSD_BaseInit
 424:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 440              		.loc 1 424 0
 441 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 442 00a0 334A     		ldr	r2, .L28+20
 443 00a2 0021     		movs	r1, #0
 444 00a4 D154     		strb	r1, [r2, r3]
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 445              		.loc 1 421 0
 446 00a6 3BE0     		b	.L22
 447              	.L20:
 425:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 428:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 448              		.loc 1 428 0
 449 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 450 00aa 314A     		ldr	r2, .L28+20
 451 00ac D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 452 00ae 0132     		adds	r2, r2, #1
 453 00b0 D1B2     		uxtb	r1, r2
 454 00b2 2F4A     		ldr	r2, .L28+20
 455 00b4 D154     		strb	r1, [r2, r3]
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 456              		.loc 1 421 0
 457 00b6 33E0     		b	.L22
 458              	.L19:
 429:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 431:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 433:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 459              		.loc 1 435 0
 460 00b8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 461 00ba 9BB2     		uxth	r3, r3
 462 00bc FA8A     		ldrh	r2, [r7, #22]
 463 00be 9A42     		cmp	r2, r3
 464 00c0 05D9     		bls	.L23
 465              		.loc 1 435 0 is_stmt 0 discriminator 1
 466 00c2 FB8A     		ldrh	r3, [r7, #22]
 467 00c4 132B     		cmp	r3, #19
 468 00c6 2BD8     		bhi	.L22
 436:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 437:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 469              		.loc 1 437 0 is_stmt 1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 17


 470 00c8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 471 00ca 002B     		cmp	r3, #0
 472 00cc 28D1     		bne	.L22
 473              	.L23:
 438:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 440:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 441:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 474              		.loc 1 441 0
 475 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 476 00d0 264A     		ldr	r2, .L28+16
 477 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 478 00d6 1B02     		lsls	r3, r3, #8
 479 00d8 FB60     		str	r3, [r7, #12]
 442:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 480              		.loc 1 442 0
 481 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 482 00dc 254A     		ldr	r2, .L28+24
 483 00de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 484 00e0 1A46     		mov	r2, r3
 485 00e2 FB68     		ldr	r3, [r7, #12]
 486 00e4 1343     		orrs	r3, r3, r2
 487 00e6 FB60     		str	r3, [r7, #12]
 443:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 444:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 445:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 488              		.loc 1 445 0
 489 00e8 7B8A     		ldrh	r3, [r7, #18]
 490 00ea FA68     		ldr	r2, [r7, #12]
 491 00ec 1344     		add	r3, r3, r2
 492 00ee FB60     		str	r3, [r7, #12]
 446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 447:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 493              		.loc 1 448 0
 494 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 495 00f2 1E4A     		ldr	r2, .L28+16
 496 00f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 497 00f8 1A46     		mov	r2, r3
 498 00fa FB68     		ldr	r3, [r7, #12]
 499 00fc 9B1A     		subs	r3, r3, r2
 500 00fe FB60     		str	r3, [r7, #12]
 449:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 450:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 451:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 501              		.loc 1 451 0
 502 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 503 0102 FA68     		ldr	r2, [r7, #12]
 504 0104 120A     		lsrs	r2, r2, #8
 505 0106 91B2     		uxth	r1, r2
 506 0108 184A     		ldr	r2, .L28+16
 507 010a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 452:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 508              		.loc 1 452 0
 509 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 0110 FA68     		ldr	r2, [r7, #12]
 511 0112 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 18


 512 0114 174A     		ldr	r2, .L28+24
 513 0116 D154     		strb	r1, [r2, r3]
 453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 454:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 514              		.loc 1 454 0
 515 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 516 011a 154A     		ldr	r2, .L28+20
 517 011c 0021     		movs	r1, #0
 518 011e D154     		strb	r1, [r2, r3]
 519              	.L22:
 455:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 457:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 458:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 460:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 461:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 520              		.loc 1 461 0
 521 0120 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 522 0122 9BB2     		uxth	r3, r3
 523 0124 FA8A     		ldrh	r2, [r7, #22]
 524 0126 9A42     		cmp	r2, r3
 525 0128 10D9     		bls	.L24
 526              		.loc 1 461 0 is_stmt 0 discriminator 1
 527 012a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 528 012c 002B     		cmp	r3, #0
 529 012e 0DD0     		beq	.L24
 462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 464:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 530              		.loc 1 465 0 is_stmt 1
 531 0130 FB8A     		ldrh	r3, [r7, #22]
 532 0132 FF2B     		cmp	r3, #255
 533 0134 04D9     		bls	.L25
 466:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 467:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 534              		.loc 1 467 0
 535 0136 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 536 0138 0F4A     		ldr	r2, .L28+28
 537 013a FF21     		movs	r1, #255
 538 013c D154     		strb	r1, [r2, r3]
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 539              		.loc 1 465 0
 540 013e 09E0     		b	.L16
 541              	.L25:
 468:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 469:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 470:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 471:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 542              		.loc 1 471 0
 543 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 544 0142 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 545 0144 D1B2     		uxtb	r1, r2
 546 0146 0C4A     		ldr	r2, .L28+28
 547 0148 D154     		strb	r1, [r2, r3]
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 19


 548              		.loc 1 465 0
 549 014a 03E0     		b	.L16
 550              	.L24:
 472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 473:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 474:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 475:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 477:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 479:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 480:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 551              		.loc 1 480 0
 552 014c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 553 014e 0A4A     		ldr	r2, .L28+28
 554 0150 0021     		movs	r1, #0
 555 0152 D154     		strb	r1, [r2, r3]
 556              	.L16:
 481:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 483:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 484:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 485:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 486:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 487:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 557              		.loc 1 487 0
 558 0154 1837     		adds	r7, r7, #24
 559              		.cfi_def_cfa_offset 8
 560 0156 BD46     		mov	sp, r7
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 0158 80BD     		pop	{r7, pc}
 564              	.L29:
 565 015a 00BF     		.align	2
 566              	.L28:
 567 015c 00000000 		.word	CapSense_CSD_widgetNumber
 568 0160 00000000 		.word	CapSense_CSD_noiseThreshold
 569 0164 00000000 		.word	CapSense_CSD_sensorRaw
 570 0168 00000000 		.word	CapSense_CSD_rawFilterData1
 571 016c 00000000 		.word	CapSense_CSD_sensorBaseline
 572 0170 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 573 0174 00000000 		.word	CapSense_CSD_sensorBaselineLow
 574 0178 00000000 		.word	CapSense_CSD_sensorSignal
 575              		.cfi_endproc
 576              	.LFE4:
 577              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 578              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 579              		.align	2
 580              		.global	CapSense_CSD_UpdateEnabledBaselines
 581              		.thumb
 582              		.thumb_func
 583              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 584              	CapSense_CSD_UpdateEnabledBaselines:
 585              	.LFB5:
 488:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 490:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 20


 491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 492:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 494:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 495:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 496:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 497:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 498:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 499:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 500:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 501:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 502:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 503:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 504:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 506:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 507:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 508:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 509:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 510:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 511:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 512:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 513:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 514:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 515:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 516:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 517:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 518:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 520:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 521:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 586              		.loc 1 521 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 8
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590 0000 80B5     		push	{r7, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 82B0     		sub	sp, sp, #8
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 523:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 524:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 525:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 598              		.loc 1 526 0
 599 0006 0023     		movs	r3, #0
 600 0008 FB71     		strb	r3, [r7, #7]
 601 000a 18E0     		b	.L31
 602              	.L33:
 527:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 528:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 603              		.loc 1 528 0
 604 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 21


 605 000e DB08     		lsrs	r3, r3, #3
 606 0010 BB71     		strb	r3, [r7, #6]
 529:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 607              		.loc 1 529 0
 608 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 609 0014 03F00703 		and	r3, r3, #7
 610 0018 0122     		movs	r2, #1
 611 001a 02FA03F3 		lsl	r3, r2, r3
 612 001e 7B71     		strb	r3, [r7, #5]
 530:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 613              		.loc 1 530 0
 614 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 615 0022 0A4A     		ldr	r2, .L34
 616 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 617 0026 7B79     		ldrb	r3, [r7, #5]
 618 0028 1340     		ands	r3, r3, r2
 619 002a DBB2     		uxtb	r3, r3
 620 002c 002B     		cmp	r3, #0
 621 002e 03D0     		beq	.L32
 531:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 622              		.loc 1 532 0
 623 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 0032 1846     		mov	r0, r3
 625 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 626              	.L32:
 526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 627              		.loc 1 526 0 discriminator 2
 628 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 629 003a 0133     		adds	r3, r3, #1
 630 003c FB71     		strb	r3, [r7, #7]
 631              	.L31:
 526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 632              		.loc 1 526 0 is_stmt 0 discriminator 1
 633 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 634 0040 002B     		cmp	r3, #0
 635 0042 E3D0     		beq	.L33
 533:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 534:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 535:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 636              		.loc 1 535 0 is_stmt 1
 637 0044 0837     		adds	r7, r7, #8
 638              		.cfi_def_cfa_offset 8
 639 0046 BD46     		mov	sp, r7
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0048 80BD     		pop	{r7, pc}
 643              	.L35:
 644 004a 00BF     		.align	2
 645              	.L34:
 646 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 647              		.cfi_endproc
 648              	.LFE5:
 649              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 650              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 651              		.align	2
 652              		.global	CapSense_CSD_CheckIsSensorActive
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 22


 653              		.thumb
 654              		.thumb_func
 655              		.type	CapSense_CSD_CheckIsSensorActive, %function
 656              	CapSense_CSD_CheckIsSensorActive:
 657              	.LFB6:
 536:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 538:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 542:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 544:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 545:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 547:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 548:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 549:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 550:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 551:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 552:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 553:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 554:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 555:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 556:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 557:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 558:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 559:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 560:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 561:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 562:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 563:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 564:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 565:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 566:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 567:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 568:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 569:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 570:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 571:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 572:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 573:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 574:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 575:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 576:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 577:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 578:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 579:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 658              		.loc 1 579 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 16
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 23


 666 0002 85B0     		sub	sp, sp, #20
 667              		.cfi_def_cfa_offset 24
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 670 0006 0346     		mov	r3, r0
 671 0008 FB71     		strb	r3, [r7, #7]
 580:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 581:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 582:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 672              		.loc 1 582 0
 673 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 674 000c DB08     		lsrs	r3, r3, #3
 675 000e FB73     		strb	r3, [r7, #15]
 583:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 676              		.loc 1 583 0
 677 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 678 0012 03F00703 		and	r3, r3, #7
 679 0016 0122     		movs	r2, #1
 680 0018 02FA03F3 		lsl	r3, r2, r3
 681 001c BB73     		strb	r3, [r7, #14]
 584:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 585:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 682              		.loc 1 585 0
 683 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 0020 324A     		ldr	r2, .L45
 685 0022 D35C     		ldrb	r3, [r2, r3]
 686 0024 7B73     		strb	r3, [r7, #13]
 586:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 687              		.loc 1 586 0
 688 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 689 0028 314A     		ldr	r2, .L45+4
 690 002a D35C     		ldrb	r3, [r2, r3]
 691 002c 3B73     		strb	r3, [r7, #12]
 587:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 hysteresis = CapSense_CSD_hysteresis[widget];
 692              		.loc 1 587 0
 693 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 694 0030 304A     		ldr	r2, .L45+8
 695 0032 D35C     		ldrb	r3, [r2, r3]
 696 0034 FB72     		strb	r3, [r7, #11]
 588:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 697              		.loc 1 588 0
 698 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 699 0038 2F4A     		ldr	r2, .L45+12
 700 003a D35C     		ldrb	r3, [r2, r3]
 701 003c BB72     		strb	r3, [r7, #10]
 589:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 590:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = widget;
 702              		.loc 1 590 0
 703 003e 7B7B     		ldrb	r3, [r7, #13]
 704 0040 7B72     		strb	r3, [r7, #9]
 591:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 592:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 593:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 594:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 705              		.loc 1 594 0
 706 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 707 0044 2D4A     		ldr	r2, .L45+16
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 24


 708 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 709 0048 BB7B     		ldrb	r3, [r7, #14]
 710 004a 1340     		ands	r3, r3, r2
 711 004c DBB2     		uxtb	r3, r3
 712 004e 002B     		cmp	r3, #0
 713 0050 18D0     		beq	.L37
 595:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 596:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 597:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 714              		.loc 1 597 0
 715 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 716 0054 2A4A     		ldr	r2, .L45+20
 717 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 718 0058 1946     		mov	r1, r3
 719 005a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 720 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 721 005e D31A     		subs	r3, r2, r3
 722 0060 9942     		cmp	r1, r3
 723 0062 32DA     		bge	.L39
 598:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 599:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 724              		.loc 1 599 0
 725 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 726 0066 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 727 0068 2449     		ldr	r1, .L45+16
 728 006a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 729 006c BA7B     		ldrb	r2, [r7, #14]
 730 006e D243     		mvns	r2, r2
 731 0070 D2B2     		uxtb	r2, r2
 732 0072 0A40     		ands	r2, r2, r1
 733 0074 D1B2     		uxtb	r1, r2
 734 0076 214A     		ldr	r2, .L45+16
 735 0078 D154     		strb	r1, [r2, r3]
 600:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 736              		.loc 1 600 0
 737 007a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 738 007c 2149     		ldr	r1, .L45+24
 739 007e BA7A     		ldrb	r2, [r7, #10]
 740 0080 CA54     		strb	r2, [r1, r3]
 741 0082 22E0     		b	.L39
 742              	.L37:
 601:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 602:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 603:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 604:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 605:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 606:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 743              		.loc 1 606 0
 744 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 745 0086 1E4A     		ldr	r2, .L45+20
 746 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 747 008a 1946     		mov	r1, r3
 748 008c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 749 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 750 0090 1344     		add	r3, r3, r2
 751 0092 9942     		cmp	r1, r3
 752 0094 15DD     		ble	.L40
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 25


 607:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 608:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 609:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 753              		.loc 1 609 0
 754 0096 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 755 0098 1A4A     		ldr	r2, .L45+24
 756 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 757 009c 012B     		cmp	r3, #1
 758 009e 08D8     		bhi	.L41
 610:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 611:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 759              		.loc 1 611 0
 760 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 761 00a2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 762 00a4 1549     		ldr	r1, .L45+16
 763 00a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 764 00a8 BA7B     		ldrb	r2, [r7, #14]
 765 00aa 0A43     		orrs	r2, r2, r1
 766 00ac D1B2     		uxtb	r1, r2
 767 00ae 134A     		ldr	r2, .L45+16
 768 00b0 D154     		strb	r1, [r2, r3]
 769              	.L41:
 612:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 613:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 770              		.loc 1 613 0
 771 00b2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 772 00b4 134A     		ldr	r2, .L45+24
 773 00b6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 774 00b8 013A     		subs	r2, r2, #1
 775 00ba D1B2     		uxtb	r1, r2
 776 00bc 114A     		ldr	r2, .L45+24
 777 00be D154     		strb	r1, [r2, r3]
 778 00c0 03E0     		b	.L39
 779              	.L40:
 614:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 615:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 616:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 617:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 618:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 780              		.loc 1 618 0
 781 00c2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 782 00c4 0F49     		ldr	r1, .L45+24
 783 00c6 BA7A     		ldrb	r2, [r7, #10]
 784 00c8 CA54     		strb	r2, [r1, r3]
 785              	.L39:
 619:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 620:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 621:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 622:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 786              		.loc 1 622 0
 787 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 788 00cc 0B4A     		ldr	r2, .L45+16
 789 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 790 00d0 BB7B     		ldrb	r3, [r7, #14]
 791 00d2 1340     		ands	r3, r3, r2
 792 00d4 DBB2     		uxtb	r3, r3
 793 00d6 002B     		cmp	r3, #0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 26


 794 00d8 01D0     		beq	.L42
 795              		.loc 1 622 0 is_stmt 0 discriminator 1
 796 00da 0123     		movs	r3, #1
 797 00dc 00E0     		b	.L43
 798              	.L42:
 799              		.loc 1 622 0 discriminator 2
 800 00de 0023     		movs	r3, #0
 801              	.L43:
 623:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 802              		.loc 1 623 0 is_stmt 1 discriminator 4
 803 00e0 1846     		mov	r0, r3
 804 00e2 1437     		adds	r7, r7, #20
 805              		.cfi_def_cfa_offset 4
 806 00e4 BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 00e6 5DF8047B 		ldr	r7, [sp], #4
 810              		.cfi_restore 7
 811              		.cfi_def_cfa_offset 0
 812 00ea 7047     		bx	lr
 813              	.L46:
 814              		.align	2
 815              	.L45:
 816 00ec 00000000 		.word	CapSense_CSD_widgetNumber
 817 00f0 00000000 		.word	CapSense_CSD_fingerThreshold
 818 00f4 00000000 		.word	CapSense_CSD_hysteresis
 819 00f8 00000000 		.word	CapSense_CSD_debounce
 820 00fc 00000000 		.word	CapSense_CSD_sensorOnMask
 821 0100 00000000 		.word	CapSense_CSD_sensorSignal
 822 0104 00000000 		.word	CapSense_CSD_debounceCounter
 823              		.cfi_endproc
 824              	.LFE6:
 825              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 826              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 827              		.align	2
 828              		.global	CapSense_CSD_CheckIsWidgetActive
 829              		.thumb
 830              		.thumb_func
 831              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 832              	CapSense_CSD_CheckIsWidgetActive:
 833              	.LFB7:
 624:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 625:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 626:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 627:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 628:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 629:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 630:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 631:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 632:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 633:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 634:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 635:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 636:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 637:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 638:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 639:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 27


 640:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 641:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 642:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 643:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 644:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 645:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 646:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 647:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 648:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 649:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 650:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 651:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 834              		.loc 1 651 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 16
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 7, -8
 841              		.cfi_offset 14, -4
 842 0002 84B0     		sub	sp, sp, #16
 843              		.cfi_def_cfa_offset 24
 844 0004 00AF     		add	r7, sp, #0
 845              		.cfi_def_cfa_register 7
 846 0006 0346     		mov	r3, r0
 847 0008 FB71     		strb	r3, [r7, #7]
 652:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 848              		.loc 1 652 0
 849 000a 0023     		movs	r3, #0
 850 000c FB73     		strb	r3, [r7, #15]
 653:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 851              		.loc 1 653 0
 852 000e 0122     		movs	r2, #1
 853 0010 FB7B     		ldrb	r3, [r7, #15]
 854 0012 1344     		add	r3, r3, r2
 855 0014 7B73     		strb	r3, [r7, #13]
 654:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 856              		.loc 1 654 0
 857 0016 0023     		movs	r3, #0
 858 0018 BB73     		strb	r3, [r7, #14]
 859              	.L49:
 655:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 656:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 657:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 658:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 659:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 860              		.loc 1 659 0
 861 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 862 001c 1846     		mov	r0, r3
 863 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 864 0022 0346     		mov	r3, r0
 865 0024 002B     		cmp	r3, #0
 866 0026 01D0     		beq	.L48
 660:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 661:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 867              		.loc 1 661 0
 868 0028 0123     		movs	r3, #1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 28


 869 002a BB73     		strb	r3, [r7, #14]
 870              	.L48:
 662:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 663:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 871              		.loc 1 663 0
 872 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 873 002e 0133     		adds	r3, r3, #1
 874 0030 FB73     		strb	r3, [r7, #15]
 664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 875              		.loc 1 665 0
 876 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 877 0034 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 878 0036 9A42     		cmp	r2, r3
 879 0038 EFD3     		bcc	.L49
 666:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 667:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 668:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 669:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 880              		.loc 1 669 0
 881 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 670:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 882              		.loc 1 670 0
 883 003c 1846     		mov	r0, r3
 884 003e 1037     		adds	r7, r7, #16
 885              		.cfi_def_cfa_offset 8
 886 0040 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 0042 80BD     		pop	{r7, pc}
 890              		.cfi_endproc
 891              	.LFE7:
 892              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 893              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 894              		.align	2
 895              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 896              		.thumb
 897              		.thumb_func
 898              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 899              	CapSense_CSD_CheckIsAnyWidgetActive:
 900              	.LFB8:
 671:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 672:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 673:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 675:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 677:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 679:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 680:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 681:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 682:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 683:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 684:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 685:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 686:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 29


 687:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 688:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 689:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 690:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 691:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 692:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 694:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 695:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 901              		.loc 1 695 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 8
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905 0000 80B5     		push	{r7, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 82B0     		sub	sp, sp, #8
 910              		.cfi_def_cfa_offset 16
 911 0004 00AF     		add	r7, sp, #0
 912              		.cfi_def_cfa_register 7
 696:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 697:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 913              		.loc 1 697 0
 914 0006 0023     		movs	r3, #0
 915 0008 BB71     		strb	r3, [r7, #6]
 698:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 916              		.loc 1 699 0
 917 000a 0023     		movs	r3, #0
 918 000c FB71     		strb	r3, [r7, #7]
 919 000e 0BE0     		b	.L52
 920              	.L54:
 700:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 701:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 921              		.loc 1 701 0
 922 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 923 0012 1846     		mov	r0, r3
 924 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 925 0018 0346     		mov	r3, r0
 926 001a 002B     		cmp	r3, #0
 927 001c 01D0     		beq	.L53
 702:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 703:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 928              		.loc 1 703 0
 929 001e 0123     		movs	r3, #1
 930 0020 BB71     		strb	r3, [r7, #6]
 931              	.L53:
 699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 932              		.loc 1 699 0 discriminator 2
 933 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 0024 0133     		adds	r3, r3, #1
 935 0026 FB71     		strb	r3, [r7, #7]
 936              	.L52:
 699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 937              		.loc 1 699 0 is_stmt 0 discriminator 1
 938 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 30


 939 002a 002B     		cmp	r3, #0
 940 002c F0D0     		beq	.L54
 704:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 705:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 706:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 707:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 708:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 941              		.loc 1 708 0 is_stmt 1
 942 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 709:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 943              		.loc 1 709 0
 944 0030 1846     		mov	r0, r3
 945 0032 0837     		adds	r7, r7, #8
 946              		.cfi_def_cfa_offset 8
 947 0034 BD46     		mov	sp, r7
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 0036 80BD     		pop	{r7, pc}
 951              		.cfi_endproc
 952              	.LFE8:
 953              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 954              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 955              		.align	2
 956              		.global	CapSense_CSD_EnableWidget
 957              		.thumb
 958              		.thumb_func
 959              		.type	CapSense_CSD_EnableWidget, %function
 960              	CapSense_CSD_EnableWidget:
 961              	.LFB9:
 710:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 712:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 713:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 714:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 715:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 716:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 717:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 719:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 720:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 721:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 723:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 724:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 726:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 727:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 728:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 729:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 730:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 731:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 732:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 733:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 734:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 736:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 737:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 31


 738:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 740:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 741:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 962              		.loc 1 741 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 16
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 0000 80B4     		push	{r7}
 968              		.cfi_def_cfa_offset 4
 969              		.cfi_offset 7, -4
 970 0002 85B0     		sub	sp, sp, #20
 971              		.cfi_def_cfa_offset 24
 972 0004 00AF     		add	r7, sp, #0
 973              		.cfi_def_cfa_register 7
 974 0006 0346     		mov	r3, r0
 975 0008 FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 743:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 744:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 976              		.loc 1 744 0
 977 000a 0023     		movs	r3, #0
 978 000c FB73     		strb	r3, [r7, #15]
 745:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 979              		.loc 1 745 0
 980 000e 0122     		movs	r2, #1
 981 0010 FB7B     		ldrb	r3, [r7, #15]
 982 0012 1344     		add	r3, r3, r2
 983 0014 BB73     		strb	r3, [r7, #14]
 984              	.L57:
 746:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 747:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 748:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 749:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 750:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 985              		.loc 1 750 0 discriminator 1
 986 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 987 0018 DB08     		lsrs	r3, r3, #3
 988 001a 7B73     		strb	r3, [r7, #13]
 751:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 989              		.loc 1 751 0 discriminator 1
 990 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 991 001e 03F00703 		and	r3, r3, #7
 992 0022 0122     		movs	r2, #1
 993 0024 02FA03F3 		lsl	r3, r2, r3
 994 0028 3B73     		strb	r3, [r7, #12]
 752:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 753:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 995              		.loc 1 753 0 discriminator 1
 996 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 997 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 998 002e 0949     		ldr	r1, .L58
 999 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1000 0032 3A7B     		ldrb	r2, [r7, #12]
 1001 0034 0A43     		orrs	r2, r2, r1
 1002 0036 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 32


 1003 0038 064A     		ldr	r2, .L58
 1004 003a D154     		strb	r1, [r2, r3]
 754:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1005              		.loc 1 754 0 discriminator 1
 1006 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1007 003e 0133     		adds	r3, r3, #1
 1008 0040 FB73     		strb	r3, [r7, #15]
 755:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 756:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1009              		.loc 1 756 0 discriminator 1
 1010 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1011 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1012 0046 9A42     		cmp	r2, r3
 1013 0048 E5D3     		bcc	.L57
 757:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 758:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 759:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1014              		.loc 1 759 0
 1015 004a 1437     		adds	r7, r7, #20
 1016              		.cfi_def_cfa_offset 4
 1017 004c BD46     		mov	sp, r7
 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 004e 5DF8047B 		ldr	r7, [sp], #4
 1021              		.cfi_restore 7
 1022              		.cfi_def_cfa_offset 0
 1023 0052 7047     		bx	lr
 1024              	.L59:
 1025              		.align	2
 1026              	.L58:
 1027 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 1028              		.cfi_endproc
 1029              	.LFE9:
 1030              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1031              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1032              		.align	2
 1033              		.global	CapSense_CSD_DisableWidget
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	CapSense_CSD_DisableWidget, %function
 1037              	CapSense_CSD_DisableWidget:
 1038              	.LFB10:
 760:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 761:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 762:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 763:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 764:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 765:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 767:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 768:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 770:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 771:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 772:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 773:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 774:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 33


 775:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 776:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 777:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 778:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 779:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 781:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 783:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 784:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 786:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 787:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 789:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 790:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 791:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 1039              		.loc 1 791 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 16
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0000 80B4     		push	{r7}
 1045              		.cfi_def_cfa_offset 4
 1046              		.cfi_offset 7, -4
 1047 0002 85B0     		sub	sp, sp, #20
 1048              		.cfi_def_cfa_offset 24
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 0346     		mov	r3, r0
 1052 0008 FB71     		strb	r3, [r7, #7]
 792:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 793:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 794:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1053              		.loc 1 794 0
 1054 000a 0023     		movs	r3, #0
 1055 000c FB73     		strb	r3, [r7, #15]
 795:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1056              		.loc 1 795 0
 1057 000e 0122     		movs	r2, #1
 1058 0010 FB7B     		ldrb	r3, [r7, #15]
 1059 0012 1344     		add	r3, r3, r2
 1060 0014 BB73     		strb	r3, [r7, #14]
 1061              	.L61:
 796:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 797:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 798:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 799:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 800:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1062              		.loc 1 800 0 discriminator 1
 1063 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1064 0018 DB08     		lsrs	r3, r3, #3
 1065 001a 7B73     		strb	r3, [r7, #13]
 801:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1066              		.loc 1 801 0 discriminator 1
 1067 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1068 001e 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 34


 1069 0022 0122     		movs	r2, #1
 1070 0024 02FA03F3 		lsl	r3, r2, r3
 1071 0028 3B73     		strb	r3, [r7, #12]
 802:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 803:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1072              		.loc 1 803 0 discriminator 1
 1073 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1074 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1075 002e 0A49     		ldr	r1, .L62
 1076 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1077 0032 3A7B     		ldrb	r2, [r7, #12]
 1078 0034 D243     		mvns	r2, r2
 1079 0036 D2B2     		uxtb	r2, r2
 1080 0038 0A40     		ands	r2, r2, r1
 1081 003a D1B2     		uxtb	r1, r2
 1082 003c 064A     		ldr	r2, .L62
 1083 003e D154     		strb	r1, [r2, r3]
 804:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1084              		.loc 1 804 0 discriminator 1
 1085 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1086 0042 0133     		adds	r3, r3, #1
 1087 0044 FB73     		strb	r3, [r7, #15]
 805:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 806:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1088              		.loc 1 806 0 discriminator 1
 1089 0046 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1090 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1091 004a 9A42     		cmp	r2, r3
 1092 004c E3D3     		bcc	.L61
 807:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 808:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 809:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1093              		.loc 1 809 0
 1094 004e 1437     		adds	r7, r7, #20
 1095              		.cfi_def_cfa_offset 4
 1096 0050 BD46     		mov	sp, r7
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0052 5DF8047B 		ldr	r7, [sp], #4
 1100              		.cfi_restore 7
 1101              		.cfi_def_cfa_offset 0
 1102 0056 7047     		bx	lr
 1103              	.L63:
 1104              		.align	2
 1105              	.L62:
 1106 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1107              		.cfi_endproc
 1108              	.LFE10:
 1109              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1110              		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 1111              		.align	2
 1112              		.global	CapSense_CSD_IIR4Filter
 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	CapSense_CSD_IIR4Filter, %function
 1116              	CapSense_CSD_IIR4Filter:
 1117              	.LFB11:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 35


 810:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 811:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 812:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 813:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 814:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 815:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 816:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 817:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 818:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 819:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 820:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 821:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 822:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 823:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 824:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 825:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 826:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 827:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 828:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 829:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 830:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 831:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 832:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 833:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 834:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 835:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 836:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
 837:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 838:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 839:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 840:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 841:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 842:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 843:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 844:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 845:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 846:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 847:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 848:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 849:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 850:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 851:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 852:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 853:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 854:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 855:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 856:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 857:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 858:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 859:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 860:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
 861:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 862:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 863:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 864:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 36


 867:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 868:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 869:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 870:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 871:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 872:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 873:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 874:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 875:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 876:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 877:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 878:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 879:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 880:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 881:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 882:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 883:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 884:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 885:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 886:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 887:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 888:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 889:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 890:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 891:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 892:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 893:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 895:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 896:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 897:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 898:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 899:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 900:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 901:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 902:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 903:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 904:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 905:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
 906:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 907:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 908:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 909:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 910:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 911:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 912:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 913:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 914:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 915:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 916:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 917:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
 918:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 919:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 920:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 921:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 922:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 923:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 37


 924:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 925:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 926:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 927:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 928:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 929:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 930:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 931:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 932:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 933:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 934:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 935:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 936:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 937:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 938:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 939:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 940:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 941:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 942:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 943:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 944:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 945:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 946:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 947:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 948:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 949:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 950:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 951:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 952:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 953:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 954:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
 955:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 956:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 957:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 958:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 959:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 960:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 961:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 962:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 963:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 965:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 966:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 967:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 968:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 969:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 970:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 972:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 973:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 974:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 975:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 976:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 977:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 978:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 979:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 980:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 38


 981:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
 982:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
 983:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 984:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
 985:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 986:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 987:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 988:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
 989:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 990:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 991:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
 992:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
 993:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 994:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 995:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
 996:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
 997:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
 998:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 999:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1000:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
1001:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
1002:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1003:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1004:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1005:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
1006:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1007:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1008:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
1009:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint8 CapSense_CSD_centroid[3u];
1010:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1011:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1012:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1013:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1014:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1015:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1016:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1017:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1018:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1019:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1020:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1021:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1022:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1023:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1024:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1025:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1026:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1027:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1028:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1029:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1030:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1031:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1032:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1033:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1034:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1035:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1036:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1037:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 39


1038:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1039:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1040:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1041:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1042:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1043:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1044:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1045:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1046:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1047:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1048:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1049:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1050:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1051:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1052:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1053:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1054:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1055:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1056:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1057:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1058:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1059:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1060:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1061:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1062:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1063:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1064:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1065:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1066:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1067:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1068:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1069:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1070:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1071:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1072:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1074:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1075:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1076:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
1078:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1079:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1080:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1081:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1082:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1083:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1084:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1085:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1086:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1087:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1088:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1089:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1090:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1091:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1092:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1093:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1094:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 40


1095:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1096:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1097:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1098:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1099:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
1124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
1135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
1139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
1140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 41


1152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
1160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 42


1209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 43


1266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 44


1323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 45


1380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_RS_"widget_name"            5
1382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1383:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1384:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the radial slider.
1385:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1386:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1387:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1388:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1389:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1390:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1391:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1392:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1395:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1396:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1397:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1398:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1399:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1400:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1401:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1402:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1403:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1404:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint8 widget)
1405:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
1406:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1407:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1408:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1409:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1410:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget]; 
1411:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1412:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1414:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1415:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1416:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1417:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1418:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1420:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1423:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1424:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1425:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */        
1426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1428:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1429:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1431:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1433:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1436:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 46


1437:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1440:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1441:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1442:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1443:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1444:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1445:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1447:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1449:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1450:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1451:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1452:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1454:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  || 
1455:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1457:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1458:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1460:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1461:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1464:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1466:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1467:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1468:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1469:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1470:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1471:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1473:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1474:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1475:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1477:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = 
1478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
1479:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1480:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1481:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & 
1482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1483:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1484:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1485:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
1486:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1487:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1488:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1489:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1490:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position, 
1491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1492:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1493:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 47


1494:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1495:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1496:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1497:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1498:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1499:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1500:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1501:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1502:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1503:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1504:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1505:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1506:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1507:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & 
1508:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1509:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1510:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1511:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1512:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1513:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1514:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1515:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1516:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1517:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1518:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & 
1519:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1520:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1521:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1522:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1523:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1524:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1525:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position, 
1526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
1527:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1528:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1529:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
1530:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1531:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1533:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1534:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1535:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1536:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1538:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum didn't find */
1540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1542:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1544:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1545:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1547:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1548:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1550:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 48


1551:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1552:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1553:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif
1554:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1555:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u)
1557:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1558:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
1559:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1560:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1561:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1562:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1563:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1564:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1565:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1566:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
1567:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1568:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  customizer.
1569:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1570:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1571:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number. 
1572:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1573:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_TP_"widget_name"            5
1574:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1575:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1576:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
1577:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
1578:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
1579:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1580:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1581:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1582:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1583:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1584:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1585:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1586:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   calculations.
1587:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1588:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1589:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1590:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1591:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_GetTouchCentroidPos(uint8 widget, uint16* pos)
1593:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1594:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1595:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1596:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
1597:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
1598:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1599:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1600:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1601:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1602:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1603:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1604:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint16 tempPos;
1605:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
1606:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
1607:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 49


1608:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1609:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxX;
1610:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxY;
1611:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posX;
1612:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posY;
1613:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 touch = 0u;
1614:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1615:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1616:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1617:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
1618:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1619:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
1620:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1621:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
1622:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1624:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maxX != 0xFFu)
1625:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1626:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
1627:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
1628:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
1630:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1632:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else
1633:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1634:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (maxY != 0xFFu)
1637:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1638:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
1639:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 touch = 1u;
1640:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1641:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
1642:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(maxY, offset, count, 
1643:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
1644:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1645:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
1646:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
1647:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
1648:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1649:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(maxX, offset, count, 
1650:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
1651:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1652:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1653:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
1654:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1655:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1656:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Caluclate position to store filters data */
1657:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1658:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
1659:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1660:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1661:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1662:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Init filters */
1663:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
1664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 50


1665:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1666:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
1667:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
1668:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
1669:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1670:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1671:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1672:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1673:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1674:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
1675:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
1676:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1677:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1678:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1679:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
1680:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1681:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1682:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
1683:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1684:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1685:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
1686:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1687:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Do filtering */
1688:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1689:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1690:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1691:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1692:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
1693:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1694:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1695:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1696:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1697:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
1698:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1700:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
1701:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1702:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1703:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1704:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1705:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1706:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1707:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1708:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
1709:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1710:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1712:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
1713:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1714:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1715:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1716:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
1717:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1719:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1720:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1721:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 51


1722:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1723:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1724:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY, 
1725:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1726:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1727:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1728:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1729:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1730:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1731:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1732:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1733:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1734:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1735:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1736:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1737:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1738:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1739:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX, 
1740:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
1741:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1742:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1743:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY, 
1744:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1745:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1746:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1747:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1748:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1750:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1751:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1752:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1753:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1754:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1755:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
1756:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1757:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1758:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1759:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
1760:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1761:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1762:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1763:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1764:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1765:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1766:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1767:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1768:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1769:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1770:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     {
1771:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX, 
1772:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1773:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
1774:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         
1775:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY, 
1776:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1777:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
1778:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     }
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 52


1779:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1783:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1784:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1785:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1786:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Save positions */
1787:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
1788:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
1789:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1790:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1791:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1792:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(touch == 0u)
1794:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1795:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1796:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1797:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1798:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1799:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1800:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1801:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1802:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1803:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (touch);
1804:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1805:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u) */
1806:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1808:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1809:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1810:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
1812:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1814:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Median filter function. 
1816:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1817:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  median value.
1818:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1819:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1820:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1821:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1822:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1823:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1824:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1825:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1826:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1828:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1829:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                          
1830:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1831:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 tmp;
1832:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1833:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x1 > x2)
1834:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1835:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             tmp = x2;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 53


1836:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x1;
1837:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x1 = tmp;
1838:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1839:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1840:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x2 > x3)
1841:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1842:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x3;
1843:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1844:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1845:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1846:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1847:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1848:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1849:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1850:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1851:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1852:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1853:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1854:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1855:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
1856:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1857:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1858:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1859:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Averaging filter function.
1860:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1861:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
1862:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1863:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1864:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1867:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1868:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1869:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1870:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1871:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1872:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1873:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                             
1874:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1875:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1876:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1877:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1878:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1879:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1880:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1882:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1883:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1884:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1885:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1886:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1887:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
1888:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1891:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1892:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 54


1893:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1894:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1895:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1896:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1897:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1898:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1899:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1900:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1901:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
1902:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
1903:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1904:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1905:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1906:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1907:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1908:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
1909:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1910:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1911:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1912:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1913:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1914:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1915:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1916:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1917:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) | \
1918:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER) )
1919:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1920:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
1921:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1922:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1923:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1924:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1925:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1926:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1928:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1929:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1930:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1932:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1933:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1934:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
1935:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
1936:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1118              		.loc 1 1936 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 16
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123 0000 80B4     		push	{r7}
 1124              		.cfi_def_cfa_offset 4
 1125              		.cfi_offset 7, -4
 1126 0002 85B0     		sub	sp, sp, #20
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 1130 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 55


 1131 0008 0A46     		mov	r2, r1
 1132 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1133 000c 1346     		mov	r3, r2	@ movhi
 1134 000e BB80     		strh	r3, [r7, #4]	@ movhi
1937:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1938:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1939:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1940:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1135              		.loc 1 1940 0
 1136 0010 FA88     		ldrh	r2, [r7, #6]
 1137 0012 BB88     		ldrh	r3, [r7, #4]
 1138 0014 1344     		add	r3, r3, r2
 1139 0016 FB60     		str	r3, [r7, #12]
1941:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1140              		.loc 1 1941 0
 1141 0018 BB88     		ldrh	r3, [r7, #4]
 1142 001a 5B00     		lsls	r3, r3, #1
 1143 001c FA68     		ldr	r2, [r7, #12]
 1144 001e 1344     		add	r3, r3, r2
 1145 0020 FB60     		str	r3, [r7, #12]
1942:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 1146              		.loc 1 1942 0
 1147 0022 FB68     		ldr	r3, [r7, #12]
 1148 0024 9B08     		lsrs	r3, r3, #2
 1149 0026 FB60     		str	r3, [r7, #12]
1943:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1944:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 1150              		.loc 1 1944 0
 1151 0028 FB68     		ldr	r3, [r7, #12]
 1152 002a 9BB2     		uxth	r3, r3
1945:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1153              		.loc 1 1945 0
 1154 002c 1846     		mov	r0, r3
 1155 002e 1437     		adds	r7, r7, #20
 1156              		.cfi_def_cfa_offset 4
 1157 0030 BD46     		mov	sp, r7
 1158              		.cfi_def_cfa_register 13
 1159              		@ sp needed
 1160 0032 5DF8047B 		ldr	r7, [sp], #4
 1161              		.cfi_restore 7
 1162              		.cfi_def_cfa_offset 0
 1163 0036 7047     		bx	lr
 1164              		.cfi_endproc
 1165              	.LFE11:
 1166              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 1167              		.text
 1168              	.Letext0:
 1169              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1170              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_CSD.h"
 1171              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1172              		.section	.debug_info,"",%progbits
 1173              	.Ldebug_info0:
 1174 0000 7D050000 		.4byte	0x57d
 1175 0004 0400     		.2byte	0x4
 1176 0006 00000000 		.4byte	.Ldebug_abbrev0
 1177 000a 04       		.byte	0x4
 1178 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 56


 1179 000c 86020000 		.4byte	.LASF59
 1180 0010 01       		.byte	0x1
 1181 0011 ED040000 		.4byte	.LASF60
 1182 0015 81000000 		.4byte	.LASF61
 1183 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1184 001d 00000000 		.4byte	0
 1185 0021 00000000 		.4byte	.Ldebug_line0
 1186 0025 02       		.uleb128 0x2
 1187 0026 01       		.byte	0x1
 1188 0027 06       		.byte	0x6
 1189 0028 F9000000 		.4byte	.LASF0
 1190 002c 02       		.uleb128 0x2
 1191 002d 01       		.byte	0x1
 1192 002e 08       		.byte	0x8
 1193 002f 7C030000 		.4byte	.LASF1
 1194 0033 02       		.uleb128 0x2
 1195 0034 02       		.byte	0x2
 1196 0035 05       		.byte	0x5
 1197 0036 99030000 		.4byte	.LASF2
 1198 003a 02       		.uleb128 0x2
 1199 003b 02       		.byte	0x2
 1200 003c 07       		.byte	0x7
 1201 003d 08020000 		.4byte	.LASF3
 1202 0041 02       		.uleb128 0x2
 1203 0042 04       		.byte	0x4
 1204 0043 05       		.byte	0x5
 1205 0044 45010000 		.4byte	.LASF4
 1206 0048 02       		.uleb128 0x2
 1207 0049 04       		.byte	0x4
 1208 004a 07       		.byte	0x7
 1209 004b DC010000 		.4byte	.LASF5
 1210 004f 02       		.uleb128 0x2
 1211 0050 08       		.byte	0x8
 1212 0051 05       		.byte	0x5
 1213 0052 EB000000 		.4byte	.LASF6
 1214 0056 02       		.uleb128 0x2
 1215 0057 08       		.byte	0x8
 1216 0058 07       		.byte	0x7
 1217 0059 6A000000 		.4byte	.LASF7
 1218 005d 03       		.uleb128 0x3
 1219 005e 04       		.byte	0x4
 1220 005f 05       		.byte	0x5
 1221 0060 696E7400 		.ascii	"int\000"
 1222 0064 02       		.uleb128 0x2
 1223 0065 04       		.byte	0x4
 1224 0066 07       		.byte	0x7
 1225 0067 CF010000 		.4byte	.LASF8
 1226 006b 04       		.uleb128 0x4
 1227 006c 68010000 		.4byte	.LASF9
 1228 0070 02       		.byte	0x2
 1229 0071 C2       		.byte	0xc2
 1230 0072 2C000000 		.4byte	0x2c
 1231 0076 04       		.uleb128 0x4
 1232 0077 1D000000 		.4byte	.LASF10
 1233 007b 02       		.byte	0x2
 1234 007c C3       		.byte	0xc3
 1235 007d 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 57


 1236 0081 04       		.uleb128 0x4
 1237 0082 75010000 		.4byte	.LASF11
 1238 0086 02       		.byte	0x2
 1239 0087 C4       		.byte	0xc4
 1240 0088 48000000 		.4byte	0x48
 1241 008c 02       		.uleb128 0x2
 1242 008d 04       		.byte	0x4
 1243 008e 04       		.byte	0x4
 1244 008f 14030000 		.4byte	.LASF12
 1245 0093 02       		.uleb128 0x2
 1246 0094 08       		.byte	0x8
 1247 0095 04       		.byte	0x4
 1248 0096 6E010000 		.4byte	.LASF13
 1249 009a 02       		.uleb128 0x2
 1250 009b 01       		.byte	0x1
 1251 009c 08       		.byte	0x8
 1252 009d 23040000 		.4byte	.LASF14
 1253 00a1 02       		.uleb128 0x2
 1254 00a2 04       		.byte	0x4
 1255 00a3 07       		.byte	0x7
 1256 00a4 30020000 		.4byte	.LASF15
 1257 00a8 05       		.uleb128 0x5
 1258 00a9 87010000 		.4byte	.LASF16
 1259 00ad 01       		.byte	0x1
 1260 00ae 79       		.byte	0x79
 1261 00af 00000000 		.4byte	.LFB0
 1262 00b3 78000000 		.4byte	.LFE0-.LFB0
 1263 00b7 01       		.uleb128 0x1
 1264 00b8 9C       		.byte	0x9c
 1265 00b9 DA000000 		.4byte	0xda
 1266 00bd 06       		.uleb128 0x6
 1267 00be 1B020000 		.4byte	.LASF18
 1268 00c2 01       		.byte	0x1
 1269 00c3 79       		.byte	0x79
 1270 00c4 6B000000 		.4byte	0x6b
 1271 00c8 02       		.uleb128 0x2
 1272 00c9 91       		.byte	0x91
 1273 00ca 6F       		.sleb128 -17
 1274 00cb 07       		.uleb128 0x7
 1275 00cc A3030000 		.4byte	.LASF20
 1276 00d0 01       		.byte	0x1
 1277 00d1 7D       		.byte	0x7d
 1278 00d2 6B000000 		.4byte	0x6b
 1279 00d6 02       		.uleb128 0x2
 1280 00d7 91       		.byte	0x91
 1281 00d8 77       		.sleb128 -9
 1282 00d9 00       		.byte	0
 1283 00da 08       		.uleb128 0x8
 1284 00db 44000000 		.4byte	.LASF17
 1285 00df 01       		.byte	0x1
 1286 00e0 C2       		.byte	0xc2
 1287 00e1 00000000 		.4byte	.LFB1
 1288 00e5 2C000000 		.4byte	.LFE1-.LFB1
 1289 00e9 01       		.uleb128 0x1
 1290 00ea 9C       		.byte	0x9c
 1291 00eb FE000000 		.4byte	0xfe
 1292 00ef 06       		.uleb128 0x6
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 58


 1293 00f0 1B020000 		.4byte	.LASF18
 1294 00f4 01       		.byte	0x1
 1295 00f5 C2       		.byte	0xc2
 1296 00f6 6B000000 		.4byte	0x6b
 1297 00fa 02       		.uleb128 0x2
 1298 00fb 91       		.byte	0x91
 1299 00fc 77       		.sleb128 -9
 1300 00fd 00       		.byte	0
 1301 00fe 08       		.uleb128 0x8
 1302 00ff 3B030000 		.4byte	.LASF19
 1303 0103 01       		.byte	0x1
 1304 0104 F6       		.byte	0xf6
 1305 0105 00000000 		.4byte	.LFB2
 1306 0109 26000000 		.4byte	.LFE2-.LFB2
 1307 010d 01       		.uleb128 0x1
 1308 010e 9C       		.byte	0x9c
 1309 010f 20010000 		.4byte	0x120
 1310 0113 09       		.uleb128 0x9
 1311 0114 6900     		.ascii	"i\000"
 1312 0116 01       		.byte	0x1
 1313 0117 F9       		.byte	0xf9
 1314 0118 6B000000 		.4byte	0x6b
 1315 011c 02       		.uleb128 0x2
 1316 011d 91       		.byte	0x91
 1317 011e 77       		.sleb128 -9
 1318 011f 00       		.byte	0
 1319 0120 0A       		.uleb128 0xa
 1320 0121 39020000 		.4byte	.LASF21
 1321 0125 01       		.byte	0x1
 1322 0126 1701     		.2byte	0x117
 1323 0128 00000000 		.4byte	.LFB3
 1324 012c 6C000000 		.4byte	.LFE3-.LFB3
 1325 0130 01       		.uleb128 0x1
 1326 0131 9C       		.byte	0x9c
 1327 0132 62010000 		.4byte	0x162
 1328 0136 0B       		.uleb128 0xb
 1329 0137 6900     		.ascii	"i\000"
 1330 0139 01       		.byte	0x1
 1331 013a 1A01     		.2byte	0x11a
 1332 013c 6B000000 		.4byte	0x6b
 1333 0140 02       		.uleb128 0x2
 1334 0141 91       		.byte	0x91
 1335 0142 77       		.sleb128 -9
 1336 0143 0B       		.uleb128 0xb
 1337 0144 706F7300 		.ascii	"pos\000"
 1338 0148 01       		.byte	0x1
 1339 0149 1B01     		.2byte	0x11b
 1340 014b 6B000000 		.4byte	0x6b
 1341 014f 02       		.uleb128 0x2
 1342 0150 91       		.byte	0x91
 1343 0151 76       		.sleb128 -10
 1344 0152 0C       		.uleb128 0xc
 1345 0153 61020000 		.4byte	.LASF22
 1346 0157 01       		.byte	0x1
 1347 0158 1C01     		.2byte	0x11c
 1348 015a 6B000000 		.4byte	0x6b
 1349 015e 02       		.uleb128 0x2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 59


 1350 015f 91       		.byte	0x91
 1351 0160 75       		.sleb128 -11
 1352 0161 00       		.byte	0
 1353 0162 0A       		.uleb128 0xa
 1354 0163 C8030000 		.4byte	.LASF23
 1355 0167 01       		.byte	0x1
 1356 0168 5A01     		.2byte	0x15a
 1357 016a 00000000 		.4byte	.LFB4
 1358 016e 7C010000 		.4byte	.LFE4-.LFB4
 1359 0172 01       		.uleb128 0x1
 1360 0173 9C       		.byte	0x9c
 1361 0174 D3010000 		.4byte	0x1d3
 1362 0178 0D       		.uleb128 0xd
 1363 0179 1B020000 		.4byte	.LASF18
 1364 017d 01       		.byte	0x1
 1365 017e 5A01     		.2byte	0x15a
 1366 0180 6B000000 		.4byte	0x6b
 1367 0184 02       		.uleb128 0x2
 1368 0185 91       		.byte	0x91
 1369 0186 67       		.sleb128 -25
 1370 0187 0C       		.uleb128 0xc
 1371 0188 22020000 		.4byte	.LASF24
 1372 018c 01       		.byte	0x1
 1373 018d 5D01     		.2byte	0x15d
 1374 018f 81000000 		.4byte	0x81
 1375 0193 02       		.uleb128 0x2
 1376 0194 91       		.byte	0x91
 1377 0195 6C       		.sleb128 -20
 1378 0196 0C       		.uleb128 0xc
 1379 0197 53050000 		.4byte	.LASF25
 1380 019b 01       		.byte	0x1
 1381 019c 5E01     		.2byte	0x15e
 1382 019e 76000000 		.4byte	0x76
 1383 01a2 02       		.uleb128 0x2
 1384 01a3 91       		.byte	0x91
 1385 01a4 76       		.sleb128 -10
 1386 01a5 0C       		.uleb128 0xc
 1387 01a6 24000000 		.4byte	.LASF26
 1388 01aa 01       		.byte	0x1
 1389 01ab 5F01     		.2byte	0x15f
 1390 01ad 76000000 		.4byte	0x76
 1391 01b1 02       		.uleb128 0x2
 1392 01b2 91       		.byte	0x91
 1393 01b3 72       		.sleb128 -14
 1394 01b4 0C       		.uleb128 0xc
 1395 01b5 A3030000 		.4byte	.LASF20
 1396 01b9 01       		.byte	0x1
 1397 01ba 6001     		.2byte	0x160
 1398 01bc 6B000000 		.4byte	0x6b
 1399 01c0 02       		.uleb128 0x2
 1400 01c1 91       		.byte	0x91
 1401 01c2 75       		.sleb128 -11
 1402 01c3 0C       		.uleb128 0xc
 1403 01c4 8A030000 		.4byte	.LASF27
 1404 01c8 01       		.byte	0x1
 1405 01c9 6101     		.2byte	0x161
 1406 01cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 60


 1407 01cf 02       		.uleb128 0x2
 1408 01d0 91       		.byte	0x91
 1409 01d1 74       		.sleb128 -12
 1410 01d2 00       		.byte	0
 1411 01d3 0A       		.uleb128 0xa
 1412 01d4 42040000 		.4byte	.LASF28
 1413 01d8 01       		.byte	0x1
 1414 01d9 0702     		.2byte	0x207
 1415 01db 00000000 		.4byte	.LFB5
 1416 01df 50000000 		.4byte	.LFE5-.LFB5
 1417 01e3 01       		.uleb128 0x1
 1418 01e4 9C       		.byte	0x9c
 1419 01e5 15020000 		.4byte	0x215
 1420 01e9 0B       		.uleb128 0xb
 1421 01ea 6900     		.ascii	"i\000"
 1422 01ec 01       		.byte	0x1
 1423 01ed 0A02     		.2byte	0x20a
 1424 01ef 6B000000 		.4byte	0x6b
 1425 01f3 02       		.uleb128 0x2
 1426 01f4 91       		.byte	0x91
 1427 01f5 77       		.sleb128 -9
 1428 01f6 0B       		.uleb128 0xb
 1429 01f7 706F7300 		.ascii	"pos\000"
 1430 01fb 01       		.byte	0x1
 1431 01fc 0B02     		.2byte	0x20b
 1432 01fe 6B000000 		.4byte	0x6b
 1433 0202 02       		.uleb128 0x2
 1434 0203 91       		.byte	0x91
 1435 0204 76       		.sleb128 -10
 1436 0205 0C       		.uleb128 0xc
 1437 0206 61020000 		.4byte	.LASF22
 1438 020a 01       		.byte	0x1
 1439 020b 0C02     		.2byte	0x20c
 1440 020d 6B000000 		.4byte	0x6b
 1441 0211 02       		.uleb128 0x2
 1442 0212 91       		.byte	0x91
 1443 0213 75       		.sleb128 -11
 1444 0214 00       		.byte	0
 1445 0215 0E       		.uleb128 0xe
 1446 0216 1E010000 		.4byte	.LASF34
 1447 021a 01       		.byte	0x1
 1448 021b 4102     		.2byte	0x241
 1449 021d 6B000000 		.4byte	0x6b
 1450 0221 00000000 		.4byte	.LFB6
 1451 0225 08010000 		.4byte	.LFE6-.LFB6
 1452 0229 01       		.uleb128 0x1
 1453 022a 9C       		.byte	0x9c
 1454 022b A8020000 		.4byte	0x2a8
 1455 022f 0D       		.uleb128 0xd
 1456 0230 1B020000 		.4byte	.LASF18
 1457 0234 01       		.byte	0x1
 1458 0235 4102     		.2byte	0x241
 1459 0237 6B000000 		.4byte	0x6b
 1460 023b 02       		.uleb128 0x2
 1461 023c 91       		.byte	0x91
 1462 023d 6F       		.sleb128 -17
 1463 023e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 61


 1464 023f 9A040000 		.4byte	.LASF29
 1465 0243 01       		.byte	0x1
 1466 0244 4402     		.2byte	0x244
 1467 0246 6B000000 		.4byte	0x6b
 1468 024a 02       		.uleb128 0x2
 1469 024b 91       		.byte	0x91
 1470 024c 71       		.sleb128 -15
 1471 024d 0B       		.uleb128 0xb
 1472 024e 706F7300 		.ascii	"pos\000"
 1473 0252 01       		.byte	0x1
 1474 0253 4602     		.2byte	0x246
 1475 0255 6B000000 		.4byte	0x6b
 1476 0259 02       		.uleb128 0x2
 1477 025a 91       		.byte	0x91
 1478 025b 77       		.sleb128 -9
 1479 025c 0C       		.uleb128 0xc
 1480 025d AA030000 		.4byte	.LASF30
 1481 0261 01       		.byte	0x1
 1482 0262 4702     		.2byte	0x247
 1483 0264 6B000000 		.4byte	0x6b
 1484 0268 02       		.uleb128 0x2
 1485 0269 91       		.byte	0x91
 1486 026a 76       		.sleb128 -10
 1487 026b 0C       		.uleb128 0xc
 1488 026c A3030000 		.4byte	.LASF20
 1489 0270 01       		.byte	0x1
 1490 0271 4902     		.2byte	0x249
 1491 0273 6B000000 		.4byte	0x6b
 1492 0277 02       		.uleb128 0x2
 1493 0278 91       		.byte	0x91
 1494 0279 75       		.sleb128 -11
 1495 027a 0C       		.uleb128 0xc
 1496 027b 34000000 		.4byte	.LASF31
 1497 027f 01       		.byte	0x1
 1498 0280 4A02     		.2byte	0x24a
 1499 0282 6B000000 		.4byte	0x6b
 1500 0286 02       		.uleb128 0x2
 1501 0287 91       		.byte	0x91
 1502 0288 74       		.sleb128 -12
 1503 0289 0C       		.uleb128 0xc
 1504 028a 7C010000 		.4byte	.LASF32
 1505 028e 01       		.byte	0x1
 1506 028f 4B02     		.2byte	0x24b
 1507 0291 6B000000 		.4byte	0x6b
 1508 0295 02       		.uleb128 0x2
 1509 0296 91       		.byte	0x91
 1510 0297 73       		.sleb128 -13
 1511 0298 0C       		.uleb128 0xc
 1512 0299 27020000 		.4byte	.LASF33
 1513 029d 01       		.byte	0x1
 1514 029e 4C02     		.2byte	0x24c
 1515 02a0 6B000000 		.4byte	0x6b
 1516 02a4 02       		.uleb128 0x2
 1517 02a5 91       		.byte	0x91
 1518 02a6 72       		.sleb128 -14
 1519 02a7 00       		.byte	0
 1520 02a8 0F       		.uleb128 0xf
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 62


 1521 02a9 CC040000 		.4byte	.LASF35
 1522 02ad 01       		.byte	0x1
 1523 02ae 8902     		.2byte	0x289
 1524 02b0 6B000000 		.4byte	0x6b
 1525 02b4 00000000 		.4byte	.LFB7
 1526 02b8 44000000 		.4byte	.LFE7-.LFB7
 1527 02bc 01       		.uleb128 0x1
 1528 02bd 9C       		.byte	0x9c
 1529 02be FF020000 		.4byte	0x2ff
 1530 02c2 0D       		.uleb128 0xd
 1531 02c3 A3030000 		.4byte	.LASF20
 1532 02c7 01       		.byte	0x1
 1533 02c8 8902     		.2byte	0x289
 1534 02ca 6B000000 		.4byte	0x6b
 1535 02ce 02       		.uleb128 0x2
 1536 02cf 91       		.byte	0x91
 1537 02d0 6F       		.sleb128 -17
 1538 02d1 0C       		.uleb128 0xc
 1539 02d2 05010000 		.4byte	.LASF36
 1540 02d6 01       		.byte	0x1
 1541 02d7 8C02     		.2byte	0x28c
 1542 02d9 6B000000 		.4byte	0x6b
 1543 02dd 02       		.uleb128 0x2
 1544 02de 91       		.byte	0x91
 1545 02df 77       		.sleb128 -9
 1546 02e0 0C       		.uleb128 0xc
 1547 02e1 0E010000 		.4byte	.LASF37
 1548 02e5 01       		.byte	0x1
 1549 02e6 8D02     		.2byte	0x28d
 1550 02e8 6B000000 		.4byte	0x6b
 1551 02ec 02       		.uleb128 0x2
 1552 02ed 91       		.byte	0x91
 1553 02ee 75       		.sleb128 -11
 1554 02ef 0C       		.uleb128 0xc
 1555 02f0 3F010000 		.4byte	.LASF38
 1556 02f4 01       		.byte	0x1
 1557 02f5 8E02     		.2byte	0x28e
 1558 02f7 6B000000 		.4byte	0x6b
 1559 02fb 02       		.uleb128 0x2
 1560 02fc 91       		.byte	0x91
 1561 02fd 76       		.sleb128 -10
 1562 02fe 00       		.byte	0
 1563 02ff 0F       		.uleb128 0xf
 1564 0300 A8040000 		.4byte	.LASF39
 1565 0304 01       		.byte	0x1
 1566 0305 B502     		.2byte	0x2b5
 1567 0307 6B000000 		.4byte	0x6b
 1568 030b 00000000 		.4byte	.LFB8
 1569 030f 38000000 		.4byte	.LFE8-.LFB8
 1570 0313 01       		.uleb128 0x1
 1571 0314 9C       		.byte	0x9c
 1572 0315 36030000 		.4byte	0x336
 1573 0319 0B       		.uleb128 0xb
 1574 031a 6900     		.ascii	"i\000"
 1575 031c 01       		.byte	0x1
 1576 031d B802     		.2byte	0x2b8
 1577 031f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 63


 1578 0323 02       		.uleb128 0x2
 1579 0324 91       		.byte	0x91
 1580 0325 77       		.sleb128 -9
 1581 0326 0C       		.uleb128 0xc
 1582 0327 3F010000 		.4byte	.LASF38
 1583 032b 01       		.byte	0x1
 1584 032c B902     		.2byte	0x2b9
 1585 032e 6B000000 		.4byte	0x6b
 1586 0332 02       		.uleb128 0x2
 1587 0333 91       		.byte	0x91
 1588 0334 76       		.sleb128 -10
 1589 0335 00       		.byte	0
 1590 0336 10       		.uleb128 0x10
 1591 0337 28040000 		.4byte	.LASF40
 1592 033b 01       		.byte	0x1
 1593 033c E302     		.2byte	0x2e3
 1594 033e 00000000 		.4byte	.LFB9
 1595 0342 58000000 		.4byte	.LFE9-.LFB9
 1596 0346 01       		.uleb128 0x1
 1597 0347 9C       		.byte	0x9c
 1598 0348 98030000 		.4byte	0x398
 1599 034c 0D       		.uleb128 0xd
 1600 034d A3030000 		.4byte	.LASF20
 1601 0351 01       		.byte	0x1
 1602 0352 E302     		.2byte	0x2e3
 1603 0354 6B000000 		.4byte	0x6b
 1604 0358 02       		.uleb128 0x2
 1605 0359 91       		.byte	0x91
 1606 035a 6F       		.sleb128 -17
 1607 035b 0B       		.uleb128 0xb
 1608 035c 706F7300 		.ascii	"pos\000"
 1609 0360 01       		.byte	0x1
 1610 0361 E602     		.2byte	0x2e6
 1611 0363 6B000000 		.4byte	0x6b
 1612 0367 02       		.uleb128 0x2
 1613 0368 91       		.byte	0x91
 1614 0369 75       		.sleb128 -11
 1615 036a 0C       		.uleb128 0xc
 1616 036b 61020000 		.4byte	.LASF22
 1617 036f 01       		.byte	0x1
 1618 0370 E702     		.2byte	0x2e7
 1619 0372 6B000000 		.4byte	0x6b
 1620 0376 02       		.uleb128 0x2
 1621 0377 91       		.byte	0x91
 1622 0378 74       		.sleb128 -12
 1623 0379 0C       		.uleb128 0xc
 1624 037a 05010000 		.4byte	.LASF36
 1625 037e 01       		.byte	0x1
 1626 037f E802     		.2byte	0x2e8
 1627 0381 6B000000 		.4byte	0x6b
 1628 0385 02       		.uleb128 0x2
 1629 0386 91       		.byte	0x91
 1630 0387 77       		.sleb128 -9
 1631 0388 0C       		.uleb128 0xc
 1632 0389 0E010000 		.4byte	.LASF37
 1633 038d 01       		.byte	0x1
 1634 038e E902     		.2byte	0x2e9
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 64


 1635 0390 6B000000 		.4byte	0x6b
 1636 0394 02       		.uleb128 0x2
 1637 0395 91       		.byte	0x91
 1638 0396 76       		.sleb128 -10
 1639 0397 00       		.byte	0
 1640 0398 10       		.uleb128 0x10
 1641 0399 5B050000 		.4byte	.LASF41
 1642 039d 01       		.byte	0x1
 1643 039e 1503     		.2byte	0x315
 1644 03a0 00000000 		.4byte	.LFB10
 1645 03a4 5C000000 		.4byte	.LFE10-.LFB10
 1646 03a8 01       		.uleb128 0x1
 1647 03a9 9C       		.byte	0x9c
 1648 03aa FA030000 		.4byte	0x3fa
 1649 03ae 0D       		.uleb128 0xd
 1650 03af A3030000 		.4byte	.LASF20
 1651 03b3 01       		.byte	0x1
 1652 03b4 1503     		.2byte	0x315
 1653 03b6 6B000000 		.4byte	0x6b
 1654 03ba 02       		.uleb128 0x2
 1655 03bb 91       		.byte	0x91
 1656 03bc 6F       		.sleb128 -17
 1657 03bd 0B       		.uleb128 0xb
 1658 03be 706F7300 		.ascii	"pos\000"
 1659 03c2 01       		.byte	0x1
 1660 03c3 1803     		.2byte	0x318
 1661 03c5 6B000000 		.4byte	0x6b
 1662 03c9 02       		.uleb128 0x2
 1663 03ca 91       		.byte	0x91
 1664 03cb 75       		.sleb128 -11
 1665 03cc 0C       		.uleb128 0xc
 1666 03cd 61020000 		.4byte	.LASF22
 1667 03d1 01       		.byte	0x1
 1668 03d2 1903     		.2byte	0x319
 1669 03d4 6B000000 		.4byte	0x6b
 1670 03d8 02       		.uleb128 0x2
 1671 03d9 91       		.byte	0x91
 1672 03da 74       		.sleb128 -12
 1673 03db 0C       		.uleb128 0xc
 1674 03dc 05010000 		.4byte	.LASF36
 1675 03e0 01       		.byte	0x1
 1676 03e1 1A03     		.2byte	0x31a
 1677 03e3 6B000000 		.4byte	0x6b
 1678 03e7 02       		.uleb128 0x2
 1679 03e8 91       		.byte	0x91
 1680 03e9 77       		.sleb128 -9
 1681 03ea 0C       		.uleb128 0xc
 1682 03eb 0E010000 		.4byte	.LASF37
 1683 03ef 01       		.byte	0x1
 1684 03f0 1B03     		.2byte	0x31b
 1685 03f2 6B000000 		.4byte	0x6b
 1686 03f6 02       		.uleb128 0x2
 1687 03f7 91       		.byte	0x91
 1688 03f8 76       		.sleb128 -10
 1689 03f9 00       		.byte	0
 1690 03fa 0E       		.uleb128 0xe
 1691 03fb D3000000 		.4byte	.LASF42
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 65


 1692 03ff 01       		.byte	0x1
 1693 0400 8E07     		.2byte	0x78e
 1694 0402 76000000 		.4byte	0x76
 1695 0406 00000000 		.4byte	.LFB11
 1696 040a 38000000 		.4byte	.LFE11-.LFB11
 1697 040e 01       		.uleb128 0x1
 1698 040f 9C       		.byte	0x9c
 1699 0410 40040000 		.4byte	0x440
 1700 0414 11       		.uleb128 0x11
 1701 0415 783100   		.ascii	"x1\000"
 1702 0418 01       		.byte	0x1
 1703 0419 8E07     		.2byte	0x78e
 1704 041b 76000000 		.4byte	0x76
 1705 041f 02       		.uleb128 0x2
 1706 0420 91       		.byte	0x91
 1707 0421 6E       		.sleb128 -18
 1708 0422 11       		.uleb128 0x11
 1709 0423 783200   		.ascii	"x2\000"
 1710 0426 01       		.byte	0x1
 1711 0427 8E07     		.2byte	0x78e
 1712 0429 76000000 		.4byte	0x76
 1713 042d 02       		.uleb128 0x2
 1714 042e 91       		.byte	0x91
 1715 042f 6C       		.sleb128 -20
 1716 0430 0B       		.uleb128 0xb
 1717 0431 746D7000 		.ascii	"tmp\000"
 1718 0435 01       		.byte	0x1
 1719 0436 9107     		.2byte	0x791
 1720 0438 81000000 		.4byte	0x81
 1721 043c 02       		.uleb128 0x2
 1722 043d 91       		.byte	0x91
 1723 043e 74       		.sleb128 -12
 1724 043f 00       		.byte	0
 1725 0440 12       		.uleb128 0x12
 1726 0441 76000000 		.4byte	0x76
 1727 0445 50040000 		.4byte	0x450
 1728 0449 13       		.uleb128 0x13
 1729 044a A1000000 		.4byte	0xa1
 1730 044e 00       		.byte	0
 1731 044f 00       		.byte	0
 1732 0450 14       		.uleb128 0x14
 1733 0451 B1030000 		.4byte	.LASF43
 1734 0455 03       		.byte	0x3
 1735 0456 B902     		.2byte	0x2b9
 1736 0458 40040000 		.4byte	0x440
 1737 045c 15       		.uleb128 0x15
 1738 045d 66040000 		.4byte	.LASF44
 1739 0461 01       		.byte	0x1
 1740 0462 21       		.byte	0x21
 1741 0463 40040000 		.4byte	0x440
 1742 0467 05       		.uleb128 0x5
 1743 0468 03       		.byte	0x3
 1744 0469 00000000 		.4byte	CapSense_CSD_rawFilterData1
 1745 046d 12       		.uleb128 0x12
 1746 046e 6B000000 		.4byte	0x6b
 1747 0472 7D040000 		.4byte	0x47d
 1748 0476 13       		.uleb128 0x13
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 66


 1749 0477 A1000000 		.4byte	0xa1
 1750 047b 00       		.byte	0
 1751 047c 00       		.byte	0
 1752 047d 14       		.uleb128 0x14
 1753 047e 68020000 		.4byte	.LASF45
 1754 0482 04       		.byte	0x4
 1755 0483 0301     		.2byte	0x103
 1756 0485 6D040000 		.4byte	0x46d
 1757 0489 14       		.uleb128 0x14
 1758 048a 4E010000 		.4byte	.LASF46
 1759 048e 04       		.byte	0x4
 1760 048f 0401     		.2byte	0x104
 1761 0491 95040000 		.4byte	0x495
 1762 0495 16       		.uleb128 0x16
 1763 0496 6D040000 		.4byte	0x46d
 1764 049a 15       		.uleb128 0x15
 1765 049b 9D010000 		.4byte	.LASF47
 1766 049f 01       		.byte	0x1
 1767 04a0 29       		.byte	0x29
 1768 04a1 40040000 		.4byte	0x440
 1769 04a5 05       		.uleb128 0x5
 1770 04a6 03       		.byte	0x3
 1771 04a7 00000000 		.4byte	CapSense_CSD_sensorBaseline
 1772 04ab 15       		.uleb128 0x15
 1773 04ac 34050000 		.4byte	.LASF48
 1774 04b0 01       		.byte	0x1
 1775 04b1 2A       		.byte	0x2a
 1776 04b2 6D040000 		.4byte	0x46d
 1777 04b6 05       		.uleb128 0x5
 1778 04b7 03       		.byte	0x3
 1779 04b8 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 1780 04bc 15       		.uleb128 0x15
 1781 04bd EE010000 		.4byte	.LASF49
 1782 04c1 01       		.byte	0x1
 1783 04c2 2B       		.byte	0x2b
 1784 04c3 6D040000 		.4byte	0x46d
 1785 04c7 05       		.uleb128 0x5
 1786 04c8 03       		.byte	0x3
 1787 04c9 00000000 		.4byte	CapSense_CSD_sensorSignal
 1788 04cd 15       		.uleb128 0x15
 1789 04ce 76050000 		.4byte	.LASF50
 1790 04d2 01       		.byte	0x1
 1791 04d3 2C       		.byte	0x2c
 1792 04d4 6D040000 		.4byte	0x46d
 1793 04d8 05       		.uleb128 0x5
 1794 04d9 03       		.byte	0x3
 1795 04da 00000000 		.4byte	CapSense_CSD_sensorOnMask
 1796 04de 15       		.uleb128 0x15
 1797 04df 1A030000 		.4byte	.LASF51
 1798 04e3 01       		.byte	0x1
 1799 04e4 2E       		.byte	0x2e
 1800 04e5 6D040000 		.4byte	0x46d
 1801 04e9 05       		.uleb128 0x5
 1802 04ea 03       		.byte	0x3
 1803 04eb 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 1804 04ef 15       		.uleb128 0x15
 1805 04f0 5F030000 		.4byte	.LASF52
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 67


 1806 04f4 01       		.byte	0x1
 1807 04f5 30       		.byte	0x30
 1808 04f6 6D040000 		.4byte	0x46d
 1809 04fa 05       		.uleb128 0x5
 1810 04fb 03       		.byte	0x3
 1811 04fc 00000000 		.4byte	CapSense_CSD_fingerThreshold
 1812 0500 15       		.uleb128 0x15
 1813 0501 07040000 		.4byte	.LASF53
 1814 0505 01       		.byte	0x1
 1815 0506 34       		.byte	0x34
 1816 0507 6D040000 		.4byte	0x46d
 1817 050b 05       		.uleb128 0x5
 1818 050c 03       		.byte	0x3
 1819 050d 00000000 		.4byte	CapSense_CSD_noiseThreshold
 1820 0511 15       		.uleb128 0x15
 1821 0512 82040000 		.4byte	.LASF54
 1822 0516 01       		.byte	0x1
 1823 0517 38       		.byte	0x38
 1824 0518 6D040000 		.4byte	0x46d
 1825 051c 05       		.uleb128 0x5
 1826 051d 03       		.byte	0x3
 1827 051e 00000000 		.4byte	CapSense_CSD_hysteresis
 1828 0522 15       		.uleb128 0x15
 1829 0523 B9010000 		.4byte	.LASF55
 1830 0527 01       		.byte	0x1
 1831 0528 3C       		.byte	0x3c
 1832 0529 6D040000 		.4byte	0x46d
 1833 052d 05       		.uleb128 0x5
 1834 052e 03       		.byte	0x3
 1835 052f 00000000 		.4byte	CapSense_CSD_debounce
 1836 0533 12       		.uleb128 0x12
 1837 0534 6B000000 		.4byte	0x6b
 1838 0538 43050000 		.4byte	0x543
 1839 053c 13       		.uleb128 0x13
 1840 053d A1000000 		.4byte	0xa1
 1841 0541 01       		.byte	0x1
 1842 0542 00       		.byte	0
 1843 0543 15       		.uleb128 0x15
 1844 0544 00000000 		.4byte	.LASF56
 1845 0548 01       		.byte	0x1
 1846 0549 40       		.byte	0x40
 1847 054a 33050000 		.4byte	0x533
 1848 054e 05       		.uleb128 0x5
 1849 054f 03       		.byte	0x3
 1850 0550 00000000 		.4byte	CapSense_CSD_debounceCounter
 1851 0554 15       		.uleb128 0x15
 1852 0555 1A050000 		.4byte	.LASF57
 1853 0559 01       		.byte	0x1
 1854 055a 44       		.byte	0x44
 1855 055b 65050000 		.4byte	0x565
 1856 055f 05       		.uleb128 0x5
 1857 0560 03       		.byte	0x3
 1858 0561 00000000 		.4byte	CapSense_CSD_rawDataIndex
 1859 0565 16       		.uleb128 0x16
 1860 0566 6D040000 		.4byte	0x46d
 1861 056a 15       		.uleb128 0x15
 1862 056b EA030000 		.4byte	.LASF58
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 68


 1863 056f 01       		.byte	0x1
 1864 0570 49       		.byte	0x49
 1865 0571 7B050000 		.4byte	0x57b
 1866 0575 05       		.uleb128 0x5
 1867 0576 03       		.byte	0x3
 1868 0577 00000000 		.4byte	CapSense_CSD_numberOfSensors
 1869 057b 16       		.uleb128 0x16
 1870 057c 6D040000 		.4byte	0x46d
 1871 0580 00       		.byte	0
 1872              		.section	.debug_abbrev,"",%progbits
 1873              	.Ldebug_abbrev0:
 1874 0000 01       		.uleb128 0x1
 1875 0001 11       		.uleb128 0x11
 1876 0002 01       		.byte	0x1
 1877 0003 25       		.uleb128 0x25
 1878 0004 0E       		.uleb128 0xe
 1879 0005 13       		.uleb128 0x13
 1880 0006 0B       		.uleb128 0xb
 1881 0007 03       		.uleb128 0x3
 1882 0008 0E       		.uleb128 0xe
 1883 0009 1B       		.uleb128 0x1b
 1884 000a 0E       		.uleb128 0xe
 1885 000b 55       		.uleb128 0x55
 1886 000c 17       		.uleb128 0x17
 1887 000d 11       		.uleb128 0x11
 1888 000e 01       		.uleb128 0x1
 1889 000f 10       		.uleb128 0x10
 1890 0010 17       		.uleb128 0x17
 1891 0011 00       		.byte	0
 1892 0012 00       		.byte	0
 1893 0013 02       		.uleb128 0x2
 1894 0014 24       		.uleb128 0x24
 1895 0015 00       		.byte	0
 1896 0016 0B       		.uleb128 0xb
 1897 0017 0B       		.uleb128 0xb
 1898 0018 3E       		.uleb128 0x3e
 1899 0019 0B       		.uleb128 0xb
 1900 001a 03       		.uleb128 0x3
 1901 001b 0E       		.uleb128 0xe
 1902 001c 00       		.byte	0
 1903 001d 00       		.byte	0
 1904 001e 03       		.uleb128 0x3
 1905 001f 24       		.uleb128 0x24
 1906 0020 00       		.byte	0
 1907 0021 0B       		.uleb128 0xb
 1908 0022 0B       		.uleb128 0xb
 1909 0023 3E       		.uleb128 0x3e
 1910 0024 0B       		.uleb128 0xb
 1911 0025 03       		.uleb128 0x3
 1912 0026 08       		.uleb128 0x8
 1913 0027 00       		.byte	0
 1914 0028 00       		.byte	0
 1915 0029 04       		.uleb128 0x4
 1916 002a 16       		.uleb128 0x16
 1917 002b 00       		.byte	0
 1918 002c 03       		.uleb128 0x3
 1919 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 69


 1920 002e 3A       		.uleb128 0x3a
 1921 002f 0B       		.uleb128 0xb
 1922 0030 3B       		.uleb128 0x3b
 1923 0031 0B       		.uleb128 0xb
 1924 0032 49       		.uleb128 0x49
 1925 0033 13       		.uleb128 0x13
 1926 0034 00       		.byte	0
 1927 0035 00       		.byte	0
 1928 0036 05       		.uleb128 0x5
 1929 0037 2E       		.uleb128 0x2e
 1930 0038 01       		.byte	0x1
 1931 0039 3F       		.uleb128 0x3f
 1932 003a 19       		.uleb128 0x19
 1933 003b 03       		.uleb128 0x3
 1934 003c 0E       		.uleb128 0xe
 1935 003d 3A       		.uleb128 0x3a
 1936 003e 0B       		.uleb128 0xb
 1937 003f 3B       		.uleb128 0x3b
 1938 0040 0B       		.uleb128 0xb
 1939 0041 27       		.uleb128 0x27
 1940 0042 19       		.uleb128 0x19
 1941 0043 11       		.uleb128 0x11
 1942 0044 01       		.uleb128 0x1
 1943 0045 12       		.uleb128 0x12
 1944 0046 06       		.uleb128 0x6
 1945 0047 40       		.uleb128 0x40
 1946 0048 18       		.uleb128 0x18
 1947 0049 9742     		.uleb128 0x2117
 1948 004b 19       		.uleb128 0x19
 1949 004c 01       		.uleb128 0x1
 1950 004d 13       		.uleb128 0x13
 1951 004e 00       		.byte	0
 1952 004f 00       		.byte	0
 1953 0050 06       		.uleb128 0x6
 1954 0051 05       		.uleb128 0x5
 1955 0052 00       		.byte	0
 1956 0053 03       		.uleb128 0x3
 1957 0054 0E       		.uleb128 0xe
 1958 0055 3A       		.uleb128 0x3a
 1959 0056 0B       		.uleb128 0xb
 1960 0057 3B       		.uleb128 0x3b
 1961 0058 0B       		.uleb128 0xb
 1962 0059 49       		.uleb128 0x49
 1963 005a 13       		.uleb128 0x13
 1964 005b 02       		.uleb128 0x2
 1965 005c 18       		.uleb128 0x18
 1966 005d 00       		.byte	0
 1967 005e 00       		.byte	0
 1968 005f 07       		.uleb128 0x7
 1969 0060 34       		.uleb128 0x34
 1970 0061 00       		.byte	0
 1971 0062 03       		.uleb128 0x3
 1972 0063 0E       		.uleb128 0xe
 1973 0064 3A       		.uleb128 0x3a
 1974 0065 0B       		.uleb128 0xb
 1975 0066 3B       		.uleb128 0x3b
 1976 0067 0B       		.uleb128 0xb
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 70


 1977 0068 49       		.uleb128 0x49
 1978 0069 13       		.uleb128 0x13
 1979 006a 02       		.uleb128 0x2
 1980 006b 18       		.uleb128 0x18
 1981 006c 00       		.byte	0
 1982 006d 00       		.byte	0
 1983 006e 08       		.uleb128 0x8
 1984 006f 2E       		.uleb128 0x2e
 1985 0070 01       		.byte	0x1
 1986 0071 3F       		.uleb128 0x3f
 1987 0072 19       		.uleb128 0x19
 1988 0073 03       		.uleb128 0x3
 1989 0074 0E       		.uleb128 0xe
 1990 0075 3A       		.uleb128 0x3a
 1991 0076 0B       		.uleb128 0xb
 1992 0077 3B       		.uleb128 0x3b
 1993 0078 0B       		.uleb128 0xb
 1994 0079 27       		.uleb128 0x27
 1995 007a 19       		.uleb128 0x19
 1996 007b 11       		.uleb128 0x11
 1997 007c 01       		.uleb128 0x1
 1998 007d 12       		.uleb128 0x12
 1999 007e 06       		.uleb128 0x6
 2000 007f 40       		.uleb128 0x40
 2001 0080 18       		.uleb128 0x18
 2002 0081 9642     		.uleb128 0x2116
 2003 0083 19       		.uleb128 0x19
 2004 0084 01       		.uleb128 0x1
 2005 0085 13       		.uleb128 0x13
 2006 0086 00       		.byte	0
 2007 0087 00       		.byte	0
 2008 0088 09       		.uleb128 0x9
 2009 0089 34       		.uleb128 0x34
 2010 008a 00       		.byte	0
 2011 008b 03       		.uleb128 0x3
 2012 008c 08       		.uleb128 0x8
 2013 008d 3A       		.uleb128 0x3a
 2014 008e 0B       		.uleb128 0xb
 2015 008f 3B       		.uleb128 0x3b
 2016 0090 0B       		.uleb128 0xb
 2017 0091 49       		.uleb128 0x49
 2018 0092 13       		.uleb128 0x13
 2019 0093 02       		.uleb128 0x2
 2020 0094 18       		.uleb128 0x18
 2021 0095 00       		.byte	0
 2022 0096 00       		.byte	0
 2023 0097 0A       		.uleb128 0xa
 2024 0098 2E       		.uleb128 0x2e
 2025 0099 01       		.byte	0x1
 2026 009a 3F       		.uleb128 0x3f
 2027 009b 19       		.uleb128 0x19
 2028 009c 03       		.uleb128 0x3
 2029 009d 0E       		.uleb128 0xe
 2030 009e 3A       		.uleb128 0x3a
 2031 009f 0B       		.uleb128 0xb
 2032 00a0 3B       		.uleb128 0x3b
 2033 00a1 05       		.uleb128 0x5
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 71


 2034 00a2 27       		.uleb128 0x27
 2035 00a3 19       		.uleb128 0x19
 2036 00a4 11       		.uleb128 0x11
 2037 00a5 01       		.uleb128 0x1
 2038 00a6 12       		.uleb128 0x12
 2039 00a7 06       		.uleb128 0x6
 2040 00a8 40       		.uleb128 0x40
 2041 00a9 18       		.uleb128 0x18
 2042 00aa 9642     		.uleb128 0x2116
 2043 00ac 19       		.uleb128 0x19
 2044 00ad 01       		.uleb128 0x1
 2045 00ae 13       		.uleb128 0x13
 2046 00af 00       		.byte	0
 2047 00b0 00       		.byte	0
 2048 00b1 0B       		.uleb128 0xb
 2049 00b2 34       		.uleb128 0x34
 2050 00b3 00       		.byte	0
 2051 00b4 03       		.uleb128 0x3
 2052 00b5 08       		.uleb128 0x8
 2053 00b6 3A       		.uleb128 0x3a
 2054 00b7 0B       		.uleb128 0xb
 2055 00b8 3B       		.uleb128 0x3b
 2056 00b9 05       		.uleb128 0x5
 2057 00ba 49       		.uleb128 0x49
 2058 00bb 13       		.uleb128 0x13
 2059 00bc 02       		.uleb128 0x2
 2060 00bd 18       		.uleb128 0x18
 2061 00be 00       		.byte	0
 2062 00bf 00       		.byte	0
 2063 00c0 0C       		.uleb128 0xc
 2064 00c1 34       		.uleb128 0x34
 2065 00c2 00       		.byte	0
 2066 00c3 03       		.uleb128 0x3
 2067 00c4 0E       		.uleb128 0xe
 2068 00c5 3A       		.uleb128 0x3a
 2069 00c6 0B       		.uleb128 0xb
 2070 00c7 3B       		.uleb128 0x3b
 2071 00c8 05       		.uleb128 0x5
 2072 00c9 49       		.uleb128 0x49
 2073 00ca 13       		.uleb128 0x13
 2074 00cb 02       		.uleb128 0x2
 2075 00cc 18       		.uleb128 0x18
 2076 00cd 00       		.byte	0
 2077 00ce 00       		.byte	0
 2078 00cf 0D       		.uleb128 0xd
 2079 00d0 05       		.uleb128 0x5
 2080 00d1 00       		.byte	0
 2081 00d2 03       		.uleb128 0x3
 2082 00d3 0E       		.uleb128 0xe
 2083 00d4 3A       		.uleb128 0x3a
 2084 00d5 0B       		.uleb128 0xb
 2085 00d6 3B       		.uleb128 0x3b
 2086 00d7 05       		.uleb128 0x5
 2087 00d8 49       		.uleb128 0x49
 2088 00d9 13       		.uleb128 0x13
 2089 00da 02       		.uleb128 0x2
 2090 00db 18       		.uleb128 0x18
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 72


 2091 00dc 00       		.byte	0
 2092 00dd 00       		.byte	0
 2093 00de 0E       		.uleb128 0xe
 2094 00df 2E       		.uleb128 0x2e
 2095 00e0 01       		.byte	0x1
 2096 00e1 3F       		.uleb128 0x3f
 2097 00e2 19       		.uleb128 0x19
 2098 00e3 03       		.uleb128 0x3
 2099 00e4 0E       		.uleb128 0xe
 2100 00e5 3A       		.uleb128 0x3a
 2101 00e6 0B       		.uleb128 0xb
 2102 00e7 3B       		.uleb128 0x3b
 2103 00e8 05       		.uleb128 0x5
 2104 00e9 27       		.uleb128 0x27
 2105 00ea 19       		.uleb128 0x19
 2106 00eb 49       		.uleb128 0x49
 2107 00ec 13       		.uleb128 0x13
 2108 00ed 11       		.uleb128 0x11
 2109 00ee 01       		.uleb128 0x1
 2110 00ef 12       		.uleb128 0x12
 2111 00f0 06       		.uleb128 0x6
 2112 00f1 40       		.uleb128 0x40
 2113 00f2 18       		.uleb128 0x18
 2114 00f3 9742     		.uleb128 0x2117
 2115 00f5 19       		.uleb128 0x19
 2116 00f6 01       		.uleb128 0x1
 2117 00f7 13       		.uleb128 0x13
 2118 00f8 00       		.byte	0
 2119 00f9 00       		.byte	0
 2120 00fa 0F       		.uleb128 0xf
 2121 00fb 2E       		.uleb128 0x2e
 2122 00fc 01       		.byte	0x1
 2123 00fd 3F       		.uleb128 0x3f
 2124 00fe 19       		.uleb128 0x19
 2125 00ff 03       		.uleb128 0x3
 2126 0100 0E       		.uleb128 0xe
 2127 0101 3A       		.uleb128 0x3a
 2128 0102 0B       		.uleb128 0xb
 2129 0103 3B       		.uleb128 0x3b
 2130 0104 05       		.uleb128 0x5
 2131 0105 27       		.uleb128 0x27
 2132 0106 19       		.uleb128 0x19
 2133 0107 49       		.uleb128 0x49
 2134 0108 13       		.uleb128 0x13
 2135 0109 11       		.uleb128 0x11
 2136 010a 01       		.uleb128 0x1
 2137 010b 12       		.uleb128 0x12
 2138 010c 06       		.uleb128 0x6
 2139 010d 40       		.uleb128 0x40
 2140 010e 18       		.uleb128 0x18
 2141 010f 9642     		.uleb128 0x2116
 2142 0111 19       		.uleb128 0x19
 2143 0112 01       		.uleb128 0x1
 2144 0113 13       		.uleb128 0x13
 2145 0114 00       		.byte	0
 2146 0115 00       		.byte	0
 2147 0116 10       		.uleb128 0x10
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 73


 2148 0117 2E       		.uleb128 0x2e
 2149 0118 01       		.byte	0x1
 2150 0119 3F       		.uleb128 0x3f
 2151 011a 19       		.uleb128 0x19
 2152 011b 03       		.uleb128 0x3
 2153 011c 0E       		.uleb128 0xe
 2154 011d 3A       		.uleb128 0x3a
 2155 011e 0B       		.uleb128 0xb
 2156 011f 3B       		.uleb128 0x3b
 2157 0120 05       		.uleb128 0x5
 2158 0121 27       		.uleb128 0x27
 2159 0122 19       		.uleb128 0x19
 2160 0123 11       		.uleb128 0x11
 2161 0124 01       		.uleb128 0x1
 2162 0125 12       		.uleb128 0x12
 2163 0126 06       		.uleb128 0x6
 2164 0127 40       		.uleb128 0x40
 2165 0128 18       		.uleb128 0x18
 2166 0129 9742     		.uleb128 0x2117
 2167 012b 19       		.uleb128 0x19
 2168 012c 01       		.uleb128 0x1
 2169 012d 13       		.uleb128 0x13
 2170 012e 00       		.byte	0
 2171 012f 00       		.byte	0
 2172 0130 11       		.uleb128 0x11
 2173 0131 05       		.uleb128 0x5
 2174 0132 00       		.byte	0
 2175 0133 03       		.uleb128 0x3
 2176 0134 08       		.uleb128 0x8
 2177 0135 3A       		.uleb128 0x3a
 2178 0136 0B       		.uleb128 0xb
 2179 0137 3B       		.uleb128 0x3b
 2180 0138 05       		.uleb128 0x5
 2181 0139 49       		.uleb128 0x49
 2182 013a 13       		.uleb128 0x13
 2183 013b 02       		.uleb128 0x2
 2184 013c 18       		.uleb128 0x18
 2185 013d 00       		.byte	0
 2186 013e 00       		.byte	0
 2187 013f 12       		.uleb128 0x12
 2188 0140 01       		.uleb128 0x1
 2189 0141 01       		.byte	0x1
 2190 0142 49       		.uleb128 0x49
 2191 0143 13       		.uleb128 0x13
 2192 0144 01       		.uleb128 0x1
 2193 0145 13       		.uleb128 0x13
 2194 0146 00       		.byte	0
 2195 0147 00       		.byte	0
 2196 0148 13       		.uleb128 0x13
 2197 0149 21       		.uleb128 0x21
 2198 014a 00       		.byte	0
 2199 014b 49       		.uleb128 0x49
 2200 014c 13       		.uleb128 0x13
 2201 014d 2F       		.uleb128 0x2f
 2202 014e 0B       		.uleb128 0xb
 2203 014f 00       		.byte	0
 2204 0150 00       		.byte	0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 74


 2205 0151 14       		.uleb128 0x14
 2206 0152 34       		.uleb128 0x34
 2207 0153 00       		.byte	0
 2208 0154 03       		.uleb128 0x3
 2209 0155 0E       		.uleb128 0xe
 2210 0156 3A       		.uleb128 0x3a
 2211 0157 0B       		.uleb128 0xb
 2212 0158 3B       		.uleb128 0x3b
 2213 0159 05       		.uleb128 0x5
 2214 015a 49       		.uleb128 0x49
 2215 015b 13       		.uleb128 0x13
 2216 015c 3F       		.uleb128 0x3f
 2217 015d 19       		.uleb128 0x19
 2218 015e 3C       		.uleb128 0x3c
 2219 015f 19       		.uleb128 0x19
 2220 0160 00       		.byte	0
 2221 0161 00       		.byte	0
 2222 0162 15       		.uleb128 0x15
 2223 0163 34       		.uleb128 0x34
 2224 0164 00       		.byte	0
 2225 0165 03       		.uleb128 0x3
 2226 0166 0E       		.uleb128 0xe
 2227 0167 3A       		.uleb128 0x3a
 2228 0168 0B       		.uleb128 0xb
 2229 0169 3B       		.uleb128 0x3b
 2230 016a 0B       		.uleb128 0xb
 2231 016b 49       		.uleb128 0x49
 2232 016c 13       		.uleb128 0x13
 2233 016d 3F       		.uleb128 0x3f
 2234 016e 19       		.uleb128 0x19
 2235 016f 02       		.uleb128 0x2
 2236 0170 18       		.uleb128 0x18
 2237 0171 00       		.byte	0
 2238 0172 00       		.byte	0
 2239 0173 16       		.uleb128 0x16
 2240 0174 26       		.uleb128 0x26
 2241 0175 00       		.byte	0
 2242 0176 49       		.uleb128 0x49
 2243 0177 13       		.uleb128 0x13
 2244 0178 00       		.byte	0
 2245 0179 00       		.byte	0
 2246 017a 00       		.byte	0
 2247              		.section	.debug_aranges,"",%progbits
 2248 0000 74000000 		.4byte	0x74
 2249 0004 0200     		.2byte	0x2
 2250 0006 00000000 		.4byte	.Ldebug_info0
 2251 000a 04       		.byte	0x4
 2252 000b 00       		.byte	0
 2253 000c 0000     		.2byte	0
 2254 000e 0000     		.2byte	0
 2255 0010 00000000 		.4byte	.LFB0
 2256 0014 78000000 		.4byte	.LFE0-.LFB0
 2257 0018 00000000 		.4byte	.LFB1
 2258 001c 2C000000 		.4byte	.LFE1-.LFB1
 2259 0020 00000000 		.4byte	.LFB2
 2260 0024 26000000 		.4byte	.LFE2-.LFB2
 2261 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 75


 2262 002c 6C000000 		.4byte	.LFE3-.LFB3
 2263 0030 00000000 		.4byte	.LFB4
 2264 0034 7C010000 		.4byte	.LFE4-.LFB4
 2265 0038 00000000 		.4byte	.LFB5
 2266 003c 50000000 		.4byte	.LFE5-.LFB5
 2267 0040 00000000 		.4byte	.LFB6
 2268 0044 08010000 		.4byte	.LFE6-.LFB6
 2269 0048 00000000 		.4byte	.LFB7
 2270 004c 44000000 		.4byte	.LFE7-.LFB7
 2271 0050 00000000 		.4byte	.LFB8
 2272 0054 38000000 		.4byte	.LFE8-.LFB8
 2273 0058 00000000 		.4byte	.LFB9
 2274 005c 58000000 		.4byte	.LFE9-.LFB9
 2275 0060 00000000 		.4byte	.LFB10
 2276 0064 5C000000 		.4byte	.LFE10-.LFB10
 2277 0068 00000000 		.4byte	.LFB11
 2278 006c 38000000 		.4byte	.LFE11-.LFB11
 2279 0070 00000000 		.4byte	0
 2280 0074 00000000 		.4byte	0
 2281              		.section	.debug_ranges,"",%progbits
 2282              	.Ldebug_ranges0:
 2283 0000 00000000 		.4byte	.LFB0
 2284 0004 78000000 		.4byte	.LFE0
 2285 0008 00000000 		.4byte	.LFB1
 2286 000c 2C000000 		.4byte	.LFE1
 2287 0010 00000000 		.4byte	.LFB2
 2288 0014 26000000 		.4byte	.LFE2
 2289 0018 00000000 		.4byte	.LFB3
 2290 001c 6C000000 		.4byte	.LFE3
 2291 0020 00000000 		.4byte	.LFB4
 2292 0024 7C010000 		.4byte	.LFE4
 2293 0028 00000000 		.4byte	.LFB5
 2294 002c 50000000 		.4byte	.LFE5
 2295 0030 00000000 		.4byte	.LFB6
 2296 0034 08010000 		.4byte	.LFE6
 2297 0038 00000000 		.4byte	.LFB7
 2298 003c 44000000 		.4byte	.LFE7
 2299 0040 00000000 		.4byte	.LFB8
 2300 0044 38000000 		.4byte	.LFE8
 2301 0048 00000000 		.4byte	.LFB9
 2302 004c 58000000 		.4byte	.LFE9
 2303 0050 00000000 		.4byte	.LFB10
 2304 0054 5C000000 		.4byte	.LFE10
 2305 0058 00000000 		.4byte	.LFB11
 2306 005c 38000000 		.4byte	.LFE11
 2307 0060 00000000 		.4byte	0
 2308 0064 00000000 		.4byte	0
 2309              		.section	.debug_line,"",%progbits
 2310              	.Ldebug_line0:
 2311 0000 66020000 		.section	.debug_str,"MS",%progbits,1
 2311      02007900 
 2311      00000201 
 2311      FB0E0D00 
 2311      01010101 
 2312              	.LASF56:
 2313 0000 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 2313      656E7365 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 76


 2313      5F435344 
 2313      5F646562 
 2313      6F756E63 
 2314              	.LASF10:
 2315 001d 75696E74 		.ascii	"uint16\000"
 2315      313600
 2316              	.LASF26:
 2317 0024 66696C74 		.ascii	"filteredRawData\000"
 2317      65726564 
 2317      52617744 
 2317      61746100 
 2318              	.LASF31:
 2319 0034 66696E67 		.ascii	"fingerThreshold\000"
 2319      65725468 
 2319      72657368 
 2319      6F6C6400 
 2320              	.LASF17:
 2321 0044 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2321      656E7365 
 2321      5F435344 
 2321      5F496E69 
 2321      7469616C 
 2322              	.LASF7:
 2323 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2323      206C6F6E 
 2323      6720756E 
 2323      7369676E 
 2323      65642069 
 2324              	.LASF61:
 2325 0081 433A5C55 		.ascii	"C:\\Users\\mark6\\Google Drive\\College-MIT\\S6Spri"
 2325      73657273 
 2325      5C6D6172 
 2325      6B365C47 
 2325      6F6F676C 
 2326 00af 6E673230 		.ascii	"ng2020\\6.115\\Lab5Kovid2\\RS232.cydsn\000"
 2326      32305C36 
 2326      2E313135 
 2326      5C4C6162 
 2326      354B6F76 
 2327              	.LASF42:
 2328 00d3 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 2328      656E7365 
 2328      5F435344 
 2328      5F494952 
 2328      3446696C 
 2329              	.LASF6:
 2330 00eb 6C6F6E67 		.ascii	"long long int\000"
 2330      206C6F6E 
 2330      6720696E 
 2330      7400
 2331              	.LASF0:
 2332 00f9 7369676E 		.ascii	"signed char\000"
 2332      65642063 
 2332      68617200 
 2333              	.LASF36:
 2334 0105 72617749 		.ascii	"rawIndex\000"
 2334      6E646578 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 77


 2334      00
 2335              	.LASF37:
 2336 010e 6E756D62 		.ascii	"numberOfSensors\000"
 2336      65724F66 
 2336      53656E73 
 2336      6F727300 
 2337              	.LASF34:
 2338 011e 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2338      656E7365 
 2338      5F435344 
 2338      5F436865 
 2338      636B4973 
 2339              	.LASF38:
 2340 013f 73746174 		.ascii	"state\000"
 2340      6500
 2341              	.LASF4:
 2342 0145 6C6F6E67 		.ascii	"long int\000"
 2342      20696E74 
 2342      00
 2343              	.LASF46:
 2344 014e 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2344      656E7365 
 2344      5F435344 
 2344      5F776964 
 2344      6765744E 
 2345              	.LASF9:
 2346 0168 75696E74 		.ascii	"uint8\000"
 2346      3800
 2347              	.LASF13:
 2348 016e 646F7562 		.ascii	"double\000"
 2348      6C6500
 2349              	.LASF11:
 2350 0175 75696E74 		.ascii	"uint32\000"
 2350      333200
 2351              	.LASF32:
 2352 017c 68797374 		.ascii	"hysteresis\000"
 2352      65726573 
 2352      697300
 2353              	.LASF16:
 2354 0187 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 2354      656E7365 
 2354      5F435344 
 2354      5F426173 
 2354      65496E69 
 2355              	.LASF47:
 2356 019d 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 2356      656E7365 
 2356      5F435344 
 2356      5F73656E 
 2356      736F7242 
 2357              	.LASF55:
 2358 01b9 43617053 		.ascii	"CapSense_CSD_debounce\000"
 2358      656E7365 
 2358      5F435344 
 2358      5F646562 
 2358      6F756E63 
 2359              	.LASF8:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 78


 2360 01cf 756E7369 		.ascii	"unsigned int\000"
 2360      676E6564 
 2360      20696E74 
 2360      00
 2361              	.LASF5:
 2362 01dc 6C6F6E67 		.ascii	"long unsigned int\000"
 2362      20756E73 
 2362      69676E65 
 2362      6420696E 
 2362      7400
 2363              	.LASF49:
 2364 01ee 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 2364      656E7365 
 2364      5F435344 
 2364      5F73656E 
 2364      736F7253 
 2365              	.LASF3:
 2366 0208 73686F72 		.ascii	"short unsigned int\000"
 2366      7420756E 
 2366      7369676E 
 2366      65642069 
 2366      6E7400
 2367              	.LASF18:
 2368 021b 73656E73 		.ascii	"sensor\000"
 2368      6F7200
 2369              	.LASF24:
 2370 0222 63616C63 		.ascii	"calc\000"
 2370      00
 2371              	.LASF33:
 2372 0227 6465626F 		.ascii	"debounce\000"
 2372      756E6365 
 2372      00
 2373              	.LASF15:
 2374 0230 73697A65 		.ascii	"sizetype\000"
 2374      74797065 
 2374      00
 2375              	.LASF21:
 2376 0239 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 2376      656E7365 
 2376      5F435344 
 2376      5F496E69 
 2376      7469616C 
 2377              	.LASF22:
 2378 0261 656E4D61 		.ascii	"enMask\000"
 2378      736B00
 2379              	.LASF45:
 2380 0268 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2380      656E7365 
 2380      5F435344 
 2380      5F73656E 
 2380      736F7245 
 2381              	.LASF59:
 2382 0286 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2382      4320342E 
 2382      392E3320 
 2382      32303135 
 2382      30333033 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 79


 2383 02b9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2383      20726576 
 2383      6973696F 
 2383      6E203232 
 2383      31323230 
 2384 02ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2384      66756E63 
 2384      74696F6E 
 2384      2D736563 
 2384      74696F6E 
 2385              	.LASF12:
 2386 0314 666C6F61 		.ascii	"float\000"
 2386      7400
 2387              	.LASF51:
 2388 031a 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 2388      656E7365 
 2388      5F435344 
 2388      5F6C6F77 
 2388      42617365 
 2389              	.LASF19:
 2390 033b 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 2390      656E7365 
 2390      5F435344 
 2390      5F496E69 
 2390      7469616C 
 2391              	.LASF52:
 2392 035f 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 2392      656E7365 
 2392      5F435344 
 2392      5F66696E 
 2392      67657254 
 2393              	.LASF1:
 2394 037c 756E7369 		.ascii	"unsigned char\000"
 2394      676E6564 
 2394      20636861 
 2394      7200
 2395              	.LASF27:
 2396 038a 6E6F6973 		.ascii	"noiseThreshold\000"
 2396      65546872 
 2396      6573686F 
 2396      6C6400
 2397              	.LASF2:
 2398 0399 73686F72 		.ascii	"short int\000"
 2398      7420696E 
 2398      7400
 2399              	.LASF20:
 2400 03a3 77696467 		.ascii	"widget\000"
 2400      657400
 2401              	.LASF30:
 2402 03aa 6F6E4D61 		.ascii	"onMask\000"
 2402      736B00
 2403              	.LASF43:
 2404 03b1 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2404      656E7365 
 2404      5F435344 
 2404      5F73656E 
 2404      736F7252 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 80


 2405              	.LASF23:
 2406 03c8 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 2406      656E7365 
 2406      5F435344 
 2406      5F557064 
 2406      61746553 
 2407              	.LASF58:
 2408 03ea 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 2408      656E7365 
 2408      5F435344 
 2408      5F6E756D 
 2408      6265724F 
 2409              	.LASF53:
 2410 0407 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 2410      656E7365 
 2410      5F435344 
 2410      5F6E6F69 
 2410      73655468 
 2411              	.LASF14:
 2412 0423 63686172 		.ascii	"char\000"
 2412      00
 2413              	.LASF40:
 2414 0428 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 2414      656E7365 
 2414      5F435344 
 2414      5F456E61 
 2414      626C6557 
 2415              	.LASF28:
 2416 0442 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 2416      656E7365 
 2416      5F435344 
 2416      5F557064 
 2416      61746545 
 2417              	.LASF44:
 2418 0466 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 2418      656E7365 
 2418      5F435344 
 2418      5F726177 
 2418      46696C74 
 2419              	.LASF54:
 2420 0482 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 2420      656E7365 
 2420      5F435344 
 2420      5F687973 
 2420      74657265 
 2421              	.LASF29:
 2422 049a 6465626F 		.ascii	"debounceIndex\000"
 2422      756E6365 
 2422      496E6465 
 2422      7800
 2423              	.LASF39:
 2424 04a8 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 2424      656E7365 
 2424      5F435344 
 2424      5F436865 
 2424      636B4973 
 2425              	.LASF35:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\ccRowwUe.s 			page 81


 2426 04cc 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 2426      656E7365 
 2426      5F435344 
 2426      5F436865 
 2426      636B4973 
 2427              	.LASF60:
 2428 04ed 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 2428      6E657261 
 2428      7465645F 
 2428      536F7572 
 2428      63655C50 
 2429              	.LASF57:
 2430 051a 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 2430      656E7365 
 2430      5F435344 
 2430      5F726177 
 2430      44617461 
 2431              	.LASF48:
 2432 0534 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 2432      656E7365 
 2432      5F435344 
 2432      5F73656E 
 2432      736F7242 
 2433              	.LASF25:
 2434 0553 74656D70 		.ascii	"tempRaw\000"
 2434      52617700 
 2435              	.LASF41:
 2436 055b 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 2436      656E7365 
 2436      5F435344 
 2436      5F446973 
 2436      61626C65 
 2437              	.LASF50:
 2438 0576 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 2438      656E7365 
 2438      5F435344 
 2438      5F73656E 
 2438      736F724F 
 2439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
