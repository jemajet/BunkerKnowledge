ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_rawFilterData1,4,4
  19              		.comm	CapSense_sensorBaseline,4,4
  20              		.comm	CapSense_sensorBaselineLow,2,4
  21              		.comm	CapSense_sensorSignal,2,4
  22              		.comm	CapSense_sensorOnMask,1,4
  23              		.comm	CapSense_lowBaselineResetCnt,2,4
  24              		.global	CapSense_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_fingerThreshold, %object
  28              		.size	CapSense_fingerThreshold, 2
  29              	CapSense_fingerThreshold:
  30 0000 64       		.byte	100
  31 0001 64       		.byte	100
  32              		.global	CapSense_noiseThreshold
  33 0002 0000     		.align	2
  34              		.type	CapSense_noiseThreshold, %object
  35              		.size	CapSense_noiseThreshold, 2
  36              	CapSense_noiseThreshold:
  37 0004 14       		.byte	20
  38 0005 14       		.byte	20
  39              		.global	CapSense_hysteresis
  40 0006 0000     		.align	2
  41              		.type	CapSense_hysteresis, %object
  42              		.size	CapSense_hysteresis, 2
  43              	CapSense_hysteresis:
  44 0008 0A       		.byte	10
  45 0009 0A       		.byte	10
  46              		.global	CapSense_debounce
  47 000a 0000     		.align	2
  48              		.type	CapSense_debounce, %object
  49              		.size	CapSense_debounce, 2
  50              	CapSense_debounce:
  51 000c 01       		.byte	1
  52 000d 01       		.byte	1
  53              		.global	CapSense_debounceCounter
  54 000e 0000     		.bss
  55              		.align	2
  56              		.type	CapSense_debounceCounter, %object
  57              		.size	CapSense_debounceCounter, 3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 2


  58              	CapSense_debounceCounter:
  59 0000 000000   		.space	3
  60              		.global	CapSense_rawDataIndex
  61 0003 00       		.section	.rodata
  62              		.align	2
  63              		.type	CapSense_rawDataIndex, %object
  64              		.size	CapSense_rawDataIndex, 2
  65              	CapSense_rawDataIndex:
  66 0000 00       		.byte	0
  67 0001 01       		.byte	1
  68              		.global	CapSense_numberOfSensors
  69 0002 0000     		.align	2
  70              		.type	CapSense_numberOfSensors, %object
  71              		.size	CapSense_numberOfSensors, 2
  72              	CapSense_numberOfSensors:
  73 0004 01       		.byte	1
  74 0005 01       		.byte	1
  75 0006 0000     		.section	.text.CapSense_BaseInit,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_BaseInit
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_BaseInit, %function
  81              	CapSense_BaseInit:
  82              	.LFB0:
  83              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 3


  32:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, 10u, 
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 4


  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
  84              		.loc 1 124 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0346     		mov	r3, r0
  97 0008 FB71     		strb	r3, [r7, #7]
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  98              		.loc 1 127 0
  99 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 100 000c 124A     		ldr	r2, .L2
 101 000e D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 5


 102 0010 FB73     		strb	r3, [r7, #15]
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 103              		.loc 1 141 0
 104 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 105 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 106 0016 1149     		ldr	r1, .L2+4
 107 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 108 001c 104A     		ldr	r2, .L2+8
 109 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 110              		.loc 1 142 0
 111 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 112 0024 0F4A     		ldr	r2, .L2+12
 113 0026 0021     		movs	r1, #0
 114 0028 D154     		strb	r1, [r2, r3]
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 115              		.loc 1 143 0
 116 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117 002c 0E4A     		ldr	r2, .L2+16
 118 002e 0021     		movs	r1, #0
 119 0030 D154     		strb	r1, [r2, r3]
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 120              		.loc 1 145 0
 121 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 122 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 123 0036 0D49     		ldr	r1, .L2+20
 124 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 125 003a 0D4A     		ldr	r2, .L2+24
 126 003c D154     		strb	r1, [r2, r3]
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 6


 160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 127              		.loc 1 160 0
 128 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 129 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 130 0042 0649     		ldr	r1, .L2+4
 131 0044 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 132 0048 0A4A     		ldr	r2, .L2+28
 133 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 134              		.loc 1 172 0
 135 004e 1437     		adds	r7, r7, #20
 136              		.cfi_def_cfa_offset 4
 137 0050 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 0052 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 0056 7047     		bx	lr
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0058 00000000 		.word	CapSense_widgetNumber
 148 005c 00000000 		.word	CapSense_sensorRaw
 149 0060 00000000 		.word	CapSense_sensorBaseline
 150 0064 00000000 		.word	CapSense_sensorBaselineLow
 151 0068 00000000 		.word	CapSense_sensorSignal
 152 006c 00000000 		.word	CapSense_debounce
 153 0070 00000000 		.word	CapSense_debounceCounter
 154 0074 00000000 		.word	CapSense_rawFilterData1
 155              		.cfi_endproc
 156              	.LFE0:
 157              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 158              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 159              		.align	2
 160              		.global	CapSense_InitializeSensorBaseline
 161              		.thumb
 162              		.thumb_func
 163              		.type	CapSense_InitializeSensorBaseline, %function
 164              	CapSense_InitializeSensorBaseline:
 165              	.LFB1:
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 7


 178:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 194:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 166              		.loc 1 198 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 8
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 82B0     		sub	sp, sp, #8
 175              		.cfi_def_cfa_offset 16
 176 0004 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 178 0006 0346     		mov	r3, r0
 179 0008 FB71     		strb	r3, [r7, #7]
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 180              		.loc 1 200 0
 181 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 182 000c 1846     		mov	r0, r3
 183 000e FFF7FEFF 		bl	CapSense_ScanSensor
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 184              		.loc 1 201 0
 185 0012 00BF     		nop
 186              	.L5:
 187              		.loc 1 201 0 is_stmt 0 discriminator 1
 188 0014 FFF7FEFF 		bl	CapSense_IsBusy
 189 0018 0346     		mov	r3, r0
 190 001a 002B     		cmp	r3, #0
 191 001c FAD1     		bne	.L5
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 8


 192              		.loc 1 208 0 is_stmt 1
 193 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 194 0020 1846     		mov	r0, r3
 195 0022 FFF7FEFF 		bl	CapSense_BaseInit
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 196              		.loc 1 225 0
 197 0026 0837     		adds	r7, r7, #8
 198              		.cfi_def_cfa_offset 8
 199 0028 BD46     		mov	sp, r7
 200              		.cfi_def_cfa_register 13
 201              		@ sp needed
 202 002a 80BD     		pop	{r7, pc}
 203              		.cfi_endproc
 204              	.LFE1:
 205              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 206              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 207              		.align	2
 208              		.global	CapSense_InitializeAllBaselines
 209              		.thumb
 210              		.thumb_func
 211              		.type	CapSense_InitializeAllBaselines, %function
 212              	CapSense_InitializeAllBaselines:
 213              	.LFB2:
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 229:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 231:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 235:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 9


 244:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 214              		.loc 1 250 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 226              		.loc 1 254 0
 227 0006 0023     		movs	r3, #0
 228 0008 FB71     		strb	r3, [r7, #7]
 229 000a 06E0     		b	.L7
 230              	.L8:
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 231              		.loc 1 256 0 discriminator 3
 232 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 000e 1846     		mov	r0, r3
 234 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 235              		.loc 1 254 0 discriminator 3
 236 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 237 0016 0133     		adds	r3, r3, #1
 238 0018 FB71     		strb	r3, [r7, #7]
 239              	.L7:
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 240              		.loc 1 254 0 is_stmt 0 discriminator 1
 241 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 001c 012B     		cmp	r3, #1
 243 001e F5D9     		bls	.L8
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 244              		.loc 1 258 0 is_stmt 1
 245 0020 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 0022 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 0024 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE2:
 253              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 10


 254 0026 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 255              		.align	2
 256              		.global	CapSense_InitializeEnabledBaselines
 257              		.thumb
 258              		.thumb_func
 259              		.type	CapSense_InitializeEnabledBaselines, %function
 260              	CapSense_InitializeEnabledBaselines:
 261              	.LFB3:
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 272:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 262              		.loc 1 283 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266 0000 80B5     		push	{r7, lr}
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 270 0002 82B0     		sub	sp, sp, #8
 271              		.cfi_def_cfa_offset 16
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 274              		.loc 1 288 0
 275 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 276              		.loc 1 289 0
 277 000a 00BF     		nop
 278              	.L10:
 279              		.loc 1 289 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 11


 280 000c FFF7FEFF 		bl	CapSense_IsBusy
 281 0010 0346     		mov	r3, r0
 282 0012 002B     		cmp	r3, #0
 283 0014 FAD1     		bne	.L10
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 284              		.loc 1 294 0 is_stmt 1
 285 0016 0023     		movs	r3, #0
 286 0018 FB71     		strb	r3, [r7, #7]
 287 001a 1DE0     		b	.L11
 288              	.L13:
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 289              		.loc 1 296 0
 290 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 291 001e DB08     		lsrs	r3, r3, #3
 292 0020 BB71     		strb	r3, [r7, #6]
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 293              		.loc 1 297 0
 294 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 295 0024 03F00703 		and	r3, r3, #7
 296 0028 0122     		movs	r2, #1
 297 002a 02FA03F3 		lsl	r3, r2, r3
 298 002e 7B71     		strb	r3, [r7, #5]
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 299              		.loc 1 300 0
 300 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 301 0032 0C4A     		ldr	r2, .L14
 302 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 303 0036 7B79     		ldrb	r3, [r7, #5]
 304 0038 1340     		ands	r3, r3, r2
 305 003a DBB2     		uxtb	r3, r3
 306 003c 002B     		cmp	r3, #0
 307 003e 04D1     		bne	.L12
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 308              		.loc 1 302 0
 309 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 310 0042 094A     		ldr	r2, .L14+4
 311 0044 0021     		movs	r1, #0
 312 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 313              	.L12:
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 314              		.loc 1 306 0 discriminator 2
 315 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 316 004c 1846     		mov	r0, r3
 317 004e FFF7FEFF 		bl	CapSense_BaseInit
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 318              		.loc 1 294 0 discriminator 2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 12


 319 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0054 0133     		adds	r3, r3, #1
 321 0056 FB71     		strb	r3, [r7, #7]
 322              	.L11:
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 323              		.loc 1 294 0 is_stmt 0 discriminator 1
 324 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 005a 012B     		cmp	r3, #1
 326 005c DED9     		bls	.L13
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 327              		.loc 1 308 0 is_stmt 1
 328 005e 0837     		adds	r7, r7, #8
 329              		.cfi_def_cfa_offset 8
 330 0060 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 0062 80BD     		pop	{r7, pc}
 334              	.L15:
 335              		.align	2
 336              	.L14:
 337 0064 00000000 		.word	CapSense_sensorEnableMask
 338 0068 00000000 		.word	CapSense_sensorRaw
 339              		.cfi_endproc
 340              	.LFE3:
 341              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 342              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 343              		.align	2
 344              		.global	CapSense_UpdateSensorBaseline
 345              		.thumb
 346              		.thumb_func
 347              		.type	CapSense_UpdateSensorBaseline, %function
 348              	CapSense_UpdateSensorBaseline:
 349              	.LFB4:
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 310:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 323:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 325:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 13


 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 350              		.loc 1 350 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 24
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354 0000 80B5     		push	{r7, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 86B0     		sub	sp, sp, #24
 359              		.cfi_def_cfa_offset 32
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 0346     		mov	r3, r0
 363 0008 FB71     		strb	r3, [r7, #7]
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 364              		.loc 1 354 0
 365 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 366 000c 534A     		ldr	r2, .L28
 367 000e D35C     		ldrb	r3, [r2, r3]
 368 0010 7B75     		strb	r3, [r7, #21]
 355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 369              		.loc 1 355 0
 370 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 371 0014 524A     		ldr	r2, .L28+4
 372 0016 D35C     		ldrb	r3, [r2, r3]
 373 0018 3B75     		strb	r3, [r7, #20]
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 374              		.loc 1 363 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 14


 375 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 376 001c 514A     		ldr	r2, .L28+8
 377 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 378 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 379              		.loc 1 384 0
 380 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 381 0026 504A     		ldr	r2, .L28+12
 382 0028 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 383 002c 7A8A     		ldrh	r2, [r7, #18]
 384 002e 1046     		mov	r0, r2
 385 0030 1946     		mov	r1, r3
 386 0032 FFF7FEFF 		bl	CapSense_IIR4Filter
 387 0036 0346     		mov	r3, r0
 388 0038 7B82     		strh	r3, [r7, #18]	@ movhi
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 389              		.loc 1 385 0
 390 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 391 003c 4A49     		ldr	r1, .L28+12
 392 003e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 393 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 15


 402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 394              		.loc 1 404 0
 395 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 396 0046 1846     		mov	r0, r3
 397 0048 FFF7FEFF 		bl	CapSense_CalculateThresholds
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 398              		.loc 1 410 0
 399 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 400 004e 474A     		ldr	r2, .L28+16
 401 0050 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 402 0054 7A8A     		ldrh	r2, [r7, #18]
 403 0056 9A42     		cmp	r2, r3
 404 0058 09D3     		bcc	.L17
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 405              		.loc 1 412 0
 406 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 407 005c 434A     		ldr	r2, .L28+16
 408 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 409 0062 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 410 0064 D31A     		subs	r3, r2, r3
 411 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 412              		.loc 1 413 0
 413 0068 0123     		movs	r3, #1
 414 006a 7B75     		strb	r3, [r7, #21]
 415 006c 08E0     		b	.L18
 416              	.L17:
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 417              		.loc 1 417 0
 418 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 419 0070 3E4A     		ldr	r2, .L28+16
 420 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 421 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 422 0078 D31A     		subs	r3, r2, r3
 423 007a FB82     		strh	r3, [r7, #22]	@ movhi
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 424              		.loc 1 418 0
 425 007c 0023     		movs	r3, #0
 426 007e 7B75     		strb	r3, [r7, #21]
 427              	.L18:
 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 420:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 428              		.loc 1 421 0
 429 0080 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 430 0082 002B     		cmp	r3, #0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 16


 431 0084 18D1     		bne	.L19
 432              		.loc 1 421 0 is_stmt 0 discriminator 1
 433 0086 FB8A     		ldrh	r3, [r7, #22]
 434 0088 142B     		cmp	r3, #20
 435 008a 15D9     		bls	.L19
 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 436              		.loc 1 423 0 is_stmt 1
 437 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 008e 384A     		ldr	r2, .L28+20
 439 0090 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 440 0092 042B     		cmp	r3, #4
 441 0094 08D9     		bls	.L20
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 442              		.loc 1 425 0
 443 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 444 0098 1846     		mov	r0, r3
 445 009a FFF7FEFF 		bl	CapSense_BaseInit
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 446              		.loc 1 426 0
 447 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 448 00a0 334A     		ldr	r2, .L28+20
 449 00a2 0021     		movs	r1, #0
 450 00a4 D154     		strb	r1, [r2, r3]
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 451              		.loc 1 423 0
 452 00a6 3BE0     		b	.L22
 453              	.L20:
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 454              		.loc 1 430 0
 455 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 456 00aa 314A     		ldr	r2, .L28+20
 457 00ac D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 458 00ae 0132     		adds	r2, r2, #1
 459 00b0 D1B2     		uxtb	r1, r2
 460 00b2 2F4A     		ldr	r2, .L28+20
 461 00b4 D154     		strb	r1, [r2, r3]
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 462              		.loc 1 423 0
 463 00b6 33E0     		b	.L22
 464              	.L19:
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 465              		.loc 1 437 0
 466 00b8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 467 00ba 9BB2     		uxth	r3, r3
 468 00bc FA8A     		ldrh	r2, [r7, #22]
 469 00be 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 17


 470 00c0 05D9     		bls	.L23
 471              		.loc 1 437 0 is_stmt 0 discriminator 1
 472 00c2 FB8A     		ldrh	r3, [r7, #22]
 473 00c4 132B     		cmp	r3, #19
 474 00c6 2BD8     		bhi	.L22
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 475              		.loc 1 439 0 is_stmt 1
 476 00c8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 477 00ca 002B     		cmp	r3, #0
 478 00cc 28D1     		bne	.L22
 479              	.L23:
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 480              		.loc 1 443 0
 481 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 482 00d0 264A     		ldr	r2, .L28+16
 483 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 484 00d6 1B02     		lsls	r3, r3, #8
 485 00d8 FB60     		str	r3, [r7, #12]
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 486              		.loc 1 444 0
 487 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 488 00dc 254A     		ldr	r2, .L28+24
 489 00de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 490 00e0 1A46     		mov	r2, r3
 491 00e2 FB68     		ldr	r3, [r7, #12]
 492 00e4 1343     		orrs	r3, r3, r2
 493 00e6 FB60     		str	r3, [r7, #12]
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 494              		.loc 1 447 0
 495 00e8 7B8A     		ldrh	r3, [r7, #18]
 496 00ea FA68     		ldr	r2, [r7, #12]
 497 00ec 1344     		add	r3, r3, r2
 498 00ee FB60     		str	r3, [r7, #12]
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 499              		.loc 1 450 0
 500 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501 00f2 1E4A     		ldr	r2, .L28+16
 502 00f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 503 00f8 1A46     		mov	r2, r3
 504 00fa FB68     		ldr	r3, [r7, #12]
 505 00fc 9B1A     		subs	r3, r3, r2
 506 00fe FB60     		str	r3, [r7, #12]
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 507              		.loc 1 453 0
 508 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 509 0102 FA68     		ldr	r2, [r7, #12]
 510 0104 120A     		lsrs	r2, r2, #8
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 18


 511 0106 91B2     		uxth	r1, r2
 512 0108 184A     		ldr	r2, .L28+16
 513 010a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 514              		.loc 1 454 0
 515 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 516 0110 FA68     		ldr	r2, [r7, #12]
 517 0112 D1B2     		uxtb	r1, r2
 518 0114 174A     		ldr	r2, .L28+24
 519 0116 D154     		strb	r1, [r2, r3]
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 520              		.loc 1 456 0
 521 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 522 011a 154A     		ldr	r2, .L28+20
 523 011c 0021     		movs	r1, #0
 524 011e D154     		strb	r1, [r2, r3]
 525              	.L22:
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 526              		.loc 1 463 0
 527 0120 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 528 0122 9BB2     		uxth	r3, r3
 529 0124 FA8A     		ldrh	r2, [r7, #22]
 530 0126 9A42     		cmp	r2, r3
 531 0128 10D9     		bls	.L24
 532              		.loc 1 463 0 is_stmt 0 discriminator 1
 533 012a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 534 012c 002B     		cmp	r3, #0
 535 012e 0DD0     		beq	.L24
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 536              		.loc 1 467 0 is_stmt 1
 537 0130 FB8A     		ldrh	r3, [r7, #22]
 538 0132 FF2B     		cmp	r3, #255
 539 0134 04D9     		bls	.L25
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 540              		.loc 1 469 0
 541 0136 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 542 0138 0F4A     		ldr	r2, .L28+28
 543 013a FF21     		movs	r1, #255
 544 013c D154     		strb	r1, [r2, r3]
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 545              		.loc 1 467 0
 546 013e 09E0     		b	.L16
 547              	.L25:
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 19


 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 548              		.loc 1 473 0
 549 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 550 0142 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 551 0144 D1B2     		uxtb	r1, r2
 552 0146 0C4A     		ldr	r2, .L28+28
 553 0148 D154     		strb	r1, [r2, r3]
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 554              		.loc 1 467 0
 555 014a 03E0     		b	.L16
 556              	.L24:
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 557              		.loc 1 482 0
 558 014c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 014e 0A4A     		ldr	r2, .L28+28
 560 0150 0021     		movs	r1, #0
 561 0152 D154     		strb	r1, [r2, r3]
 562              	.L16:
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 563              		.loc 1 489 0
 564 0154 1837     		adds	r7, r7, #24
 565              		.cfi_def_cfa_offset 8
 566 0156 BD46     		mov	sp, r7
 567              		.cfi_def_cfa_register 13
 568              		@ sp needed
 569 0158 80BD     		pop	{r7, pc}
 570              	.L29:
 571 015a 00BF     		.align	2
 572              	.L28:
 573 015c 00000000 		.word	CapSense_widgetNumber
 574 0160 00000000 		.word	CapSense_noiseThreshold
 575 0164 00000000 		.word	CapSense_sensorRaw
 576 0168 00000000 		.word	CapSense_rawFilterData1
 577 016c 00000000 		.word	CapSense_sensorBaseline
 578 0170 00000000 		.word	CapSense_lowBaselineResetCnt
 579 0174 00000000 		.word	CapSense_sensorBaselineLow
 580 0178 00000000 		.word	CapSense_sensorSignal
 581              		.cfi_endproc
 582              	.LFE4:
 583              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 584              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 585              		.align	2
 586              		.global	CapSense_UpdateEnabledBaselines
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 20


 587              		.thumb
 588              		.thumb_func
 589              		.type	CapSense_UpdateEnabledBaselines, %function
 590              	CapSense_UpdateEnabledBaselines:
 591              	.LFB5:
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 491:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 506:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 509:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 512:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 592              		.loc 1 523 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 8
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596 0000 80B5     		push	{r7, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 82B0     		sub	sp, sp, #8
 601              		.cfi_def_cfa_offset 16
 602 0004 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 604              		.loc 1 528 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 21


 605 0006 0023     		movs	r3, #0
 606 0008 FB71     		strb	r3, [r7, #7]
 607 000a 18E0     		b	.L31
 608              	.L33:
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 609              		.loc 1 530 0
 610 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 611 000e DB08     		lsrs	r3, r3, #3
 612 0010 BB71     		strb	r3, [r7, #6]
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 613              		.loc 1 531 0
 614 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 615 0014 03F00703 		and	r3, r3, #7
 616 0018 0122     		movs	r2, #1
 617 001a 02FA03F3 		lsl	r3, r2, r3
 618 001e 7B71     		strb	r3, [r7, #5]
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 619              		.loc 1 532 0
 620 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 621 0022 0A4A     		ldr	r2, .L34
 622 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 623 0026 7B79     		ldrb	r3, [r7, #5]
 624 0028 1340     		ands	r3, r3, r2
 625 002a DBB2     		uxtb	r3, r3
 626 002c 002B     		cmp	r3, #0
 627 002e 03D0     		beq	.L32
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 628              		.loc 1 534 0
 629 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 630 0032 1846     		mov	r0, r3
 631 0034 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 632              	.L32:
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 633              		.loc 1 528 0 discriminator 2
 634 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 635 003a 0133     		adds	r3, r3, #1
 636 003c FB71     		strb	r3, [r7, #7]
 637              	.L31:
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 638              		.loc 1 528 0 is_stmt 0 discriminator 1
 639 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 640 0040 012B     		cmp	r3, #1
 641 0042 E3D9     		bls	.L33
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 642              		.loc 1 537 0 is_stmt 1
 643 0044 0837     		adds	r7, r7, #8
 644              		.cfi_def_cfa_offset 8
 645 0046 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 0048 80BD     		pop	{r7, pc}
 649              	.L35:
 650 004a 00BF     		.align	2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 22


 651              	.L34:
 652 004c 00000000 		.word	CapSense_sensorEnableMask
 653              		.cfi_endproc
 654              	.LFE5:
 655              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 656              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 657              		.align	2
 658              		.global	CapSense_CheckIsSensorActive
 659              		.thumb
 660              		.thumb_func
 661              		.type	CapSense_CheckIsSensorActive, %function
 662              	CapSense_CheckIsSensorActive:
 663              	.LFB6:
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 542:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 23


 664              		.loc 1 581 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 16
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 7, -4
 672 0002 85B0     		sub	sp, sp, #20
 673              		.cfi_def_cfa_offset 24
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 0346     		mov	r3, r0
 677 0008 FB71     		strb	r3, [r7, #7]
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 678              		.loc 1 584 0
 679 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 680 000c DB08     		lsrs	r3, r3, #3
 681 000e FB73     		strb	r3, [r7, #15]
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 682              		.loc 1 585 0
 683 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 0012 03F00703 		and	r3, r3, #7
 685 0016 0122     		movs	r2, #1
 686 0018 02FA03F3 		lsl	r3, r2, r3
 687 001c BB73     		strb	r3, [r7, #14]
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 688              		.loc 1 587 0
 689 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 690 0020 324A     		ldr	r2, .L45
 691 0022 D35C     		ldrb	r3, [r2, r3]
 692 0024 7B73     		strb	r3, [r7, #13]
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 693              		.loc 1 588 0
 694 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 695 0028 314A     		ldr	r2, .L45+4
 696 002a D35C     		ldrb	r3, [r2, r3]
 697 002c 3B73     		strb	r3, [r7, #12]
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 698              		.loc 1 589 0
 699 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 700 0030 304A     		ldr	r2, .L45+8
 701 0032 D35C     		ldrb	r3, [r2, r3]
 702 0034 FB72     		strb	r3, [r7, #11]
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 703              		.loc 1 590 0
 704 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 705 0038 2F4A     		ldr	r2, .L45+12
 706 003a D35C     		ldrb	r3, [r2, r3]
 707 003c BB72     		strb	r3, [r7, #10]
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     debounceIndex = widget;
 708              		.loc 1 592 0
 709 003e 7B7B     		ldrb	r3, [r7, #13]
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 24


 710 0040 7B72     		strb	r3, [r7, #9]
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 711              		.loc 1 596 0
 712 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 713 0044 2D4A     		ldr	r2, .L45+16
 714 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 715 0048 BB7B     		ldrb	r3, [r7, #14]
 716 004a 1340     		ands	r3, r3, r2
 717 004c DBB2     		uxtb	r3, r3
 718 004e 002B     		cmp	r3, #0
 719 0050 18D0     		beq	.L37
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 720              		.loc 1 599 0
 721 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 722 0054 2A4A     		ldr	r2, .L45+20
 723 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 724 0058 1946     		mov	r1, r3
 725 005a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 726 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 727 005e D31A     		subs	r3, r2, r3
 728 0060 9942     		cmp	r1, r3
 729 0062 32DA     		bge	.L39
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 730              		.loc 1 601 0
 731 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 732 0066 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 733 0068 2449     		ldr	r1, .L45+16
 734 006a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 735 006c BA7B     		ldrb	r2, [r7, #14]
 736 006e D243     		mvns	r2, r2
 737 0070 D2B2     		uxtb	r2, r2
 738 0072 0A40     		ands	r2, r2, r1
 739 0074 D1B2     		uxtb	r1, r2
 740 0076 214A     		ldr	r2, .L45+16
 741 0078 D154     		strb	r1, [r2, r3]
 602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 742              		.loc 1 602 0
 743 007a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 744 007c 2149     		ldr	r1, .L45+24
 745 007e BA7A     		ldrb	r2, [r7, #10]
 746 0080 CA54     		strb	r2, [r1, r3]
 747 0082 22E0     		b	.L39
 748              	.L37:
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 749              		.loc 1 608 0
 750 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 25


 751 0086 1E4A     		ldr	r2, .L45+20
 752 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 753 008a 1946     		mov	r1, r3
 754 008c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 755 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 756 0090 1344     		add	r3, r3, r2
 757 0092 9942     		cmp	r1, r3
 758 0094 15DD     		ble	.L40
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 759              		.loc 1 611 0
 760 0096 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 761 0098 1A4A     		ldr	r2, .L45+24
 762 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 763 009c 012B     		cmp	r3, #1
 764 009e 08D8     		bhi	.L41
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 765              		.loc 1 613 0
 766 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 767 00a2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 768 00a4 1549     		ldr	r1, .L45+16
 769 00a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 770 00a8 BA7B     		ldrb	r2, [r7, #14]
 771 00aa 0A43     		orrs	r2, r2, r1
 772 00ac D1B2     		uxtb	r1, r2
 773 00ae 134A     		ldr	r2, .L45+16
 774 00b0 D154     		strb	r1, [r2, r3]
 775              	.L41:
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 776              		.loc 1 615 0
 777 00b2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 778 00b4 134A     		ldr	r2, .L45+24
 779 00b6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 780 00b8 013A     		subs	r2, r2, #1
 781 00ba D1B2     		uxtb	r1, r2
 782 00bc 114A     		ldr	r2, .L45+24
 783 00be D154     		strb	r1, [r2, r3]
 784 00c0 03E0     		b	.L39
 785              	.L40:
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 786              		.loc 1 620 0
 787 00c2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 788 00c4 0F49     		ldr	r1, .L45+24
 789 00c6 BA7A     		ldrb	r2, [r7, #10]
 790 00c8 CA54     		strb	r2, [r1, r3]
 791              	.L39:
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 26


 792              		.loc 1 624 0
 793 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 794 00cc 0B4A     		ldr	r2, .L45+16
 795 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 796 00d0 BB7B     		ldrb	r3, [r7, #14]
 797 00d2 1340     		ands	r3, r3, r2
 798 00d4 DBB2     		uxtb	r3, r3
 799 00d6 002B     		cmp	r3, #0
 800 00d8 01D0     		beq	.L42
 801              		.loc 1 624 0 is_stmt 0 discriminator 1
 802 00da 0123     		movs	r3, #1
 803 00dc 00E0     		b	.L43
 804              	.L42:
 805              		.loc 1 624 0 discriminator 2
 806 00de 0023     		movs	r3, #0
 807              	.L43:
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 808              		.loc 1 625 0 is_stmt 1 discriminator 4
 809 00e0 1846     		mov	r0, r3
 810 00e2 1437     		adds	r7, r7, #20
 811              		.cfi_def_cfa_offset 4
 812 00e4 BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 00e6 5DF8047B 		ldr	r7, [sp], #4
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 00ea 7047     		bx	lr
 819              	.L46:
 820              		.align	2
 821              	.L45:
 822 00ec 00000000 		.word	CapSense_widgetNumber
 823 00f0 00000000 		.word	CapSense_fingerThreshold
 824 00f4 00000000 		.word	CapSense_hysteresis
 825 00f8 00000000 		.word	CapSense_debounce
 826 00fc 00000000 		.word	CapSense_sensorOnMask
 827 0100 00000000 		.word	CapSense_sensorSignal
 828 0104 00000000 		.word	CapSense_debounceCounter
 829              		.cfi_endproc
 830              	.LFE6:
 831              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 832              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 833              		.align	2
 834              		.global	CapSense_CheckIsWidgetActive
 835              		.thumb
 836              		.thumb_func
 837              		.type	CapSense_CheckIsWidgetActive, %function
 838              	CapSense_CheckIsWidgetActive:
 839              	.LFB7:
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 27


 634:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 840              		.loc 1 653 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 16
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 84B0     		sub	sp, sp, #16
 849              		.cfi_def_cfa_offset 24
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 852 0006 0346     		mov	r3, r0
 853 0008 FB71     		strb	r3, [r7, #7]
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 854              		.loc 1 654 0
 855 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 856 000c 0F4A     		ldr	r2, .L51
 857 000e D35C     		ldrb	r3, [r2, r3]
 858 0010 FB73     		strb	r3, [r7, #15]
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 859              		.loc 1 655 0
 860 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 861 0014 0E4A     		ldr	r2, .L51+4
 862 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 863 0018 FB7B     		ldrb	r3, [r7, #15]
 864 001a 1344     		add	r3, r3, r2
 865 001c 7B73     		strb	r3, [r7, #13]
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 866              		.loc 1 656 0
 867 001e 0023     		movs	r3, #0
 868 0020 BB73     		strb	r3, [r7, #14]
 869              	.L49:
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 28


 661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 870              		.loc 1 661 0
 871 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 872 0024 1846     		mov	r0, r3
 873 0026 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 874 002a 0346     		mov	r3, r0
 875 002c 002B     		cmp	r3, #0
 876 002e 01D0     		beq	.L48
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 877              		.loc 1 663 0
 878 0030 0123     		movs	r3, #1
 879 0032 BB73     		strb	r3, [r7, #14]
 880              	.L48:
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 881              		.loc 1 665 0
 882 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 883 0036 0133     		adds	r3, r3, #1
 884 0038 FB73     		strb	r3, [r7, #15]
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 885              		.loc 1 667 0
 886 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 887 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 888 003e 9A42     		cmp	r2, r3
 889 0040 EFD3     		bcc	.L49
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 890              		.loc 1 671 0
 891 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 892              		.loc 1 672 0
 893 0044 1846     		mov	r0, r3
 894 0046 1037     		adds	r7, r7, #16
 895              		.cfi_def_cfa_offset 8
 896 0048 BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 004a 80BD     		pop	{r7, pc}
 900              	.L52:
 901              		.align	2
 902              	.L51:
 903 004c 00000000 		.word	CapSense_rawDataIndex
 904 0050 00000000 		.word	CapSense_numberOfSensors
 905              		.cfi_endproc
 906              	.LFE7:
 907              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 908              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_CheckIsAnyWidgetActive
 911              		.thumb
 912              		.thumb_func
 913              		.type	CapSense_CheckIsAnyWidgetActive, %function
 914              	CapSense_CheckIsAnyWidgetActive:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 29


 915              	.LFB8:
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 677:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 690:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 693:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 916              		.loc 1 697 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 928              		.loc 1 699 0
 929 0006 0023     		movs	r3, #0
 930 0008 BB71     		strb	r3, [r7, #6]
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 931              		.loc 1 701 0
 932 000a 0023     		movs	r3, #0
 933 000c FB71     		strb	r3, [r7, #7]
 934 000e 0BE0     		b	.L54
 935              	.L56:
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 936              		.loc 1 703 0
 937 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 938 0012 1846     		mov	r0, r3
 939 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 940 0018 0346     		mov	r3, r0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 30


 941 001a 002B     		cmp	r3, #0
 942 001c 01D0     		beq	.L55
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 943              		.loc 1 705 0
 944 001e 0123     		movs	r3, #1
 945 0020 BB71     		strb	r3, [r7, #6]
 946              	.L55:
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 947              		.loc 1 701 0 discriminator 2
 948 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 949 0024 0133     		adds	r3, r3, #1
 950 0026 FB71     		strb	r3, [r7, #7]
 951              	.L54:
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 952              		.loc 1 701 0 is_stmt 0 discriminator 1
 953 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 954 002a 012B     		cmp	r3, #1
 955 002c F0D9     		bls	.L56
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 956              		.loc 1 710 0 is_stmt 1
 957 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 958              		.loc 1 711 0
 959 0030 1846     		mov	r0, r3
 960 0032 0837     		adds	r7, r7, #8
 961              		.cfi_def_cfa_offset 8
 962 0034 BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
 964              		@ sp needed
 965 0036 80BD     		pop	{r7, pc}
 966              		.cfi_endproc
 967              	.LFE8:
 968              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 969              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 970              		.align	2
 971              		.global	CapSense_EnableWidget
 972              		.thumb
 973              		.thumb_func
 974              		.type	CapSense_EnableWidget, %function
 975              	CapSense_EnableWidget:
 976              	.LFB9:
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 31


 723:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 732:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 977              		.loc 1 743 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 16
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982 0000 80B4     		push	{r7}
 983              		.cfi_def_cfa_offset 4
 984              		.cfi_offset 7, -4
 985 0002 85B0     		sub	sp, sp, #20
 986              		.cfi_def_cfa_offset 24
 987 0004 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 989 0006 0346     		mov	r3, r0
 990 0008 FB71     		strb	r3, [r7, #7]
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 991              		.loc 1 746 0
 992 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 000c 134A     		ldr	r2, .L60
 994 000e D35C     		ldrb	r3, [r2, r3]
 995 0010 FB73     		strb	r3, [r7, #15]
 747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 996              		.loc 1 747 0
 997 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 0014 124A     		ldr	r2, .L60+4
 999 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1000 0018 FB7B     		ldrb	r3, [r7, #15]
 1001 001a 1344     		add	r3, r3, r2
 1002 001c BB73     		strb	r3, [r7, #14]
 1003              	.L59:
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 32


 1004              		.loc 1 752 0 discriminator 1
 1005 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1006 0020 DB08     		lsrs	r3, r3, #3
 1007 0022 7B73     		strb	r3, [r7, #13]
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1008              		.loc 1 753 0 discriminator 1
 1009 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1010 0026 03F00703 		and	r3, r3, #7
 1011 002a 0122     		movs	r2, #1
 1012 002c 02FA03F3 		lsl	r3, r2, r3
 1013 0030 3B73     		strb	r3, [r7, #12]
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 1014              		.loc 1 755 0 discriminator 1
 1015 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1016 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1017 0036 0B49     		ldr	r1, .L60+8
 1018 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1019 003a 3A7B     		ldrb	r2, [r7, #12]
 1020 003c 0A43     		orrs	r2, r2, r1
 1021 003e D1B2     		uxtb	r1, r2
 1022 0040 084A     		ldr	r2, .L60+8
 1023 0042 D154     		strb	r1, [r2, r3]
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1024              		.loc 1 756 0 discriminator 1
 1025 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1026 0046 0133     		adds	r3, r3, #1
 1027 0048 FB73     		strb	r3, [r7, #15]
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1028              		.loc 1 758 0 discriminator 1
 1029 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1030 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1031 004e 9A42     		cmp	r2, r3
 1032 0050 E5D3     		bcc	.L59
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 761:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1033              		.loc 1 761 0
 1034 0052 1437     		adds	r7, r7, #20
 1035              		.cfi_def_cfa_offset 4
 1036 0054 BD46     		mov	sp, r7
 1037              		.cfi_def_cfa_register 13
 1038              		@ sp needed
 1039 0056 5DF8047B 		ldr	r7, [sp], #4
 1040              		.cfi_restore 7
 1041              		.cfi_def_cfa_offset 0
 1042 005a 7047     		bx	lr
 1043              	.L61:
 1044              		.align	2
 1045              	.L60:
 1046 005c 00000000 		.word	CapSense_rawDataIndex
 1047 0060 00000000 		.word	CapSense_numberOfSensors
 1048 0064 00000000 		.word	CapSense_sensorEnableMask
 1049              		.cfi_endproc
 1050              	.LFE9:
 1051              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 33


 1052              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1053              		.align	2
 1054              		.global	CapSense_DisableWidget
 1055              		.thumb
 1056              		.thumb_func
 1057              		.type	CapSense_DisableWidget, %function
 1058              	CapSense_DisableWidget:
 1059              	.LFB10:
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 776:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 780:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1060              		.loc 1 793 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 16
 1063              		@ frame_needed = 1, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 1065 0000 80B4     		push	{r7}
 1066              		.cfi_def_cfa_offset 4
 1067              		.cfi_offset 7, -4
 1068 0002 85B0     		sub	sp, sp, #20
 1069              		.cfi_def_cfa_offset 24
 1070 0004 00AF     		add	r7, sp, #0
 1071              		.cfi_def_cfa_register 7
 1072 0006 0346     		mov	r3, r0
 1073 0008 FB71     		strb	r3, [r7, #7]
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 34


 1074              		.loc 1 796 0
 1075 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 000c 144A     		ldr	r2, .L64
 1077 000e D35C     		ldrb	r3, [r2, r3]
 1078 0010 FB73     		strb	r3, [r7, #15]
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1079              		.loc 1 797 0
 1080 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1081 0014 134A     		ldr	r2, .L64+4
 1082 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1083 0018 FB7B     		ldrb	r3, [r7, #15]
 1084 001a 1344     		add	r3, r3, r2
 1085 001c BB73     		strb	r3, [r7, #14]
 1086              	.L63:
 798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1087              		.loc 1 802 0 discriminator 1
 1088 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1089 0020 DB08     		lsrs	r3, r3, #3
 1090 0022 7B73     		strb	r3, [r7, #13]
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1091              		.loc 1 803 0 discriminator 1
 1092 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1093 0026 03F00703 		and	r3, r3, #7
 1094 002a 0122     		movs	r2, #1
 1095 002c 02FA03F3 		lsl	r3, r2, r3
 1096 0030 3B73     		strb	r3, [r7, #12]
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 1097              		.loc 1 805 0 discriminator 1
 1098 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1099 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1100 0036 0C49     		ldr	r1, .L64+8
 1101 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1102 003a 3A7B     		ldrb	r2, [r7, #12]
 1103 003c D243     		mvns	r2, r2
 1104 003e D2B2     		uxtb	r2, r2
 1105 0040 0A40     		ands	r2, r2, r1
 1106 0042 D1B2     		uxtb	r1, r2
 1107 0044 084A     		ldr	r2, .L64+8
 1108 0046 D154     		strb	r1, [r2, r3]
 806:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1109              		.loc 1 806 0 discriminator 1
 1110 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1111 004a 0133     		adds	r3, r3, #1
 1112 004c FB73     		strb	r3, [r7, #15]
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1113              		.loc 1 808 0 discriminator 1
 1114 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1115 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1116 0052 9A42     		cmp	r2, r3
 1117 0054 E3D3     		bcc	.L63
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 35


 810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1118              		.loc 1 811 0
 1119 0056 1437     		adds	r7, r7, #20
 1120              		.cfi_def_cfa_offset 4
 1121 0058 BD46     		mov	sp, r7
 1122              		.cfi_def_cfa_register 13
 1123              		@ sp needed
 1124 005a 5DF8047B 		ldr	r7, [sp], #4
 1125              		.cfi_restore 7
 1126              		.cfi_def_cfa_offset 0
 1127 005e 7047     		bx	lr
 1128              	.L65:
 1129              		.align	2
 1130              	.L64:
 1131 0060 00000000 		.word	CapSense_rawDataIndex
 1132 0064 00000000 		.word	CapSense_numberOfSensors
 1133 0068 00000000 		.word	CapSense_sensorEnableMask
 1134              		.cfi_endproc
 1135              	.LFE10:
 1136              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1137              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1138              		.align	2
 1139              		.global	CapSense_IIR4Filter
 1140              		.thumb
 1141              		.thumb_func
 1142              		.type	CapSense_IIR4Filter, %function
 1143              	CapSense_IIR4Filter:
 1144              	.LFB11:
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 36


 840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 37


 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 920:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 38


 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
 999:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 39


1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint8 CapSense_centroid[3u];
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 40


1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1094:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1116:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 41


1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1146:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 42


1182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 43


1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 44


1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1322:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 45


1353:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1391:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1407:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 46


1410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1414:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1421:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1439:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1455:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 47


1467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1486:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1501:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1512:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1513:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1519:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 48


1524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1537:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1543:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1552:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1556:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1559:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1560:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1561:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1562:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1563:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1564:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1565:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1566:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1567:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1568:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1569:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1570:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1571:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1572:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1573:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1574:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1575:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1576:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1577:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1578:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1580:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 49


1581:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1595:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1603:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1610:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxX;
1612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxY;
1613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1626:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maxX != 0xFFu)
1627:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1628:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1630:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1637:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 50


1638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (maxY != 0xFFu)
1639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(maxY, offset, count, 
1645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(maxX, offset, count, 
1652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1667:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1672:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1694:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 51


1695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1706:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1708:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1709:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1711:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1712:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1714:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1733:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1736:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1737:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1741:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 52


1752:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
1758:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
1762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1769:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1786:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1788:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1789:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1790:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1791:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1794:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1802:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1806:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1807:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 53


1809:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1838:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1849:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1852:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1853:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1854:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 54


1866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1881:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1884:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1885:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1886:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1914:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1917:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1918:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1919:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) | \
1920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 55


1923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
1937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1145              		.loc 1 1938 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 16
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
 1150 0000 80B4     		push	{r7}
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 7, -4
 1153 0002 85B0     		sub	sp, sp, #20
 1154              		.cfi_def_cfa_offset 24
 1155 0004 00AF     		add	r7, sp, #0
 1156              		.cfi_def_cfa_register 7
 1157 0006 0346     		mov	r3, r0
 1158 0008 0A46     		mov	r2, r1
 1159 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1160 000c 1346     		mov	r3, r2	@ movhi
 1161 000e BB80     		strh	r3, [r7, #4]	@ movhi
1939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1162              		.loc 1 1942 0
 1163 0010 FA88     		ldrh	r2, [r7, #6]
 1164 0012 BB88     		ldrh	r3, [r7, #4]
 1165 0014 1344     		add	r3, r3, r2
 1166 0016 FB60     		str	r3, [r7, #12]
1943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1167              		.loc 1 1943 0
 1168 0018 BB88     		ldrh	r3, [r7, #4]
 1169 001a 5B00     		lsls	r3, r3, #1
 1170 001c FA68     		ldr	r2, [r7, #12]
 1171 001e 1344     		add	r3, r3, r2
 1172 0020 FB60     		str	r3, [r7, #12]
1944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
 1173              		.loc 1 1944 0
 1174 0022 FB68     		ldr	r3, [r7, #12]
 1175 0024 9B08     		lsrs	r3, r3, #2
 1176 0026 FB60     		str	r3, [r7, #12]
1945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
 1177              		.loc 1 1946 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 56


 1178 0028 FB68     		ldr	r3, [r7, #12]
 1179 002a 9BB2     		uxth	r3, r3
1947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1180              		.loc 1 1947 0
 1181 002c 1846     		mov	r0, r3
 1182 002e 1437     		adds	r7, r7, #20
 1183              		.cfi_def_cfa_offset 4
 1184 0030 BD46     		mov	sp, r7
 1185              		.cfi_def_cfa_register 13
 1186              		@ sp needed
 1187 0032 5DF8047B 		ldr	r7, [sp], #4
 1188              		.cfi_restore 7
 1189              		.cfi_def_cfa_offset 0
 1190 0036 7047     		bx	lr
 1191              		.cfi_endproc
 1192              	.LFE11:
 1193              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1194              		.text
 1195              	.Letext0:
 1196              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1197              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense.h"
 1198              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1199              		.section	.debug_info,"",%progbits
 1200              	.Ldebug_info0:
 1201 0000 8D050000 		.4byte	0x58d
 1202 0004 0400     		.2byte	0x4
 1203 0006 00000000 		.4byte	.Ldebug_abbrev0
 1204 000a 04       		.byte	0x4
 1205 000b 01       		.uleb128 0x1
 1206 000c DA020000 		.4byte	.LASF59
 1207 0010 01       		.byte	0x1
 1208 0011 26020000 		.4byte	.LASF60
 1209 0015 7D040000 		.4byte	.LASF61
 1210 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1211 001d 00000000 		.4byte	0
 1212 0021 00000000 		.4byte	.Ldebug_line0
 1213 0025 02       		.uleb128 0x2
 1214 0026 01       		.byte	0x1
 1215 0027 06       		.byte	0x6
 1216 0028 D0000000 		.4byte	.LASF0
 1217 002c 02       		.uleb128 0x2
 1218 002d 01       		.byte	0x1
 1219 002e 08       		.byte	0x8
 1220 002f BC030000 		.4byte	.LASF1
 1221 0033 02       		.uleb128 0x2
 1222 0034 02       		.byte	0x2
 1223 0035 05       		.byte	0x5
 1224 0036 F9030000 		.4byte	.LASF2
 1225 003a 02       		.uleb128 0x2
 1226 003b 02       		.byte	0x2
 1227 003c 07       		.byte	0x7
 1228 003d D4010000 		.4byte	.LASF3
 1229 0041 02       		.uleb128 0x2
 1230 0042 04       		.byte	0x4
 1231 0043 05       		.byte	0x5
 1232 0044 12010000 		.4byte	.LASF4
 1233 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 57


 1234 0049 04       		.byte	0x4
 1235 004a 07       		.byte	0x7
 1236 004b 91010000 		.4byte	.LASF5
 1237 004f 02       		.uleb128 0x2
 1238 0050 08       		.byte	0x8
 1239 0051 05       		.byte	0x5
 1240 0052 C2000000 		.4byte	.LASF6
 1241 0056 02       		.uleb128 0x2
 1242 0057 08       		.byte	0x8
 1243 0058 07       		.byte	0x7
 1244 0059 51000000 		.4byte	.LASF7
 1245 005d 03       		.uleb128 0x3
 1246 005e 04       		.byte	0x4
 1247 005f 05       		.byte	0x5
 1248 0060 696E7400 		.ascii	"int\000"
 1249 0064 02       		.uleb128 0x2
 1250 0065 04       		.byte	0x4
 1251 0066 07       		.byte	0x7
 1252 0067 84010000 		.4byte	.LASF8
 1253 006b 04       		.uleb128 0x4
 1254 006c 3B010000 		.4byte	.LASF9
 1255 0070 02       		.byte	0x2
 1256 0071 C2       		.byte	0xc2
 1257 0072 2C000000 		.4byte	0x2c
 1258 0076 04       		.uleb128 0x4
 1259 0077 00000000 		.4byte	.LASF10
 1260 007b 02       		.byte	0x2
 1261 007c C3       		.byte	0xc3
 1262 007d 3A000000 		.4byte	0x3a
 1263 0081 04       		.uleb128 0x4
 1264 0082 5E010000 		.4byte	.LASF11
 1265 0086 02       		.byte	0x2
 1266 0087 C4       		.byte	0xc4
 1267 0088 48000000 		.4byte	0x48
 1268 008c 02       		.uleb128 0x2
 1269 008d 04       		.byte	0x4
 1270 008e 04       		.byte	0x4
 1271 008f 99030000 		.4byte	.LASF12
 1272 0093 02       		.uleb128 0x2
 1273 0094 08       		.byte	0x8
 1274 0095 04       		.byte	0x4
 1275 0096 41010000 		.4byte	.LASF13
 1276 009a 02       		.uleb128 0x2
 1277 009b 01       		.byte	0x1
 1278 009c 08       		.byte	0x8
 1279 009d 6A040000 		.4byte	.LASF14
 1280 00a1 02       		.uleb128 0x2
 1281 00a2 04       		.byte	0x4
 1282 00a3 07       		.byte	0x7
 1283 00a4 5D020000 		.4byte	.LASF15
 1284 00a8 05       		.uleb128 0x5
 1285 00a9 11040000 		.4byte	.LASF16
 1286 00ad 01       		.byte	0x1
 1287 00ae 7B       		.byte	0x7b
 1288 00af 00000000 		.4byte	.LFB0
 1289 00b3 78000000 		.4byte	.LFE0-.LFB0
 1290 00b7 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 58


 1291 00b8 9C       		.byte	0x9c
 1292 00b9 DA000000 		.4byte	0xda
 1293 00bd 06       		.uleb128 0x6
 1294 00be E7010000 		.4byte	.LASF18
 1295 00c2 01       		.byte	0x1
 1296 00c3 7B       		.byte	0x7b
 1297 00c4 6B000000 		.4byte	0x6b
 1298 00c8 02       		.uleb128 0x2
 1299 00c9 91       		.byte	0x91
 1300 00ca 6F       		.sleb128 -17
 1301 00cb 07       		.uleb128 0x7
 1302 00cc 03040000 		.4byte	.LASF20
 1303 00d0 01       		.byte	0x1
 1304 00d1 7F       		.byte	0x7f
 1305 00d2 6B000000 		.4byte	0x6b
 1306 00d6 02       		.uleb128 0x2
 1307 00d7 91       		.byte	0x91
 1308 00d8 77       		.sleb128 -9
 1309 00d9 00       		.byte	0
 1310 00da 08       		.uleb128 0x8
 1311 00db 7C020000 		.4byte	.LASF17
 1312 00df 01       		.byte	0x1
 1313 00e0 C4       		.byte	0xc4
 1314 00e1 00000000 		.4byte	.LFB1
 1315 00e5 2C000000 		.4byte	.LFE1-.LFB1
 1316 00e9 01       		.uleb128 0x1
 1317 00ea 9C       		.byte	0x9c
 1318 00eb FE000000 		.4byte	0xfe
 1319 00ef 06       		.uleb128 0x6
 1320 00f0 E7010000 		.4byte	.LASF18
 1321 00f4 01       		.byte	0x1
 1322 00f5 C4       		.byte	0xc4
 1323 00f6 6B000000 		.4byte	0x6b
 1324 00fa 02       		.uleb128 0x2
 1325 00fb 91       		.byte	0x91
 1326 00fc 77       		.sleb128 -9
 1327 00fd 00       		.byte	0
 1328 00fe 08       		.uleb128 0x8
 1329 00ff CA030000 		.4byte	.LASF19
 1330 0103 01       		.byte	0x1
 1331 0104 F8       		.byte	0xf8
 1332 0105 00000000 		.4byte	.LFB2
 1333 0109 26000000 		.4byte	.LFE2-.LFB2
 1334 010d 01       		.uleb128 0x1
 1335 010e 9C       		.byte	0x9c
 1336 010f 20010000 		.4byte	0x120
 1337 0113 09       		.uleb128 0x9
 1338 0114 6900     		.ascii	"i\000"
 1339 0116 01       		.byte	0x1
 1340 0117 FB       		.byte	0xfb
 1341 0118 6B000000 		.4byte	0x6b
 1342 011c 02       		.uleb128 0x2
 1343 011d 91       		.byte	0x91
 1344 011e 77       		.sleb128 -9
 1345 011f 00       		.byte	0
 1346 0120 0A       		.uleb128 0xa
 1347 0121 7E000000 		.4byte	.LASF21
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 59


 1348 0125 01       		.byte	0x1
 1349 0126 1901     		.2byte	0x119
 1350 0128 00000000 		.4byte	.LFB3
 1351 012c 6C000000 		.4byte	.LFE3-.LFB3
 1352 0130 01       		.uleb128 0x1
 1353 0131 9C       		.byte	0x9c
 1354 0132 62010000 		.4byte	0x162
 1355 0136 0B       		.uleb128 0xb
 1356 0137 6900     		.ascii	"i\000"
 1357 0139 01       		.byte	0x1
 1358 013a 1C01     		.2byte	0x11c
 1359 013c 6B000000 		.4byte	0x6b
 1360 0140 02       		.uleb128 0x2
 1361 0141 91       		.byte	0x91
 1362 0142 77       		.sleb128 -9
 1363 0143 0B       		.uleb128 0xb
 1364 0144 706F7300 		.ascii	"pos\000"
 1365 0148 01       		.byte	0x1
 1366 0149 1D01     		.2byte	0x11d
 1367 014b 6B000000 		.4byte	0x6b
 1368 014f 02       		.uleb128 0x2
 1369 0150 91       		.byte	0x91
 1370 0151 76       		.sleb128 -10
 1371 0152 0C       		.uleb128 0xc
 1372 0153 BB020000 		.4byte	.LASF22
 1373 0157 01       		.byte	0x1
 1374 0158 1E01     		.2byte	0x11e
 1375 015a 6B000000 		.4byte	0x6b
 1376 015e 02       		.uleb128 0x2
 1377 015f 91       		.byte	0x91
 1378 0160 75       		.sleb128 -11
 1379 0161 00       		.byte	0
 1380 0162 0A       		.uleb128 0xa
 1381 0163 08020000 		.4byte	.LASF23
 1382 0167 01       		.byte	0x1
 1383 0168 5C01     		.2byte	0x15c
 1384 016a 00000000 		.4byte	.LFB4
 1385 016e 7C010000 		.4byte	.LFE4-.LFB4
 1386 0172 01       		.uleb128 0x1
 1387 0173 9C       		.byte	0x9c
 1388 0174 D3010000 		.4byte	0x1d3
 1389 0178 0D       		.uleb128 0xd
 1390 0179 E7010000 		.4byte	.LASF18
 1391 017d 01       		.byte	0x1
 1392 017e 5C01     		.2byte	0x15c
 1393 0180 6B000000 		.4byte	0x6b
 1394 0184 02       		.uleb128 0x2
 1395 0185 91       		.byte	0x91
 1396 0186 67       		.sleb128 -25
 1397 0187 0C       		.uleb128 0xc
 1398 0188 4F020000 		.4byte	.LASF24
 1399 018c 01       		.byte	0x1
 1400 018d 5F01     		.2byte	0x15f
 1401 018f 81000000 		.4byte	0x81
 1402 0193 02       		.uleb128 0x2
 1403 0194 91       		.byte	0x91
 1404 0195 6C       		.sleb128 -20
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 60


 1405 0196 0C       		.uleb128 0xc
 1406 0197 1E050000 		.4byte	.LASF25
 1407 019b 01       		.byte	0x1
 1408 019c 6001     		.2byte	0x160
 1409 019e 76000000 		.4byte	0x76
 1410 01a2 02       		.uleb128 0x2
 1411 01a3 91       		.byte	0x91
 1412 01a4 76       		.sleb128 -10
 1413 01a5 0C       		.uleb128 0xc
 1414 01a6 07000000 		.4byte	.LASF26
 1415 01aa 01       		.byte	0x1
 1416 01ab 6101     		.2byte	0x161
 1417 01ad 76000000 		.4byte	0x76
 1418 01b1 02       		.uleb128 0x2
 1419 01b2 91       		.byte	0x91
 1420 01b3 72       		.sleb128 -14
 1421 01b4 0C       		.uleb128 0xc
 1422 01b5 03040000 		.4byte	.LASF20
 1423 01b9 01       		.byte	0x1
 1424 01ba 6201     		.2byte	0x162
 1425 01bc 6B000000 		.4byte	0x6b
 1426 01c0 02       		.uleb128 0x2
 1427 01c1 91       		.byte	0x91
 1428 01c2 75       		.sleb128 -11
 1429 01c3 0C       		.uleb128 0xc
 1430 01c4 EA030000 		.4byte	.LASF27
 1431 01c8 01       		.byte	0x1
 1432 01c9 6301     		.2byte	0x163
 1433 01cb 6B000000 		.4byte	0x6b
 1434 01cf 02       		.uleb128 0x2
 1435 01d0 91       		.byte	0x91
 1436 01d1 74       		.sleb128 -12
 1437 01d2 00       		.byte	0
 1438 01d3 0A       		.uleb128 0xa
 1439 01d4 A2000000 		.4byte	.LASF28
 1440 01d8 01       		.byte	0x1
 1441 01d9 0902     		.2byte	0x209
 1442 01db 00000000 		.4byte	.LFB5
 1443 01df 50000000 		.4byte	.LFE5-.LFB5
 1444 01e3 01       		.uleb128 0x1
 1445 01e4 9C       		.byte	0x9c
 1446 01e5 15020000 		.4byte	0x215
 1447 01e9 0B       		.uleb128 0xb
 1448 01ea 6900     		.ascii	"i\000"
 1449 01ec 01       		.byte	0x1
 1450 01ed 0C02     		.2byte	0x20c
 1451 01ef 6B000000 		.4byte	0x6b
 1452 01f3 02       		.uleb128 0x2
 1453 01f4 91       		.byte	0x91
 1454 01f5 77       		.sleb128 -9
 1455 01f6 0B       		.uleb128 0xb
 1456 01f7 706F7300 		.ascii	"pos\000"
 1457 01fb 01       		.byte	0x1
 1458 01fc 0D02     		.2byte	0x20d
 1459 01fe 6B000000 		.4byte	0x6b
 1460 0202 02       		.uleb128 0x2
 1461 0203 91       		.byte	0x91
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 61


 1462 0204 76       		.sleb128 -10
 1463 0205 0C       		.uleb128 0xc
 1464 0206 BB020000 		.4byte	.LASF22
 1465 020a 01       		.byte	0x1
 1466 020b 0E02     		.2byte	0x20e
 1467 020d 6B000000 		.4byte	0x6b
 1468 0211 02       		.uleb128 0x2
 1469 0212 91       		.byte	0x91
 1470 0213 75       		.sleb128 -11
 1471 0214 00       		.byte	0
 1472 0215 0E       		.uleb128 0xe
 1473 0216 9E020000 		.4byte	.LASF34
 1474 021a 01       		.byte	0x1
 1475 021b 4302     		.2byte	0x243
 1476 021d 6B000000 		.4byte	0x6b
 1477 0221 00000000 		.4byte	.LFB6
 1478 0225 08010000 		.4byte	.LFE6-.LFB6
 1479 0229 01       		.uleb128 0x1
 1480 022a 9C       		.byte	0x9c
 1481 022b A8020000 		.4byte	0x2a8
 1482 022f 0D       		.uleb128 0xd
 1483 0230 E7010000 		.4byte	.LASF18
 1484 0234 01       		.byte	0x1
 1485 0235 4302     		.2byte	0x243
 1486 0237 6B000000 		.4byte	0x6b
 1487 023b 02       		.uleb128 0x2
 1488 023c 91       		.byte	0x91
 1489 023d 6F       		.sleb128 -17
 1490 023e 0C       		.uleb128 0xc
 1491 023f 6F040000 		.4byte	.LASF29
 1492 0243 01       		.byte	0x1
 1493 0244 4602     		.2byte	0x246
 1494 0246 6B000000 		.4byte	0x6b
 1495 024a 02       		.uleb128 0x2
 1496 024b 91       		.byte	0x91
 1497 024c 71       		.sleb128 -15
 1498 024d 0B       		.uleb128 0xb
 1499 024e 706F7300 		.ascii	"pos\000"
 1500 0252 01       		.byte	0x1
 1501 0253 4802     		.2byte	0x248
 1502 0255 6B000000 		.4byte	0x6b
 1503 0259 02       		.uleb128 0x2
 1504 025a 91       		.byte	0x91
 1505 025b 77       		.sleb128 -9
 1506 025c 0C       		.uleb128 0xc
 1507 025d 0A040000 		.4byte	.LASF30
 1508 0261 01       		.byte	0x1
 1509 0262 4902     		.2byte	0x249
 1510 0264 6B000000 		.4byte	0x6b
 1511 0268 02       		.uleb128 0x2
 1512 0269 91       		.byte	0x91
 1513 026a 76       		.sleb128 -10
 1514 026b 0C       		.uleb128 0xc
 1515 026c 03040000 		.4byte	.LASF20
 1516 0270 01       		.byte	0x1
 1517 0271 4B02     		.2byte	0x24b
 1518 0273 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 62


 1519 0277 02       		.uleb128 0x2
 1520 0278 91       		.byte	0x91
 1521 0279 75       		.sleb128 -11
 1522 027a 0C       		.uleb128 0xc
 1523 027b 41000000 		.4byte	.LASF31
 1524 027f 01       		.byte	0x1
 1525 0280 4C02     		.2byte	0x24c
 1526 0282 6B000000 		.4byte	0x6b
 1527 0286 02       		.uleb128 0x2
 1528 0287 91       		.byte	0x91
 1529 0288 74       		.sleb128 -12
 1530 0289 0C       		.uleb128 0xc
 1531 028a 65010000 		.4byte	.LASF32
 1532 028e 01       		.byte	0x1
 1533 028f 4D02     		.2byte	0x24d
 1534 0291 6B000000 		.4byte	0x6b
 1535 0295 02       		.uleb128 0x2
 1536 0296 91       		.byte	0x91
 1537 0297 73       		.sleb128 -13
 1538 0298 0C       		.uleb128 0xc
 1539 0299 54020000 		.4byte	.LASF33
 1540 029d 01       		.byte	0x1
 1541 029e 4E02     		.2byte	0x24e
 1542 02a0 6B000000 		.4byte	0x6b
 1543 02a4 02       		.uleb128 0x2
 1544 02a5 91       		.byte	0x91
 1545 02a6 72       		.sleb128 -14
 1546 02a7 00       		.byte	0
 1547 02a8 0F       		.uleb128 0xf
 1548 02a9 9F030000 		.4byte	.LASF35
 1549 02ad 01       		.byte	0x1
 1550 02ae 8B02     		.2byte	0x28b
 1551 02b0 6B000000 		.4byte	0x6b
 1552 02b4 00000000 		.4byte	.LFB7
 1553 02b8 54000000 		.4byte	.LFE7-.LFB7
 1554 02bc 01       		.uleb128 0x1
 1555 02bd 9C       		.byte	0x9c
 1556 02be FF020000 		.4byte	0x2ff
 1557 02c2 0D       		.uleb128 0xd
 1558 02c3 03040000 		.4byte	.LASF20
 1559 02c7 01       		.byte	0x1
 1560 02c8 8B02     		.2byte	0x28b
 1561 02ca 6B000000 		.4byte	0x6b
 1562 02ce 02       		.uleb128 0x2
 1563 02cf 91       		.byte	0x91
 1564 02d0 6F       		.sleb128 -17
 1565 02d1 0C       		.uleb128 0xc
 1566 02d2 F3000000 		.4byte	.LASF36
 1567 02d6 01       		.byte	0x1
 1568 02d7 8E02     		.2byte	0x28e
 1569 02d9 6B000000 		.4byte	0x6b
 1570 02dd 02       		.uleb128 0x2
 1571 02de 91       		.byte	0x91
 1572 02df 77       		.sleb128 -9
 1573 02e0 0C       		.uleb128 0xc
 1574 02e1 FC000000 		.4byte	.LASF37
 1575 02e5 01       		.byte	0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 63


 1576 02e6 8F02     		.2byte	0x28f
 1577 02e8 6B000000 		.4byte	0x6b
 1578 02ec 02       		.uleb128 0x2
 1579 02ed 91       		.byte	0x91
 1580 02ee 75       		.sleb128 -11
 1581 02ef 0C       		.uleb128 0xc
 1582 02f0 0C010000 		.4byte	.LASF38
 1583 02f4 01       		.byte	0x1
 1584 02f5 9002     		.2byte	0x290
 1585 02f7 6B000000 		.4byte	0x6b
 1586 02fb 02       		.uleb128 0x2
 1587 02fc 91       		.byte	0x91
 1588 02fd 76       		.sleb128 -10
 1589 02fe 00       		.byte	0
 1590 02ff 0F       		.uleb128 0xf
 1591 0300 1B010000 		.4byte	.LASF39
 1592 0304 01       		.byte	0x1
 1593 0305 B702     		.2byte	0x2b7
 1594 0307 6B000000 		.4byte	0x6b
 1595 030b 00000000 		.4byte	.LFB8
 1596 030f 38000000 		.4byte	.LFE8-.LFB8
 1597 0313 01       		.uleb128 0x1
 1598 0314 9C       		.byte	0x9c
 1599 0315 36030000 		.4byte	0x336
 1600 0319 0B       		.uleb128 0xb
 1601 031a 6900     		.ascii	"i\000"
 1602 031c 01       		.byte	0x1
 1603 031d BA02     		.2byte	0x2ba
 1604 031f 6B000000 		.4byte	0x6b
 1605 0323 02       		.uleb128 0x2
 1606 0324 91       		.byte	0x91
 1607 0325 77       		.sleb128 -9
 1608 0326 0C       		.uleb128 0xc
 1609 0327 0C010000 		.4byte	.LASF38
 1610 032b 01       		.byte	0x1
 1611 032c BB02     		.2byte	0x2bb
 1612 032e 6B000000 		.4byte	0x6b
 1613 0332 02       		.uleb128 0x2
 1614 0333 91       		.byte	0x91
 1615 0334 76       		.sleb128 -10
 1616 0335 00       		.byte	0
 1617 0336 10       		.uleb128 0x10
 1618 0337 66020000 		.4byte	.LASF40
 1619 033b 01       		.byte	0x1
 1620 033c E502     		.2byte	0x2e5
 1621 033e 00000000 		.4byte	.LFB9
 1622 0342 68000000 		.4byte	.LFE9-.LFB9
 1623 0346 01       		.uleb128 0x1
 1624 0347 9C       		.byte	0x9c
 1625 0348 98030000 		.4byte	0x398
 1626 034c 0D       		.uleb128 0xd
 1627 034d 03040000 		.4byte	.LASF20
 1628 0351 01       		.byte	0x1
 1629 0352 E502     		.2byte	0x2e5
 1630 0354 6B000000 		.4byte	0x6b
 1631 0358 02       		.uleb128 0x2
 1632 0359 91       		.byte	0x91
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 64


 1633 035a 6F       		.sleb128 -17
 1634 035b 0B       		.uleb128 0xb
 1635 035c 706F7300 		.ascii	"pos\000"
 1636 0360 01       		.byte	0x1
 1637 0361 E802     		.2byte	0x2e8
 1638 0363 6B000000 		.4byte	0x6b
 1639 0367 02       		.uleb128 0x2
 1640 0368 91       		.byte	0x91
 1641 0369 75       		.sleb128 -11
 1642 036a 0C       		.uleb128 0xc
 1643 036b BB020000 		.4byte	.LASF22
 1644 036f 01       		.byte	0x1
 1645 0370 E902     		.2byte	0x2e9
 1646 0372 6B000000 		.4byte	0x6b
 1647 0376 02       		.uleb128 0x2
 1648 0377 91       		.byte	0x91
 1649 0378 74       		.sleb128 -12
 1650 0379 0C       		.uleb128 0xc
 1651 037a F3000000 		.4byte	.LASF36
 1652 037e 01       		.byte	0x1
 1653 037f EA02     		.2byte	0x2ea
 1654 0381 6B000000 		.4byte	0x6b
 1655 0385 02       		.uleb128 0x2
 1656 0386 91       		.byte	0x91
 1657 0387 77       		.sleb128 -9
 1658 0388 0C       		.uleb128 0xc
 1659 0389 FC000000 		.4byte	.LASF37
 1660 038d 01       		.byte	0x1
 1661 038e EB02     		.2byte	0x2eb
 1662 0390 6B000000 		.4byte	0x6b
 1663 0394 02       		.uleb128 0x2
 1664 0395 91       		.byte	0x91
 1665 0396 76       		.sleb128 -10
 1666 0397 00       		.byte	0
 1667 0398 10       		.uleb128 0x10
 1668 0399 DC000000 		.4byte	.LASF41
 1669 039d 01       		.byte	0x1
 1670 039e 1703     		.2byte	0x317
 1671 03a0 00000000 		.4byte	.LFB10
 1672 03a4 6C000000 		.4byte	.LFE10-.LFB10
 1673 03a8 01       		.uleb128 0x1
 1674 03a9 9C       		.byte	0x9c
 1675 03aa FA030000 		.4byte	0x3fa
 1676 03ae 0D       		.uleb128 0xd
 1677 03af 03040000 		.4byte	.LASF20
 1678 03b3 01       		.byte	0x1
 1679 03b4 1703     		.2byte	0x317
 1680 03b6 6B000000 		.4byte	0x6b
 1681 03ba 02       		.uleb128 0x2
 1682 03bb 91       		.byte	0x91
 1683 03bc 6F       		.sleb128 -17
 1684 03bd 0B       		.uleb128 0xb
 1685 03be 706F7300 		.ascii	"pos\000"
 1686 03c2 01       		.byte	0x1
 1687 03c3 1A03     		.2byte	0x31a
 1688 03c5 6B000000 		.4byte	0x6b
 1689 03c9 02       		.uleb128 0x2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 65


 1690 03ca 91       		.byte	0x91
 1691 03cb 75       		.sleb128 -11
 1692 03cc 0C       		.uleb128 0xc
 1693 03cd BB020000 		.4byte	.LASF22
 1694 03d1 01       		.byte	0x1
 1695 03d2 1B03     		.2byte	0x31b
 1696 03d4 6B000000 		.4byte	0x6b
 1697 03d8 02       		.uleb128 0x2
 1698 03d9 91       		.byte	0x91
 1699 03da 74       		.sleb128 -12
 1700 03db 0C       		.uleb128 0xc
 1701 03dc F3000000 		.4byte	.LASF36
 1702 03e0 01       		.byte	0x1
 1703 03e1 1C03     		.2byte	0x31c
 1704 03e3 6B000000 		.4byte	0x6b
 1705 03e7 02       		.uleb128 0x2
 1706 03e8 91       		.byte	0x91
 1707 03e9 77       		.sleb128 -9
 1708 03ea 0C       		.uleb128 0xc
 1709 03eb FC000000 		.4byte	.LASF37
 1710 03ef 01       		.byte	0x1
 1711 03f0 1D03     		.2byte	0x31d
 1712 03f2 6B000000 		.4byte	0x6b
 1713 03f6 02       		.uleb128 0x2
 1714 03f7 91       		.byte	0x91
 1715 03f8 76       		.sleb128 -10
 1716 03f9 00       		.byte	0
 1717 03fa 0E       		.uleb128 0xe
 1718 03fb 70010000 		.4byte	.LASF42
 1719 03ff 01       		.byte	0x1
 1720 0400 9007     		.2byte	0x790
 1721 0402 76000000 		.4byte	0x76
 1722 0406 00000000 		.4byte	.LFB11
 1723 040a 38000000 		.4byte	.LFE11-.LFB11
 1724 040e 01       		.uleb128 0x1
 1725 040f 9C       		.byte	0x9c
 1726 0410 40040000 		.4byte	0x440
 1727 0414 11       		.uleb128 0x11
 1728 0415 783100   		.ascii	"x1\000"
 1729 0418 01       		.byte	0x1
 1730 0419 9007     		.2byte	0x790
 1731 041b 76000000 		.4byte	0x76
 1732 041f 02       		.uleb128 0x2
 1733 0420 91       		.byte	0x91
 1734 0421 6E       		.sleb128 -18
 1735 0422 11       		.uleb128 0x11
 1736 0423 783200   		.ascii	"x2\000"
 1737 0426 01       		.byte	0x1
 1738 0427 9007     		.2byte	0x790
 1739 0429 76000000 		.4byte	0x76
 1740 042d 02       		.uleb128 0x2
 1741 042e 91       		.byte	0x91
 1742 042f 6C       		.sleb128 -20
 1743 0430 0B       		.uleb128 0xb
 1744 0431 746D7000 		.ascii	"tmp\000"
 1745 0435 01       		.byte	0x1
 1746 0436 9307     		.2byte	0x793
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 66


 1747 0438 81000000 		.4byte	0x81
 1748 043c 02       		.uleb128 0x2
 1749 043d 91       		.byte	0x91
 1750 043e 74       		.sleb128 -12
 1751 043f 00       		.byte	0
 1752 0440 12       		.uleb128 0x12
 1753 0441 76000000 		.4byte	0x76
 1754 0445 50040000 		.4byte	0x450
 1755 0449 13       		.uleb128 0x13
 1756 044a A1000000 		.4byte	0xa1
 1757 044e 01       		.byte	0x1
 1758 044f 00       		.byte	0
 1759 0450 14       		.uleb128 0x14
 1760 0451 F2040000 		.4byte	.LASF43
 1761 0455 03       		.byte	0x3
 1762 0456 BA02     		.2byte	0x2ba
 1763 0458 40040000 		.4byte	0x440
 1764 045c 15       		.uleb128 0x15
 1765 045d 81030000 		.4byte	.LASF44
 1766 0461 01       		.byte	0x1
 1767 0462 21       		.byte	0x21
 1768 0463 40040000 		.4byte	0x440
 1769 0467 05       		.uleb128 0x5
 1770 0468 03       		.byte	0x3
 1771 0469 00000000 		.4byte	CapSense_rawFilterData1
 1772 046d 12       		.uleb128 0x12
 1773 046e 6B000000 		.4byte	0x6b
 1774 0472 7D040000 		.4byte	0x47d
 1775 0476 13       		.uleb128 0x13
 1776 0477 A1000000 		.4byte	0xa1
 1777 047b 00       		.byte	0
 1778 047c 00       		.byte	0
 1779 047d 14       		.uleb128 0x14
 1780 047e EE010000 		.4byte	.LASF45
 1781 0482 04       		.byte	0x4
 1782 0483 0401     		.2byte	0x104
 1783 0485 6D040000 		.4byte	0x46d
 1784 0489 12       		.uleb128 0x12
 1785 048a 6B000000 		.4byte	0x6b
 1786 048e 99040000 		.4byte	0x499
 1787 0492 13       		.uleb128 0x13
 1788 0493 A1000000 		.4byte	0xa1
 1789 0497 01       		.byte	0x1
 1790 0498 00       		.byte	0
 1791 0499 14       		.uleb128 0x14
 1792 049a 48010000 		.4byte	.LASF46
 1793 049e 04       		.byte	0x4
 1794 049f 0501     		.2byte	0x105
 1795 04a1 A5040000 		.4byte	0x4a5
 1796 04a5 16       		.uleb128 0x16
 1797 04a6 89040000 		.4byte	0x489
 1798 04aa 15       		.uleb128 0x15
 1799 04ab 52040000 		.4byte	.LASF47
 1800 04af 01       		.byte	0x1
 1801 04b0 29       		.byte	0x29
 1802 04b1 40040000 		.4byte	0x440
 1803 04b5 05       		.uleb128 0x5
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 67


 1804 04b6 03       		.byte	0x3
 1805 04b7 00000000 		.4byte	CapSense_sensorBaseline
 1806 04bb 15       		.uleb128 0x15
 1807 04bc A3010000 		.4byte	.LASF48
 1808 04c0 01       		.byte	0x1
 1809 04c1 2A       		.byte	0x2a
 1810 04c2 89040000 		.4byte	0x489
 1811 04c6 05       		.uleb128 0x5
 1812 04c7 03       		.byte	0x3
 1813 04c8 00000000 		.4byte	CapSense_sensorBaselineLow
 1814 04cc 15       		.uleb128 0x15
 1815 04cd 68000000 		.4byte	.LASF49
 1816 04d1 01       		.byte	0x1
 1817 04d2 2B       		.byte	0x2b
 1818 04d3 89040000 		.4byte	0x489
 1819 04d7 05       		.uleb128 0x5
 1820 04d8 03       		.byte	0x3
 1821 04d9 00000000 		.4byte	CapSense_sensorSignal
 1822 04dd 15       		.uleb128 0x15
 1823 04de 2B000000 		.4byte	.LASF50
 1824 04e2 01       		.byte	0x1
 1825 04e3 2C       		.byte	0x2c
 1826 04e4 6D040000 		.4byte	0x46d
 1827 04e8 05       		.uleb128 0x5
 1828 04e9 03       		.byte	0x3
 1829 04ea 00000000 		.4byte	CapSense_sensorOnMask
 1830 04ee 15       		.uleb128 0x15
 1831 04ef 23040000 		.4byte	.LASF51
 1832 04f3 01       		.byte	0x1
 1833 04f4 2E       		.byte	0x2e
 1834 04f5 89040000 		.4byte	0x489
 1835 04f9 05       		.uleb128 0x5
 1836 04fa 03       		.byte	0x3
 1837 04fb 00000000 		.4byte	CapSense_lowBaselineResetCnt
 1838 04ff 15       		.uleb128 0x15
 1839 0500 68030000 		.4byte	.LASF52
 1840 0504 01       		.byte	0x1
 1841 0505 30       		.byte	0x30
 1842 0506 89040000 		.4byte	0x489
 1843 050a 05       		.uleb128 0x5
 1844 050b 03       		.byte	0x3
 1845 050c 00000000 		.4byte	CapSense_fingerThreshold
 1846 0510 15       		.uleb128 0x15
 1847 0511 C2020000 		.4byte	.LASF53
 1848 0515 01       		.byte	0x1
 1849 0516 34       		.byte	0x34
 1850 0517 89040000 		.4byte	0x489
 1851 051b 05       		.uleb128 0x5
 1852 051c 03       		.byte	0x3
 1853 051d 00000000 		.4byte	CapSense_noiseThreshold
 1854 0521 15       		.uleb128 0x15
 1855 0522 17000000 		.4byte	.LASF54
 1856 0526 01       		.byte	0x1
 1857 0527 38       		.byte	0x38
 1858 0528 89040000 		.4byte	0x489
 1859 052c 05       		.uleb128 0x5
 1860 052d 03       		.byte	0x3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 68


 1861 052e 00000000 		.4byte	CapSense_hysteresis
 1862 0532 15       		.uleb128 0x15
 1863 0533 40040000 		.4byte	.LASF55
 1864 0537 01       		.byte	0x1
 1865 0538 3C       		.byte	0x3c
 1866 0539 89040000 		.4byte	0x489
 1867 053d 05       		.uleb128 0x5
 1868 053e 03       		.byte	0x3
 1869 053f 00000000 		.4byte	CapSense_debounce
 1870 0543 12       		.uleb128 0x12
 1871 0544 6B000000 		.4byte	0x6b
 1872 0548 53050000 		.4byte	0x553
 1873 054c 13       		.uleb128 0x13
 1874 054d A1000000 		.4byte	0xa1
 1875 0551 02       		.byte	0x2
 1876 0552 00       		.byte	0
 1877 0553 15       		.uleb128 0x15
 1878 0554 05050000 		.4byte	.LASF56
 1879 0558 01       		.byte	0x1
 1880 0559 40       		.byte	0x40
 1881 055a 43050000 		.4byte	0x543
 1882 055e 05       		.uleb128 0x5
 1883 055f 03       		.byte	0x3
 1884 0560 00000000 		.4byte	CapSense_debounceCounter
 1885 0564 15       		.uleb128 0x15
 1886 0565 BE010000 		.4byte	.LASF57
 1887 0569 01       		.byte	0x1
 1888 056a 44       		.byte	0x44
 1889 056b 75050000 		.4byte	0x575
 1890 056f 05       		.uleb128 0x5
 1891 0570 03       		.byte	0x3
 1892 0571 00000000 		.4byte	CapSense_rawDataIndex
 1893 0575 16       		.uleb128 0x16
 1894 0576 89040000 		.4byte	0x489
 1895 057a 15       		.uleb128 0x15
 1896 057b 26050000 		.4byte	.LASF58
 1897 057f 01       		.byte	0x1
 1898 0580 4A       		.byte	0x4a
 1899 0581 8B050000 		.4byte	0x58b
 1900 0585 05       		.uleb128 0x5
 1901 0586 03       		.byte	0x3
 1902 0587 00000000 		.4byte	CapSense_numberOfSensors
 1903 058b 16       		.uleb128 0x16
 1904 058c 89040000 		.4byte	0x489
 1905 0590 00       		.byte	0
 1906              		.section	.debug_abbrev,"",%progbits
 1907              	.Ldebug_abbrev0:
 1908 0000 01       		.uleb128 0x1
 1909 0001 11       		.uleb128 0x11
 1910 0002 01       		.byte	0x1
 1911 0003 25       		.uleb128 0x25
 1912 0004 0E       		.uleb128 0xe
 1913 0005 13       		.uleb128 0x13
 1914 0006 0B       		.uleb128 0xb
 1915 0007 03       		.uleb128 0x3
 1916 0008 0E       		.uleb128 0xe
 1917 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 69


 1918 000a 0E       		.uleb128 0xe
 1919 000b 55       		.uleb128 0x55
 1920 000c 17       		.uleb128 0x17
 1921 000d 11       		.uleb128 0x11
 1922 000e 01       		.uleb128 0x1
 1923 000f 10       		.uleb128 0x10
 1924 0010 17       		.uleb128 0x17
 1925 0011 00       		.byte	0
 1926 0012 00       		.byte	0
 1927 0013 02       		.uleb128 0x2
 1928 0014 24       		.uleb128 0x24
 1929 0015 00       		.byte	0
 1930 0016 0B       		.uleb128 0xb
 1931 0017 0B       		.uleb128 0xb
 1932 0018 3E       		.uleb128 0x3e
 1933 0019 0B       		.uleb128 0xb
 1934 001a 03       		.uleb128 0x3
 1935 001b 0E       		.uleb128 0xe
 1936 001c 00       		.byte	0
 1937 001d 00       		.byte	0
 1938 001e 03       		.uleb128 0x3
 1939 001f 24       		.uleb128 0x24
 1940 0020 00       		.byte	0
 1941 0021 0B       		.uleb128 0xb
 1942 0022 0B       		.uleb128 0xb
 1943 0023 3E       		.uleb128 0x3e
 1944 0024 0B       		.uleb128 0xb
 1945 0025 03       		.uleb128 0x3
 1946 0026 08       		.uleb128 0x8
 1947 0027 00       		.byte	0
 1948 0028 00       		.byte	0
 1949 0029 04       		.uleb128 0x4
 1950 002a 16       		.uleb128 0x16
 1951 002b 00       		.byte	0
 1952 002c 03       		.uleb128 0x3
 1953 002d 0E       		.uleb128 0xe
 1954 002e 3A       		.uleb128 0x3a
 1955 002f 0B       		.uleb128 0xb
 1956 0030 3B       		.uleb128 0x3b
 1957 0031 0B       		.uleb128 0xb
 1958 0032 49       		.uleb128 0x49
 1959 0033 13       		.uleb128 0x13
 1960 0034 00       		.byte	0
 1961 0035 00       		.byte	0
 1962 0036 05       		.uleb128 0x5
 1963 0037 2E       		.uleb128 0x2e
 1964 0038 01       		.byte	0x1
 1965 0039 3F       		.uleb128 0x3f
 1966 003a 19       		.uleb128 0x19
 1967 003b 03       		.uleb128 0x3
 1968 003c 0E       		.uleb128 0xe
 1969 003d 3A       		.uleb128 0x3a
 1970 003e 0B       		.uleb128 0xb
 1971 003f 3B       		.uleb128 0x3b
 1972 0040 0B       		.uleb128 0xb
 1973 0041 27       		.uleb128 0x27
 1974 0042 19       		.uleb128 0x19
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 70


 1975 0043 11       		.uleb128 0x11
 1976 0044 01       		.uleb128 0x1
 1977 0045 12       		.uleb128 0x12
 1978 0046 06       		.uleb128 0x6
 1979 0047 40       		.uleb128 0x40
 1980 0048 18       		.uleb128 0x18
 1981 0049 9742     		.uleb128 0x2117
 1982 004b 19       		.uleb128 0x19
 1983 004c 01       		.uleb128 0x1
 1984 004d 13       		.uleb128 0x13
 1985 004e 00       		.byte	0
 1986 004f 00       		.byte	0
 1987 0050 06       		.uleb128 0x6
 1988 0051 05       		.uleb128 0x5
 1989 0052 00       		.byte	0
 1990 0053 03       		.uleb128 0x3
 1991 0054 0E       		.uleb128 0xe
 1992 0055 3A       		.uleb128 0x3a
 1993 0056 0B       		.uleb128 0xb
 1994 0057 3B       		.uleb128 0x3b
 1995 0058 0B       		.uleb128 0xb
 1996 0059 49       		.uleb128 0x49
 1997 005a 13       		.uleb128 0x13
 1998 005b 02       		.uleb128 0x2
 1999 005c 18       		.uleb128 0x18
 2000 005d 00       		.byte	0
 2001 005e 00       		.byte	0
 2002 005f 07       		.uleb128 0x7
 2003 0060 34       		.uleb128 0x34
 2004 0061 00       		.byte	0
 2005 0062 03       		.uleb128 0x3
 2006 0063 0E       		.uleb128 0xe
 2007 0064 3A       		.uleb128 0x3a
 2008 0065 0B       		.uleb128 0xb
 2009 0066 3B       		.uleb128 0x3b
 2010 0067 0B       		.uleb128 0xb
 2011 0068 49       		.uleb128 0x49
 2012 0069 13       		.uleb128 0x13
 2013 006a 02       		.uleb128 0x2
 2014 006b 18       		.uleb128 0x18
 2015 006c 00       		.byte	0
 2016 006d 00       		.byte	0
 2017 006e 08       		.uleb128 0x8
 2018 006f 2E       		.uleb128 0x2e
 2019 0070 01       		.byte	0x1
 2020 0071 3F       		.uleb128 0x3f
 2021 0072 19       		.uleb128 0x19
 2022 0073 03       		.uleb128 0x3
 2023 0074 0E       		.uleb128 0xe
 2024 0075 3A       		.uleb128 0x3a
 2025 0076 0B       		.uleb128 0xb
 2026 0077 3B       		.uleb128 0x3b
 2027 0078 0B       		.uleb128 0xb
 2028 0079 27       		.uleb128 0x27
 2029 007a 19       		.uleb128 0x19
 2030 007b 11       		.uleb128 0x11
 2031 007c 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 71


 2032 007d 12       		.uleb128 0x12
 2033 007e 06       		.uleb128 0x6
 2034 007f 40       		.uleb128 0x40
 2035 0080 18       		.uleb128 0x18
 2036 0081 9642     		.uleb128 0x2116
 2037 0083 19       		.uleb128 0x19
 2038 0084 01       		.uleb128 0x1
 2039 0085 13       		.uleb128 0x13
 2040 0086 00       		.byte	0
 2041 0087 00       		.byte	0
 2042 0088 09       		.uleb128 0x9
 2043 0089 34       		.uleb128 0x34
 2044 008a 00       		.byte	0
 2045 008b 03       		.uleb128 0x3
 2046 008c 08       		.uleb128 0x8
 2047 008d 3A       		.uleb128 0x3a
 2048 008e 0B       		.uleb128 0xb
 2049 008f 3B       		.uleb128 0x3b
 2050 0090 0B       		.uleb128 0xb
 2051 0091 49       		.uleb128 0x49
 2052 0092 13       		.uleb128 0x13
 2053 0093 02       		.uleb128 0x2
 2054 0094 18       		.uleb128 0x18
 2055 0095 00       		.byte	0
 2056 0096 00       		.byte	0
 2057 0097 0A       		.uleb128 0xa
 2058 0098 2E       		.uleb128 0x2e
 2059 0099 01       		.byte	0x1
 2060 009a 3F       		.uleb128 0x3f
 2061 009b 19       		.uleb128 0x19
 2062 009c 03       		.uleb128 0x3
 2063 009d 0E       		.uleb128 0xe
 2064 009e 3A       		.uleb128 0x3a
 2065 009f 0B       		.uleb128 0xb
 2066 00a0 3B       		.uleb128 0x3b
 2067 00a1 05       		.uleb128 0x5
 2068 00a2 27       		.uleb128 0x27
 2069 00a3 19       		.uleb128 0x19
 2070 00a4 11       		.uleb128 0x11
 2071 00a5 01       		.uleb128 0x1
 2072 00a6 12       		.uleb128 0x12
 2073 00a7 06       		.uleb128 0x6
 2074 00a8 40       		.uleb128 0x40
 2075 00a9 18       		.uleb128 0x18
 2076 00aa 9642     		.uleb128 0x2116
 2077 00ac 19       		.uleb128 0x19
 2078 00ad 01       		.uleb128 0x1
 2079 00ae 13       		.uleb128 0x13
 2080 00af 00       		.byte	0
 2081 00b0 00       		.byte	0
 2082 00b1 0B       		.uleb128 0xb
 2083 00b2 34       		.uleb128 0x34
 2084 00b3 00       		.byte	0
 2085 00b4 03       		.uleb128 0x3
 2086 00b5 08       		.uleb128 0x8
 2087 00b6 3A       		.uleb128 0x3a
 2088 00b7 0B       		.uleb128 0xb
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 72


 2089 00b8 3B       		.uleb128 0x3b
 2090 00b9 05       		.uleb128 0x5
 2091 00ba 49       		.uleb128 0x49
 2092 00bb 13       		.uleb128 0x13
 2093 00bc 02       		.uleb128 0x2
 2094 00bd 18       		.uleb128 0x18
 2095 00be 00       		.byte	0
 2096 00bf 00       		.byte	0
 2097 00c0 0C       		.uleb128 0xc
 2098 00c1 34       		.uleb128 0x34
 2099 00c2 00       		.byte	0
 2100 00c3 03       		.uleb128 0x3
 2101 00c4 0E       		.uleb128 0xe
 2102 00c5 3A       		.uleb128 0x3a
 2103 00c6 0B       		.uleb128 0xb
 2104 00c7 3B       		.uleb128 0x3b
 2105 00c8 05       		.uleb128 0x5
 2106 00c9 49       		.uleb128 0x49
 2107 00ca 13       		.uleb128 0x13
 2108 00cb 02       		.uleb128 0x2
 2109 00cc 18       		.uleb128 0x18
 2110 00cd 00       		.byte	0
 2111 00ce 00       		.byte	0
 2112 00cf 0D       		.uleb128 0xd
 2113 00d0 05       		.uleb128 0x5
 2114 00d1 00       		.byte	0
 2115 00d2 03       		.uleb128 0x3
 2116 00d3 0E       		.uleb128 0xe
 2117 00d4 3A       		.uleb128 0x3a
 2118 00d5 0B       		.uleb128 0xb
 2119 00d6 3B       		.uleb128 0x3b
 2120 00d7 05       		.uleb128 0x5
 2121 00d8 49       		.uleb128 0x49
 2122 00d9 13       		.uleb128 0x13
 2123 00da 02       		.uleb128 0x2
 2124 00db 18       		.uleb128 0x18
 2125 00dc 00       		.byte	0
 2126 00dd 00       		.byte	0
 2127 00de 0E       		.uleb128 0xe
 2128 00df 2E       		.uleb128 0x2e
 2129 00e0 01       		.byte	0x1
 2130 00e1 3F       		.uleb128 0x3f
 2131 00e2 19       		.uleb128 0x19
 2132 00e3 03       		.uleb128 0x3
 2133 00e4 0E       		.uleb128 0xe
 2134 00e5 3A       		.uleb128 0x3a
 2135 00e6 0B       		.uleb128 0xb
 2136 00e7 3B       		.uleb128 0x3b
 2137 00e8 05       		.uleb128 0x5
 2138 00e9 27       		.uleb128 0x27
 2139 00ea 19       		.uleb128 0x19
 2140 00eb 49       		.uleb128 0x49
 2141 00ec 13       		.uleb128 0x13
 2142 00ed 11       		.uleb128 0x11
 2143 00ee 01       		.uleb128 0x1
 2144 00ef 12       		.uleb128 0x12
 2145 00f0 06       		.uleb128 0x6
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 73


 2146 00f1 40       		.uleb128 0x40
 2147 00f2 18       		.uleb128 0x18
 2148 00f3 9742     		.uleb128 0x2117
 2149 00f5 19       		.uleb128 0x19
 2150 00f6 01       		.uleb128 0x1
 2151 00f7 13       		.uleb128 0x13
 2152 00f8 00       		.byte	0
 2153 00f9 00       		.byte	0
 2154 00fa 0F       		.uleb128 0xf
 2155 00fb 2E       		.uleb128 0x2e
 2156 00fc 01       		.byte	0x1
 2157 00fd 3F       		.uleb128 0x3f
 2158 00fe 19       		.uleb128 0x19
 2159 00ff 03       		.uleb128 0x3
 2160 0100 0E       		.uleb128 0xe
 2161 0101 3A       		.uleb128 0x3a
 2162 0102 0B       		.uleb128 0xb
 2163 0103 3B       		.uleb128 0x3b
 2164 0104 05       		.uleb128 0x5
 2165 0105 27       		.uleb128 0x27
 2166 0106 19       		.uleb128 0x19
 2167 0107 49       		.uleb128 0x49
 2168 0108 13       		.uleb128 0x13
 2169 0109 11       		.uleb128 0x11
 2170 010a 01       		.uleb128 0x1
 2171 010b 12       		.uleb128 0x12
 2172 010c 06       		.uleb128 0x6
 2173 010d 40       		.uleb128 0x40
 2174 010e 18       		.uleb128 0x18
 2175 010f 9642     		.uleb128 0x2116
 2176 0111 19       		.uleb128 0x19
 2177 0112 01       		.uleb128 0x1
 2178 0113 13       		.uleb128 0x13
 2179 0114 00       		.byte	0
 2180 0115 00       		.byte	0
 2181 0116 10       		.uleb128 0x10
 2182 0117 2E       		.uleb128 0x2e
 2183 0118 01       		.byte	0x1
 2184 0119 3F       		.uleb128 0x3f
 2185 011a 19       		.uleb128 0x19
 2186 011b 03       		.uleb128 0x3
 2187 011c 0E       		.uleb128 0xe
 2188 011d 3A       		.uleb128 0x3a
 2189 011e 0B       		.uleb128 0xb
 2190 011f 3B       		.uleb128 0x3b
 2191 0120 05       		.uleb128 0x5
 2192 0121 27       		.uleb128 0x27
 2193 0122 19       		.uleb128 0x19
 2194 0123 11       		.uleb128 0x11
 2195 0124 01       		.uleb128 0x1
 2196 0125 12       		.uleb128 0x12
 2197 0126 06       		.uleb128 0x6
 2198 0127 40       		.uleb128 0x40
 2199 0128 18       		.uleb128 0x18
 2200 0129 9742     		.uleb128 0x2117
 2201 012b 19       		.uleb128 0x19
 2202 012c 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 74


 2203 012d 13       		.uleb128 0x13
 2204 012e 00       		.byte	0
 2205 012f 00       		.byte	0
 2206 0130 11       		.uleb128 0x11
 2207 0131 05       		.uleb128 0x5
 2208 0132 00       		.byte	0
 2209 0133 03       		.uleb128 0x3
 2210 0134 08       		.uleb128 0x8
 2211 0135 3A       		.uleb128 0x3a
 2212 0136 0B       		.uleb128 0xb
 2213 0137 3B       		.uleb128 0x3b
 2214 0138 05       		.uleb128 0x5
 2215 0139 49       		.uleb128 0x49
 2216 013a 13       		.uleb128 0x13
 2217 013b 02       		.uleb128 0x2
 2218 013c 18       		.uleb128 0x18
 2219 013d 00       		.byte	0
 2220 013e 00       		.byte	0
 2221 013f 12       		.uleb128 0x12
 2222 0140 01       		.uleb128 0x1
 2223 0141 01       		.byte	0x1
 2224 0142 49       		.uleb128 0x49
 2225 0143 13       		.uleb128 0x13
 2226 0144 01       		.uleb128 0x1
 2227 0145 13       		.uleb128 0x13
 2228 0146 00       		.byte	0
 2229 0147 00       		.byte	0
 2230 0148 13       		.uleb128 0x13
 2231 0149 21       		.uleb128 0x21
 2232 014a 00       		.byte	0
 2233 014b 49       		.uleb128 0x49
 2234 014c 13       		.uleb128 0x13
 2235 014d 2F       		.uleb128 0x2f
 2236 014e 0B       		.uleb128 0xb
 2237 014f 00       		.byte	0
 2238 0150 00       		.byte	0
 2239 0151 14       		.uleb128 0x14
 2240 0152 34       		.uleb128 0x34
 2241 0153 00       		.byte	0
 2242 0154 03       		.uleb128 0x3
 2243 0155 0E       		.uleb128 0xe
 2244 0156 3A       		.uleb128 0x3a
 2245 0157 0B       		.uleb128 0xb
 2246 0158 3B       		.uleb128 0x3b
 2247 0159 05       		.uleb128 0x5
 2248 015a 49       		.uleb128 0x49
 2249 015b 13       		.uleb128 0x13
 2250 015c 3F       		.uleb128 0x3f
 2251 015d 19       		.uleb128 0x19
 2252 015e 3C       		.uleb128 0x3c
 2253 015f 19       		.uleb128 0x19
 2254 0160 00       		.byte	0
 2255 0161 00       		.byte	0
 2256 0162 15       		.uleb128 0x15
 2257 0163 34       		.uleb128 0x34
 2258 0164 00       		.byte	0
 2259 0165 03       		.uleb128 0x3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 75


 2260 0166 0E       		.uleb128 0xe
 2261 0167 3A       		.uleb128 0x3a
 2262 0168 0B       		.uleb128 0xb
 2263 0169 3B       		.uleb128 0x3b
 2264 016a 0B       		.uleb128 0xb
 2265 016b 49       		.uleb128 0x49
 2266 016c 13       		.uleb128 0x13
 2267 016d 3F       		.uleb128 0x3f
 2268 016e 19       		.uleb128 0x19
 2269 016f 02       		.uleb128 0x2
 2270 0170 18       		.uleb128 0x18
 2271 0171 00       		.byte	0
 2272 0172 00       		.byte	0
 2273 0173 16       		.uleb128 0x16
 2274 0174 26       		.uleb128 0x26
 2275 0175 00       		.byte	0
 2276 0176 49       		.uleb128 0x49
 2277 0177 13       		.uleb128 0x13
 2278 0178 00       		.byte	0
 2279 0179 00       		.byte	0
 2280 017a 00       		.byte	0
 2281              		.section	.debug_aranges,"",%progbits
 2282 0000 74000000 		.4byte	0x74
 2283 0004 0200     		.2byte	0x2
 2284 0006 00000000 		.4byte	.Ldebug_info0
 2285 000a 04       		.byte	0x4
 2286 000b 00       		.byte	0
 2287 000c 0000     		.2byte	0
 2288 000e 0000     		.2byte	0
 2289 0010 00000000 		.4byte	.LFB0
 2290 0014 78000000 		.4byte	.LFE0-.LFB0
 2291 0018 00000000 		.4byte	.LFB1
 2292 001c 2C000000 		.4byte	.LFE1-.LFB1
 2293 0020 00000000 		.4byte	.LFB2
 2294 0024 26000000 		.4byte	.LFE2-.LFB2
 2295 0028 00000000 		.4byte	.LFB3
 2296 002c 6C000000 		.4byte	.LFE3-.LFB3
 2297 0030 00000000 		.4byte	.LFB4
 2298 0034 7C010000 		.4byte	.LFE4-.LFB4
 2299 0038 00000000 		.4byte	.LFB5
 2300 003c 50000000 		.4byte	.LFE5-.LFB5
 2301 0040 00000000 		.4byte	.LFB6
 2302 0044 08010000 		.4byte	.LFE6-.LFB6
 2303 0048 00000000 		.4byte	.LFB7
 2304 004c 54000000 		.4byte	.LFE7-.LFB7
 2305 0050 00000000 		.4byte	.LFB8
 2306 0054 38000000 		.4byte	.LFE8-.LFB8
 2307 0058 00000000 		.4byte	.LFB9
 2308 005c 68000000 		.4byte	.LFE9-.LFB9
 2309 0060 00000000 		.4byte	.LFB10
 2310 0064 6C000000 		.4byte	.LFE10-.LFB10
 2311 0068 00000000 		.4byte	.LFB11
 2312 006c 38000000 		.4byte	.LFE11-.LFB11
 2313 0070 00000000 		.4byte	0
 2314 0074 00000000 		.4byte	0
 2315              		.section	.debug_ranges,"",%progbits
 2316              	.Ldebug_ranges0:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 76


 2317 0000 00000000 		.4byte	.LFB0
 2318 0004 78000000 		.4byte	.LFE0
 2319 0008 00000000 		.4byte	.LFB1
 2320 000c 2C000000 		.4byte	.LFE1
 2321 0010 00000000 		.4byte	.LFB2
 2322 0014 26000000 		.4byte	.LFE2
 2323 0018 00000000 		.4byte	.LFB3
 2324 001c 6C000000 		.4byte	.LFE3
 2325 0020 00000000 		.4byte	.LFB4
 2326 0024 7C010000 		.4byte	.LFE4
 2327 0028 00000000 		.4byte	.LFB5
 2328 002c 50000000 		.4byte	.LFE5
 2329 0030 00000000 		.4byte	.LFB6
 2330 0034 08010000 		.4byte	.LFE6
 2331 0038 00000000 		.4byte	.LFB7
 2332 003c 54000000 		.4byte	.LFE7
 2333 0040 00000000 		.4byte	.LFB8
 2334 0044 38000000 		.4byte	.LFE8
 2335 0048 00000000 		.4byte	.LFB9
 2336 004c 68000000 		.4byte	.LFE9
 2337 0050 00000000 		.4byte	.LFB10
 2338 0054 6C000000 		.4byte	.LFE10
 2339 0058 00000000 		.4byte	.LFB11
 2340 005c 38000000 		.4byte	.LFE11
 2341 0060 00000000 		.4byte	0
 2342 0064 00000000 		.4byte	0
 2343              		.section	.debug_line,"",%progbits
 2344              	.Ldebug_line0:
 2345 0000 5A020000 		.section	.debug_str,"MS",%progbits,1
 2345      02006D00 
 2345      00000201 
 2345      FB0E0D00 
 2345      01010101 
 2346              	.LASF10:
 2347 0000 75696E74 		.ascii	"uint16\000"
 2347      313600
 2348              	.LASF26:
 2349 0007 66696C74 		.ascii	"filteredRawData\000"
 2349      65726564 
 2349      52617744 
 2349      61746100 
 2350              	.LASF54:
 2351 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 2351      656E7365 
 2351      5F687973 
 2351      74657265 
 2351      73697300 
 2352              	.LASF50:
 2353 002b 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2353      656E7365 
 2353      5F73656E 
 2353      736F724F 
 2353      6E4D6173 
 2354              	.LASF31:
 2355 0041 66696E67 		.ascii	"fingerThreshold\000"
 2355      65725468 
 2355      72657368 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 77


 2355      6F6C6400 
 2356              	.LASF7:
 2357 0051 6C6F6E67 		.ascii	"long long unsigned int\000"
 2357      206C6F6E 
 2357      6720756E 
 2357      7369676E 
 2357      65642069 
 2358              	.LASF49:
 2359 0068 43617053 		.ascii	"CapSense_sensorSignal\000"
 2359      656E7365 
 2359      5F73656E 
 2359      736F7253 
 2359      69676E61 
 2360              	.LASF21:
 2361 007e 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2361      656E7365 
 2361      5F496E69 
 2361      7469616C 
 2361      697A6545 
 2362              	.LASF28:
 2363 00a2 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2363      656E7365 
 2363      5F557064 
 2363      61746545 
 2363      6E61626C 
 2364              	.LASF6:
 2365 00c2 6C6F6E67 		.ascii	"long long int\000"
 2365      206C6F6E 
 2365      6720696E 
 2365      7400
 2366              	.LASF0:
 2367 00d0 7369676E 		.ascii	"signed char\000"
 2367      65642063 
 2367      68617200 
 2368              	.LASF41:
 2369 00dc 43617053 		.ascii	"CapSense_DisableWidget\000"
 2369      656E7365 
 2369      5F446973 
 2369      61626C65 
 2369      57696467 
 2370              	.LASF36:
 2371 00f3 72617749 		.ascii	"rawIndex\000"
 2371      6E646578 
 2371      00
 2372              	.LASF37:
 2373 00fc 6E756D62 		.ascii	"numberOfSensors\000"
 2373      65724F66 
 2373      53656E73 
 2373      6F727300 
 2374              	.LASF38:
 2375 010c 73746174 		.ascii	"state\000"
 2375      6500
 2376              	.LASF4:
 2377 0112 6C6F6E67 		.ascii	"long int\000"
 2377      20696E74 
 2377      00
 2378              	.LASF39:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 78


 2379 011b 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2379      656E7365 
 2379      5F436865 
 2379      636B4973 
 2379      416E7957 
 2380              	.LASF9:
 2381 013b 75696E74 		.ascii	"uint8\000"
 2381      3800
 2382              	.LASF13:
 2383 0141 646F7562 		.ascii	"double\000"
 2383      6C6500
 2384              	.LASF46:
 2385 0148 43617053 		.ascii	"CapSense_widgetNumber\000"
 2385      656E7365 
 2385      5F776964 
 2385      6765744E 
 2385      756D6265 
 2386              	.LASF11:
 2387 015e 75696E74 		.ascii	"uint32\000"
 2387      333200
 2388              	.LASF32:
 2389 0165 68797374 		.ascii	"hysteresis\000"
 2389      65726573 
 2389      697300
 2390              	.LASF42:
 2391 0170 43617053 		.ascii	"CapSense_IIR4Filter\000"
 2391      656E7365 
 2391      5F494952 
 2391      3446696C 
 2391      74657200 
 2392              	.LASF8:
 2393 0184 756E7369 		.ascii	"unsigned int\000"
 2393      676E6564 
 2393      20696E74 
 2393      00
 2394              	.LASF5:
 2395 0191 6C6F6E67 		.ascii	"long unsigned int\000"
 2395      20756E73 
 2395      69676E65 
 2395      6420696E 
 2395      7400
 2396              	.LASF48:
 2397 01a3 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2397      656E7365 
 2397      5F73656E 
 2397      736F7242 
 2397      6173656C 
 2398              	.LASF57:
 2399 01be 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2399      656E7365 
 2399      5F726177 
 2399      44617461 
 2399      496E6465 
 2400              	.LASF3:
 2401 01d4 73686F72 		.ascii	"short unsigned int\000"
 2401      7420756E 
 2401      7369676E 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 79


 2401      65642069 
 2401      6E7400
 2402              	.LASF18:
 2403 01e7 73656E73 		.ascii	"sensor\000"
 2403      6F7200
 2404              	.LASF45:
 2405 01ee 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2405      656E7365 
 2405      5F73656E 
 2405      736F7245 
 2405      6E61626C 
 2406              	.LASF23:
 2407 0208 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2407      656E7365 
 2407      5F557064 
 2407      61746553 
 2407      656E736F 
 2408              	.LASF60:
 2409 0226 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 2409      6E657261 
 2409      7465645F 
 2409      536F7572 
 2409      63655C50 
 2410              	.LASF24:
 2411 024f 63616C63 		.ascii	"calc\000"
 2411      00
 2412              	.LASF33:
 2413 0254 6465626F 		.ascii	"debounce\000"
 2413      756E6365 
 2413      00
 2414              	.LASF15:
 2415 025d 73697A65 		.ascii	"sizetype\000"
 2415      74797065 
 2415      00
 2416              	.LASF40:
 2417 0266 43617053 		.ascii	"CapSense_EnableWidget\000"
 2417      656E7365 
 2417      5F456E61 
 2417      626C6557 
 2417      69646765 
 2418              	.LASF17:
 2419 027c 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2419      656E7365 
 2419      5F496E69 
 2419      7469616C 
 2419      697A6553 
 2420              	.LASF34:
 2421 029e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 2421      656E7365 
 2421      5F436865 
 2421      636B4973 
 2421      53656E73 
 2422              	.LASF22:
 2423 02bb 656E4D61 		.ascii	"enMask\000"
 2423      736B00
 2424              	.LASF53:
 2425 02c2 43617053 		.ascii	"CapSense_noiseThreshold\000"
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 80


 2425      656E7365 
 2425      5F6E6F69 
 2425      73655468 
 2425      72657368 
 2426              	.LASF59:
 2427 02da 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2427      4320342E 
 2427      392E3320 
 2427      32303135 
 2427      30333033 
 2428 030d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2428      20726576 
 2428      6973696F 
 2428      6E203232 
 2428      31323230 
 2429 0340 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2429      66756E63 
 2429      74696F6E 
 2429      2D736563 
 2429      74696F6E 
 2430              	.LASF52:
 2431 0368 43617053 		.ascii	"CapSense_fingerThreshold\000"
 2431      656E7365 
 2431      5F66696E 
 2431      67657254 
 2431      68726573 
 2432              	.LASF44:
 2433 0381 43617053 		.ascii	"CapSense_rawFilterData1\000"
 2433      656E7365 
 2433      5F726177 
 2433      46696C74 
 2433      65724461 
 2434              	.LASF12:
 2435 0399 666C6F61 		.ascii	"float\000"
 2435      7400
 2436              	.LASF35:
 2437 039f 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 2437      656E7365 
 2437      5F436865 
 2437      636B4973 
 2437      57696467 
 2438              	.LASF1:
 2439 03bc 756E7369 		.ascii	"unsigned char\000"
 2439      676E6564 
 2439      20636861 
 2439      7200
 2440              	.LASF19:
 2441 03ca 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2441      656E7365 
 2441      5F496E69 
 2441      7469616C 
 2441      697A6541 
 2442              	.LASF27:
 2443 03ea 6E6F6973 		.ascii	"noiseThreshold\000"
 2443      65546872 
 2443      6573686F 
 2443      6C6400
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 81


 2444              	.LASF2:
 2445 03f9 73686F72 		.ascii	"short int\000"
 2445      7420696E 
 2445      7400
 2446              	.LASF20:
 2447 0403 77696467 		.ascii	"widget\000"
 2447      657400
 2448              	.LASF30:
 2449 040a 6F6E4D61 		.ascii	"onMask\000"
 2449      736B00
 2450              	.LASF16:
 2451 0411 43617053 		.ascii	"CapSense_BaseInit\000"
 2451      656E7365 
 2451      5F426173 
 2451      65496E69 
 2451      7400
 2452              	.LASF51:
 2453 0423 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 2453      656E7365 
 2453      5F6C6F77 
 2453      42617365 
 2453      6C696E65 
 2454              	.LASF55:
 2455 0440 43617053 		.ascii	"CapSense_debounce\000"
 2455      656E7365 
 2455      5F646562 
 2455      6F756E63 
 2455      6500
 2456              	.LASF47:
 2457 0452 43617053 		.ascii	"CapSense_sensorBaseline\000"
 2457      656E7365 
 2457      5F73656E 
 2457      736F7242 
 2457      6173656C 
 2458              	.LASF14:
 2459 046a 63686172 		.ascii	"char\000"
 2459      00
 2460              	.LASF29:
 2461 046f 6465626F 		.ascii	"debounceIndex\000"
 2461      756E6365 
 2461      496E6465 
 2461      7800
 2462              	.LASF61:
 2463 047d 433A5C55 		.ascii	"C:\\Users\\mark6\\Google Drive\\College-MIT\\S6Spri"
 2463      73657273 
 2463      5C6D6172 
 2463      6B365C47 
 2463      6F6F676C 
 2464 04ab 6E673230 		.ascii	"ng2020\\6.115\\FinalProject\\BunkerKnowledge\\PSoC_"
 2464      32305C36 
 2464      2E313135 
 2464      5C46696E 
 2464      616C5072 
 2465 04da 355F4669 		.ascii	"5_Files\\Processor.cydsn\000"
 2465      6C65735C 
 2465      50726F63 
 2465      6573736F 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cck3i6RX.s 			page 82


 2465      722E6379 
 2466              	.LASF43:
 2467 04f2 43617053 		.ascii	"CapSense_sensorRaw\000"
 2467      656E7365 
 2467      5F73656E 
 2467      736F7252 
 2467      617700
 2468              	.LASF56:
 2469 0505 43617053 		.ascii	"CapSense_debounceCounter\000"
 2469      656E7365 
 2469      5F646562 
 2469      6F756E63 
 2469      65436F75 
 2470              	.LASF25:
 2471 051e 74656D70 		.ascii	"tempRaw\000"
 2471      52617700 
 2472              	.LASF58:
 2473 0526 43617053 		.ascii	"CapSense_numberOfSensors\000"
 2473      656E7365 
 2473      5F6E756D 
 2473      6265724F 
 2473      6653656E 
 2474              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
